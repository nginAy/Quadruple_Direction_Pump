
pompa_4baslikli_v1.0.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00008bd0  08000188  08000188  00010188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003f0  08008d58  08008d58  00018d58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08009148  08009148  0002001c  2**0
                  CONTENTS
  4 .ARM          00000008  08009148  08009148  00019148  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08009150  08009150  0002001c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08009150  08009150  00019150  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08009154  08009154  00019154  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000001c  20000000  08009158  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0002001c  2**0
                  CONTENTS
 10 .bss          0000066c  2000001c  2000001c  0002001c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000688  20000688  0002001c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0002001c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00010eac  00000000  00000000  0002004c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000026bc  00000000  00000000  00030ef8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00001080  00000000  00000000  000335b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000f90  00000000  00000000  00034638  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0002188c  00000000  00000000  000355c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00014202  00000000  00000000  00056e54  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000cb4ce  00000000  00000000  0006b056  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  00136524  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00004538  00000000  00000000  00136578  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	2000001c 	.word	0x2000001c
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08008d40 	.word	0x08008d40

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000020 	.word	0x20000020
 80001c4:	08008d40 	.word	0x08008d40

080001c8 <__aeabi_uldivmod>:
 80001c8:	b953      	cbnz	r3, 80001e0 <__aeabi_uldivmod+0x18>
 80001ca:	b94a      	cbnz	r2, 80001e0 <__aeabi_uldivmod+0x18>
 80001cc:	2900      	cmp	r1, #0
 80001ce:	bf08      	it	eq
 80001d0:	2800      	cmpeq	r0, #0
 80001d2:	bf1c      	itt	ne
 80001d4:	f04f 31ff 	movne.w	r1, #4294967295
 80001d8:	f04f 30ff 	movne.w	r0, #4294967295
 80001dc:	f000 b96e 	b.w	80004bc <__aeabi_idiv0>
 80001e0:	f1ad 0c08 	sub.w	ip, sp, #8
 80001e4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80001e8:	f000 f806 	bl	80001f8 <__udivmoddi4>
 80001ec:	f8dd e004 	ldr.w	lr, [sp, #4]
 80001f0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80001f4:	b004      	add	sp, #16
 80001f6:	4770      	bx	lr

080001f8 <__udivmoddi4>:
 80001f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80001fc:	9d08      	ldr	r5, [sp, #32]
 80001fe:	4604      	mov	r4, r0
 8000200:	468c      	mov	ip, r1
 8000202:	2b00      	cmp	r3, #0
 8000204:	f040 8083 	bne.w	800030e <__udivmoddi4+0x116>
 8000208:	428a      	cmp	r2, r1
 800020a:	4617      	mov	r7, r2
 800020c:	d947      	bls.n	800029e <__udivmoddi4+0xa6>
 800020e:	fab2 f282 	clz	r2, r2
 8000212:	b142      	cbz	r2, 8000226 <__udivmoddi4+0x2e>
 8000214:	f1c2 0020 	rsb	r0, r2, #32
 8000218:	fa24 f000 	lsr.w	r0, r4, r0
 800021c:	4091      	lsls	r1, r2
 800021e:	4097      	lsls	r7, r2
 8000220:	ea40 0c01 	orr.w	ip, r0, r1
 8000224:	4094      	lsls	r4, r2
 8000226:	ea4f 4817 	mov.w	r8, r7, lsr #16
 800022a:	0c23      	lsrs	r3, r4, #16
 800022c:	fbbc f6f8 	udiv	r6, ip, r8
 8000230:	fa1f fe87 	uxth.w	lr, r7
 8000234:	fb08 c116 	mls	r1, r8, r6, ip
 8000238:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800023c:	fb06 f10e 	mul.w	r1, r6, lr
 8000240:	4299      	cmp	r1, r3
 8000242:	d909      	bls.n	8000258 <__udivmoddi4+0x60>
 8000244:	18fb      	adds	r3, r7, r3
 8000246:	f106 30ff 	add.w	r0, r6, #4294967295
 800024a:	f080 8119 	bcs.w	8000480 <__udivmoddi4+0x288>
 800024e:	4299      	cmp	r1, r3
 8000250:	f240 8116 	bls.w	8000480 <__udivmoddi4+0x288>
 8000254:	3e02      	subs	r6, #2
 8000256:	443b      	add	r3, r7
 8000258:	1a5b      	subs	r3, r3, r1
 800025a:	b2a4      	uxth	r4, r4
 800025c:	fbb3 f0f8 	udiv	r0, r3, r8
 8000260:	fb08 3310 	mls	r3, r8, r0, r3
 8000264:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000268:	fb00 fe0e 	mul.w	lr, r0, lr
 800026c:	45a6      	cmp	lr, r4
 800026e:	d909      	bls.n	8000284 <__udivmoddi4+0x8c>
 8000270:	193c      	adds	r4, r7, r4
 8000272:	f100 33ff 	add.w	r3, r0, #4294967295
 8000276:	f080 8105 	bcs.w	8000484 <__udivmoddi4+0x28c>
 800027a:	45a6      	cmp	lr, r4
 800027c:	f240 8102 	bls.w	8000484 <__udivmoddi4+0x28c>
 8000280:	3802      	subs	r0, #2
 8000282:	443c      	add	r4, r7
 8000284:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000288:	eba4 040e 	sub.w	r4, r4, lr
 800028c:	2600      	movs	r6, #0
 800028e:	b11d      	cbz	r5, 8000298 <__udivmoddi4+0xa0>
 8000290:	40d4      	lsrs	r4, r2
 8000292:	2300      	movs	r3, #0
 8000294:	e9c5 4300 	strd	r4, r3, [r5]
 8000298:	4631      	mov	r1, r6
 800029a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800029e:	b902      	cbnz	r2, 80002a2 <__udivmoddi4+0xaa>
 80002a0:	deff      	udf	#255	; 0xff
 80002a2:	fab2 f282 	clz	r2, r2
 80002a6:	2a00      	cmp	r2, #0
 80002a8:	d150      	bne.n	800034c <__udivmoddi4+0x154>
 80002aa:	1bcb      	subs	r3, r1, r7
 80002ac:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80002b0:	fa1f f887 	uxth.w	r8, r7
 80002b4:	2601      	movs	r6, #1
 80002b6:	fbb3 fcfe 	udiv	ip, r3, lr
 80002ba:	0c21      	lsrs	r1, r4, #16
 80002bc:	fb0e 331c 	mls	r3, lr, ip, r3
 80002c0:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80002c4:	fb08 f30c 	mul.w	r3, r8, ip
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d907      	bls.n	80002dc <__udivmoddi4+0xe4>
 80002cc:	1879      	adds	r1, r7, r1
 80002ce:	f10c 30ff 	add.w	r0, ip, #4294967295
 80002d2:	d202      	bcs.n	80002da <__udivmoddi4+0xe2>
 80002d4:	428b      	cmp	r3, r1
 80002d6:	f200 80e9 	bhi.w	80004ac <__udivmoddi4+0x2b4>
 80002da:	4684      	mov	ip, r0
 80002dc:	1ac9      	subs	r1, r1, r3
 80002de:	b2a3      	uxth	r3, r4
 80002e0:	fbb1 f0fe 	udiv	r0, r1, lr
 80002e4:	fb0e 1110 	mls	r1, lr, r0, r1
 80002e8:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 80002ec:	fb08 f800 	mul.w	r8, r8, r0
 80002f0:	45a0      	cmp	r8, r4
 80002f2:	d907      	bls.n	8000304 <__udivmoddi4+0x10c>
 80002f4:	193c      	adds	r4, r7, r4
 80002f6:	f100 33ff 	add.w	r3, r0, #4294967295
 80002fa:	d202      	bcs.n	8000302 <__udivmoddi4+0x10a>
 80002fc:	45a0      	cmp	r8, r4
 80002fe:	f200 80d9 	bhi.w	80004b4 <__udivmoddi4+0x2bc>
 8000302:	4618      	mov	r0, r3
 8000304:	eba4 0408 	sub.w	r4, r4, r8
 8000308:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 800030c:	e7bf      	b.n	800028e <__udivmoddi4+0x96>
 800030e:	428b      	cmp	r3, r1
 8000310:	d909      	bls.n	8000326 <__udivmoddi4+0x12e>
 8000312:	2d00      	cmp	r5, #0
 8000314:	f000 80b1 	beq.w	800047a <__udivmoddi4+0x282>
 8000318:	2600      	movs	r6, #0
 800031a:	e9c5 0100 	strd	r0, r1, [r5]
 800031e:	4630      	mov	r0, r6
 8000320:	4631      	mov	r1, r6
 8000322:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000326:	fab3 f683 	clz	r6, r3
 800032a:	2e00      	cmp	r6, #0
 800032c:	d14a      	bne.n	80003c4 <__udivmoddi4+0x1cc>
 800032e:	428b      	cmp	r3, r1
 8000330:	d302      	bcc.n	8000338 <__udivmoddi4+0x140>
 8000332:	4282      	cmp	r2, r0
 8000334:	f200 80b8 	bhi.w	80004a8 <__udivmoddi4+0x2b0>
 8000338:	1a84      	subs	r4, r0, r2
 800033a:	eb61 0103 	sbc.w	r1, r1, r3
 800033e:	2001      	movs	r0, #1
 8000340:	468c      	mov	ip, r1
 8000342:	2d00      	cmp	r5, #0
 8000344:	d0a8      	beq.n	8000298 <__udivmoddi4+0xa0>
 8000346:	e9c5 4c00 	strd	r4, ip, [r5]
 800034a:	e7a5      	b.n	8000298 <__udivmoddi4+0xa0>
 800034c:	f1c2 0320 	rsb	r3, r2, #32
 8000350:	fa20 f603 	lsr.w	r6, r0, r3
 8000354:	4097      	lsls	r7, r2
 8000356:	fa01 f002 	lsl.w	r0, r1, r2
 800035a:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 800035e:	40d9      	lsrs	r1, r3
 8000360:	4330      	orrs	r0, r6
 8000362:	0c03      	lsrs	r3, r0, #16
 8000364:	fbb1 f6fe 	udiv	r6, r1, lr
 8000368:	fa1f f887 	uxth.w	r8, r7
 800036c:	fb0e 1116 	mls	r1, lr, r6, r1
 8000370:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000374:	fb06 f108 	mul.w	r1, r6, r8
 8000378:	4299      	cmp	r1, r3
 800037a:	fa04 f402 	lsl.w	r4, r4, r2
 800037e:	d909      	bls.n	8000394 <__udivmoddi4+0x19c>
 8000380:	18fb      	adds	r3, r7, r3
 8000382:	f106 3cff 	add.w	ip, r6, #4294967295
 8000386:	f080 808d 	bcs.w	80004a4 <__udivmoddi4+0x2ac>
 800038a:	4299      	cmp	r1, r3
 800038c:	f240 808a 	bls.w	80004a4 <__udivmoddi4+0x2ac>
 8000390:	3e02      	subs	r6, #2
 8000392:	443b      	add	r3, r7
 8000394:	1a5b      	subs	r3, r3, r1
 8000396:	b281      	uxth	r1, r0
 8000398:	fbb3 f0fe 	udiv	r0, r3, lr
 800039c:	fb0e 3310 	mls	r3, lr, r0, r3
 80003a0:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80003a4:	fb00 f308 	mul.w	r3, r0, r8
 80003a8:	428b      	cmp	r3, r1
 80003aa:	d907      	bls.n	80003bc <__udivmoddi4+0x1c4>
 80003ac:	1879      	adds	r1, r7, r1
 80003ae:	f100 3cff 	add.w	ip, r0, #4294967295
 80003b2:	d273      	bcs.n	800049c <__udivmoddi4+0x2a4>
 80003b4:	428b      	cmp	r3, r1
 80003b6:	d971      	bls.n	800049c <__udivmoddi4+0x2a4>
 80003b8:	3802      	subs	r0, #2
 80003ba:	4439      	add	r1, r7
 80003bc:	1acb      	subs	r3, r1, r3
 80003be:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 80003c2:	e778      	b.n	80002b6 <__udivmoddi4+0xbe>
 80003c4:	f1c6 0c20 	rsb	ip, r6, #32
 80003c8:	fa03 f406 	lsl.w	r4, r3, r6
 80003cc:	fa22 f30c 	lsr.w	r3, r2, ip
 80003d0:	431c      	orrs	r4, r3
 80003d2:	fa20 f70c 	lsr.w	r7, r0, ip
 80003d6:	fa01 f306 	lsl.w	r3, r1, r6
 80003da:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 80003de:	fa21 f10c 	lsr.w	r1, r1, ip
 80003e2:	431f      	orrs	r7, r3
 80003e4:	0c3b      	lsrs	r3, r7, #16
 80003e6:	fbb1 f9fe 	udiv	r9, r1, lr
 80003ea:	fa1f f884 	uxth.w	r8, r4
 80003ee:	fb0e 1119 	mls	r1, lr, r9, r1
 80003f2:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 80003f6:	fb09 fa08 	mul.w	sl, r9, r8
 80003fa:	458a      	cmp	sl, r1
 80003fc:	fa02 f206 	lsl.w	r2, r2, r6
 8000400:	fa00 f306 	lsl.w	r3, r0, r6
 8000404:	d908      	bls.n	8000418 <__udivmoddi4+0x220>
 8000406:	1861      	adds	r1, r4, r1
 8000408:	f109 30ff 	add.w	r0, r9, #4294967295
 800040c:	d248      	bcs.n	80004a0 <__udivmoddi4+0x2a8>
 800040e:	458a      	cmp	sl, r1
 8000410:	d946      	bls.n	80004a0 <__udivmoddi4+0x2a8>
 8000412:	f1a9 0902 	sub.w	r9, r9, #2
 8000416:	4421      	add	r1, r4
 8000418:	eba1 010a 	sub.w	r1, r1, sl
 800041c:	b2bf      	uxth	r7, r7
 800041e:	fbb1 f0fe 	udiv	r0, r1, lr
 8000422:	fb0e 1110 	mls	r1, lr, r0, r1
 8000426:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 800042a:	fb00 f808 	mul.w	r8, r0, r8
 800042e:	45b8      	cmp	r8, r7
 8000430:	d907      	bls.n	8000442 <__udivmoddi4+0x24a>
 8000432:	19e7      	adds	r7, r4, r7
 8000434:	f100 31ff 	add.w	r1, r0, #4294967295
 8000438:	d22e      	bcs.n	8000498 <__udivmoddi4+0x2a0>
 800043a:	45b8      	cmp	r8, r7
 800043c:	d92c      	bls.n	8000498 <__udivmoddi4+0x2a0>
 800043e:	3802      	subs	r0, #2
 8000440:	4427      	add	r7, r4
 8000442:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000446:	eba7 0708 	sub.w	r7, r7, r8
 800044a:	fba0 8902 	umull	r8, r9, r0, r2
 800044e:	454f      	cmp	r7, r9
 8000450:	46c6      	mov	lr, r8
 8000452:	4649      	mov	r1, r9
 8000454:	d31a      	bcc.n	800048c <__udivmoddi4+0x294>
 8000456:	d017      	beq.n	8000488 <__udivmoddi4+0x290>
 8000458:	b15d      	cbz	r5, 8000472 <__udivmoddi4+0x27a>
 800045a:	ebb3 020e 	subs.w	r2, r3, lr
 800045e:	eb67 0701 	sbc.w	r7, r7, r1
 8000462:	fa07 fc0c 	lsl.w	ip, r7, ip
 8000466:	40f2      	lsrs	r2, r6
 8000468:	ea4c 0202 	orr.w	r2, ip, r2
 800046c:	40f7      	lsrs	r7, r6
 800046e:	e9c5 2700 	strd	r2, r7, [r5]
 8000472:	2600      	movs	r6, #0
 8000474:	4631      	mov	r1, r6
 8000476:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800047a:	462e      	mov	r6, r5
 800047c:	4628      	mov	r0, r5
 800047e:	e70b      	b.n	8000298 <__udivmoddi4+0xa0>
 8000480:	4606      	mov	r6, r0
 8000482:	e6e9      	b.n	8000258 <__udivmoddi4+0x60>
 8000484:	4618      	mov	r0, r3
 8000486:	e6fd      	b.n	8000284 <__udivmoddi4+0x8c>
 8000488:	4543      	cmp	r3, r8
 800048a:	d2e5      	bcs.n	8000458 <__udivmoddi4+0x260>
 800048c:	ebb8 0e02 	subs.w	lr, r8, r2
 8000490:	eb69 0104 	sbc.w	r1, r9, r4
 8000494:	3801      	subs	r0, #1
 8000496:	e7df      	b.n	8000458 <__udivmoddi4+0x260>
 8000498:	4608      	mov	r0, r1
 800049a:	e7d2      	b.n	8000442 <__udivmoddi4+0x24a>
 800049c:	4660      	mov	r0, ip
 800049e:	e78d      	b.n	80003bc <__udivmoddi4+0x1c4>
 80004a0:	4681      	mov	r9, r0
 80004a2:	e7b9      	b.n	8000418 <__udivmoddi4+0x220>
 80004a4:	4666      	mov	r6, ip
 80004a6:	e775      	b.n	8000394 <__udivmoddi4+0x19c>
 80004a8:	4630      	mov	r0, r6
 80004aa:	e74a      	b.n	8000342 <__udivmoddi4+0x14a>
 80004ac:	f1ac 0c02 	sub.w	ip, ip, #2
 80004b0:	4439      	add	r1, r7
 80004b2:	e713      	b.n	80002dc <__udivmoddi4+0xe4>
 80004b4:	3802      	subs	r0, #2
 80004b6:	443c      	add	r4, r7
 80004b8:	e724      	b.n	8000304 <__udivmoddi4+0x10c>
 80004ba:	bf00      	nop

080004bc <__aeabi_idiv0>:
 80004bc:	4770      	bx	lr
 80004be:	bf00      	nop

080004c0 <GPIO_Config>:

/********************* Private function for I2C initialization *************************/

/* Configure GPIOs */
static void GPIO_Config(void)
{
 80004c0:	b580      	push	{r7, lr}
 80004c2:	b088      	sub	sp, #32
 80004c4:	af00      	add	r7, sp, #0
	//Enable Ports clocks
	__HAL_RCC_GPIOD_CLK_ENABLE();
 80004c6:	2300      	movs	r3, #0
 80004c8:	60bb      	str	r3, [r7, #8]
 80004ca:	4b20      	ldr	r3, [pc, #128]	; (800054c <GPIO_Config+0x8c>)
 80004cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004ce:	4a1f      	ldr	r2, [pc, #124]	; (800054c <GPIO_Config+0x8c>)
 80004d0:	f043 0308 	orr.w	r3, r3, #8
 80004d4:	6313      	str	r3, [r2, #48]	; 0x30
 80004d6:	4b1d      	ldr	r3, [pc, #116]	; (800054c <GPIO_Config+0x8c>)
 80004d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004da:	f003 0308 	and.w	r3, r3, #8
 80004de:	60bb      	str	r3, [r7, #8]
 80004e0:	68bb      	ldr	r3, [r7, #8]
	__HAL_RCC_GPIOB_CLK_ENABLE();
 80004e2:	2300      	movs	r3, #0
 80004e4:	607b      	str	r3, [r7, #4]
 80004e6:	4b19      	ldr	r3, [pc, #100]	; (800054c <GPIO_Config+0x8c>)
 80004e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004ea:	4a18      	ldr	r2, [pc, #96]	; (800054c <GPIO_Config+0x8c>)
 80004ec:	f043 0302 	orr.w	r3, r3, #2
 80004f0:	6313      	str	r3, [r2, #48]	; 0x30
 80004f2:	4b16      	ldr	r3, [pc, #88]	; (800054c <GPIO_Config+0x8c>)
 80004f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004f6:	f003 0302 	and.w	r3, r3, #2
 80004fa:	607b      	str	r3, [r7, #4]
 80004fc:	687b      	ldr	r3, [r7, #4]

	//Init tyoeDef
	GPIO_InitTypeDef myPinInit;

	//I2C pins config
	myPinInit.Pin = GPIO_PIN_6 |GPIO_PIN_7;
 80004fe:	23c0      	movs	r3, #192	; 0xc0
 8000500:	60fb      	str	r3, [r7, #12]
	myPinInit.Mode = GPIO_MODE_AF_OD;
 8000502:	2312      	movs	r3, #18
 8000504:	613b      	str	r3, [r7, #16]
	myPinInit.Pull = GPIO_PULLUP;
 8000506:	2301      	movs	r3, #1
 8000508:	617b      	str	r3, [r7, #20]
	myPinInit.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800050a:	2303      	movs	r3, #3
 800050c:	61bb      	str	r3, [r7, #24]
	myPinInit.Alternate = GPIO_AF4_I2C1;
 800050e:	2304      	movs	r3, #4
 8000510:	61fb      	str	r3, [r7, #28]
	HAL_GPIO_Init(GPIOB, &myPinInit);
 8000512:	f107 030c 	add.w	r3, r7, #12
 8000516:	4619      	mov	r1, r3
 8000518:	480d      	ldr	r0, [pc, #52]	; (8000550 <GPIO_Config+0x90>)
 800051a:	f006 fc75 	bl	8006e08 <HAL_GPIO_Init>

	//Systick interrupt enable for HAL_Delay function
    HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 800051e:	f007 fffb 	bl	8008518 <HAL_RCC_GetHCLKFreq>
 8000522:	4603      	mov	r3, r0
 8000524:	4a0b      	ldr	r2, [pc, #44]	; (8000554 <GPIO_Config+0x94>)
 8000526:	fba2 2303 	umull	r2, r3, r2, r3
 800052a:	099b      	lsrs	r3, r3, #6
 800052c:	4618      	mov	r0, r3
 800052e:	f006 fa44 	bl	80069ba <HAL_SYSTICK_Config>
    HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 8000532:	2004      	movs	r0, #4
 8000534:	f006 fa4e 	bl	80069d4 <HAL_SYSTICK_CLKSourceConfig>
    HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 8000538:	2200      	movs	r2, #0
 800053a:	2100      	movs	r1, #0
 800053c:	f04f 30ff 	mov.w	r0, #4294967295
 8000540:	f006 fa1f 	bl	8006982 <HAL_NVIC_SetPriority>

}
 8000544:	bf00      	nop
 8000546:	3720      	adds	r7, #32
 8000548:	46bd      	mov	sp, r7
 800054a:	bd80      	pop	{r7, pc}
 800054c:	40023800 	.word	0x40023800
 8000550:	40020400 	.word	0x40020400
 8000554:	10624dd3 	.word	0x10624dd3

08000558 <I2C_Config>:


/*Configure I2C Peripheral */
static void I2C_Config(void)
{
 8000558:	b580      	push	{r7, lr}
 800055a:	b082      	sub	sp, #8
 800055c:	af00      	add	r7, sp, #0
	//Enable I2C peripheral clock
	__HAL_RCC_I2C1_CLK_ENABLE();
 800055e:	2300      	movs	r3, #0
 8000560:	607b      	str	r3, [r7, #4]
 8000562:	4b17      	ldr	r3, [pc, #92]	; (80005c0 <I2C_Config+0x68>)
 8000564:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000566:	4a16      	ldr	r2, [pc, #88]	; (80005c0 <I2C_Config+0x68>)
 8000568:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800056c:	6413      	str	r3, [r2, #64]	; 0x40
 800056e:	4b14      	ldr	r3, [pc, #80]	; (80005c0 <I2C_Config+0x68>)
 8000570:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000572:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8000576:	607b      	str	r3, [r7, #4]
 8000578:	687b      	ldr	r3, [r7, #4]

	myI2Chandle.Instance = I2C1;
 800057a:	4b12      	ldr	r3, [pc, #72]	; (80005c4 <I2C_Config+0x6c>)
 800057c:	4a12      	ldr	r2, [pc, #72]	; (80005c8 <I2C_Config+0x70>)
 800057e:	601a      	str	r2, [r3, #0]
	myI2Chandle.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000580:	4b10      	ldr	r3, [pc, #64]	; (80005c4 <I2C_Config+0x6c>)
 8000582:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000586:	611a      	str	r2, [r3, #16]
	myI2Chandle.Init.ClockSpeed = 100000;
 8000588:	4b0e      	ldr	r3, [pc, #56]	; (80005c4 <I2C_Config+0x6c>)
 800058a:	4a10      	ldr	r2, [pc, #64]	; (80005cc <I2C_Config+0x74>)
 800058c:	605a      	str	r2, [r3, #4]
	myI2Chandle.Init.DualAddressMode = I2C_DUALADDRESS_DISABLED;
 800058e:	4b0d      	ldr	r3, [pc, #52]	; (80005c4 <I2C_Config+0x6c>)
 8000590:	2200      	movs	r2, #0
 8000592:	615a      	str	r2, [r3, #20]
	myI2Chandle.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8000594:	4b0b      	ldr	r3, [pc, #44]	; (80005c4 <I2C_Config+0x6c>)
 8000596:	2200      	movs	r2, #0
 8000598:	609a      	str	r2, [r3, #8]
	myI2Chandle.Init.GeneralCallMode = I2C_GENERALCALL_DISABLED;
 800059a:	4b0a      	ldr	r3, [pc, #40]	; (80005c4 <I2C_Config+0x6c>)
 800059c:	2200      	movs	r2, #0
 800059e:	61da      	str	r2, [r3, #28]
	myI2Chandle.Init.NoStretchMode = I2C_NOSTRETCH_DISABLED;
 80005a0:	4b08      	ldr	r3, [pc, #32]	; (80005c4 <I2C_Config+0x6c>)
 80005a2:	2200      	movs	r2, #0
 80005a4:	621a      	str	r2, [r3, #32]
	myI2Chandle.Init.OwnAddress1 = 0;
 80005a6:	4b07      	ldr	r3, [pc, #28]	; (80005c4 <I2C_Config+0x6c>)
 80005a8:	2200      	movs	r2, #0
 80005aa:	60da      	str	r2, [r3, #12]
	myI2Chandle.Init.OwnAddress2 = 0;
 80005ac:	4b05      	ldr	r3, [pc, #20]	; (80005c4 <I2C_Config+0x6c>)
 80005ae:	2200      	movs	r2, #0
 80005b0:	619a      	str	r2, [r3, #24]
	HAL_I2C_Init(&myI2Chandle);
 80005b2:	4804      	ldr	r0, [pc, #16]	; (80005c4 <I2C_Config+0x6c>)
 80005b4:	f006 fdf6 	bl	80071a4 <HAL_I2C_Init>
}
 80005b8:	bf00      	nop
 80005ba:	3708      	adds	r7, #8
 80005bc:	46bd      	mov	sp, r7
 80005be:	bd80      	pop	{r7, pc}
 80005c0:	40023800 	.word	0x40023800
 80005c4:	200000d4 	.word	0x200000d4
 80005c8:	40005400 	.word	0x40005400
 80005cc:	000186a0 	.word	0x000186a0

080005d0 <LCD_Send_Cmd>:
 * @brief Send Command to LCD
 * @param cmd : LCD commands
 * @retval None
 */
void LCD_Send_Cmd(uint8_t cmd)
{
 80005d0:	b580      	push	{r7, lr}
 80005d2:	b086      	sub	sp, #24
 80005d4:	af02      	add	r7, sp, #8
 80005d6:	4603      	mov	r3, r0
 80005d8:	71fb      	strb	r3, [r7, #7]
	uint8_t data_u, data_l;
	uint8_t data_u_tx[2], data_l_tx[2];

	/*Store upper nibble*/
	data_u = (cmd & 0xF0);
 80005da:	79fb      	ldrb	r3, [r7, #7]
 80005dc:	f023 030f 	bic.w	r3, r3, #15
 80005e0:	73fb      	strb	r3, [r7, #15]

	/*Store lower nibble*/
	data_l = ((cmd << 4) & 0xF0);
 80005e2:	79fb      	ldrb	r3, [r7, #7]
 80005e4:	011b      	lsls	r3, r3, #4
 80005e6:	73bb      	strb	r3, [r7, #14]

	/* Construct upper byte-> compatible for LCD*/
	data_u_tx[0] = data_u|BACKLIGHT|PIN_EN;
 80005e8:	7bfb      	ldrb	r3, [r7, #15]
 80005ea:	f043 030c 	orr.w	r3, r3, #12
 80005ee:	b2db      	uxtb	r3, r3
 80005f0:	733b      	strb	r3, [r7, #12]
	data_u_tx[1] = data_u|BACKLIGHT;
 80005f2:	7bfb      	ldrb	r3, [r7, #15]
 80005f4:	f043 0308 	orr.w	r3, r3, #8
 80005f8:	b2db      	uxtb	r3, r3
 80005fa:	737b      	strb	r3, [r7, #13]

	/* Construct lower byte-> compatible for LCD*/
	data_l_tx[0] = data_l|BACKLIGHT|PIN_EN;
 80005fc:	7bbb      	ldrb	r3, [r7, #14]
 80005fe:	f043 030c 	orr.w	r3, r3, #12
 8000602:	b2db      	uxtb	r3, r3
 8000604:	723b      	strb	r3, [r7, #8]
	data_l_tx[1] = data_l|BACKLIGHT;
 8000606:	7bbb      	ldrb	r3, [r7, #14]
 8000608:	f043 0308 	orr.w	r3, r3, #8
 800060c:	b2db      	uxtb	r3, r3
 800060e:	727b      	strb	r3, [r7, #9]

	/* Transmit upper nibble using I2C APIs*/
	if(HAL_I2C_IsDeviceReady(& myI2Chandle, I2C_SLAVE_ADDRESS, 1, 10) == HAL_OK)
 8000610:	230a      	movs	r3, #10
 8000612:	2201      	movs	r2, #1
 8000614:	214e      	movs	r1, #78	; 0x4e
 8000616:	4815      	ldr	r0, [pc, #84]	; (800066c <LCD_Send_Cmd+0x9c>)
 8000618:	f007 f806 	bl	8007628 <HAL_I2C_IsDeviceReady>
 800061c:	4603      	mov	r3, r0
 800061e:	2b00      	cmp	r3, #0
 8000620:	d108      	bne.n	8000634 <LCD_Send_Cmd+0x64>
		HAL_I2C_Master_Transmit(& myI2Chandle,I2C_SLAVE_ADDRESS, data_u_tx, 2, 100);
 8000622:	f107 020c 	add.w	r2, r7, #12
 8000626:	2364      	movs	r3, #100	; 0x64
 8000628:	9300      	str	r3, [sp, #0]
 800062a:	2302      	movs	r3, #2
 800062c:	214e      	movs	r1, #78	; 0x4e
 800062e:	480f      	ldr	r0, [pc, #60]	; (800066c <LCD_Send_Cmd+0x9c>)
 8000630:	f006 fefc 	bl	800742c <HAL_I2C_Master_Transmit>

	/*Provide a delay */
	HAL_Delay(5);
 8000634:	2005      	movs	r0, #5
 8000636:	f006 f8c3 	bl	80067c0 <HAL_Delay>

	/* Transmit lower nibble using I2C APIs*/
	if(HAL_I2C_IsDeviceReady(& myI2Chandle, I2C_SLAVE_ADDRESS, 1, 10) == HAL_OK)
 800063a:	230a      	movs	r3, #10
 800063c:	2201      	movs	r2, #1
 800063e:	214e      	movs	r1, #78	; 0x4e
 8000640:	480a      	ldr	r0, [pc, #40]	; (800066c <LCD_Send_Cmd+0x9c>)
 8000642:	f006 fff1 	bl	8007628 <HAL_I2C_IsDeviceReady>
 8000646:	4603      	mov	r3, r0
 8000648:	2b00      	cmp	r3, #0
 800064a:	d108      	bne.n	800065e <LCD_Send_Cmd+0x8e>
		HAL_I2C_Master_Transmit(& myI2Chandle,I2C_SLAVE_ADDRESS, data_l_tx, 2, 100);
 800064c:	f107 0208 	add.w	r2, r7, #8
 8000650:	2364      	movs	r3, #100	; 0x64
 8000652:	9300      	str	r3, [sp, #0]
 8000654:	2302      	movs	r3, #2
 8000656:	214e      	movs	r1, #78	; 0x4e
 8000658:	4804      	ldr	r0, [pc, #16]	; (800066c <LCD_Send_Cmd+0x9c>)
 800065a:	f006 fee7 	bl	800742c <HAL_I2C_Master_Transmit>

	/*Provide a delay */
	HAL_Delay(5);
 800065e:	2005      	movs	r0, #5
 8000660:	f006 f8ae 	bl	80067c0 <HAL_Delay>
}
 8000664:	bf00      	nop
 8000666:	3710      	adds	r7, #16
 8000668:	46bd      	mov	sp, r7
 800066a:	bd80      	pop	{r7, pc}
 800066c:	200000d4 	.word	0x200000d4

08000670 <LCD_Send_Data>:
 * @brief Send Data to LCD
 * @param data: Data to be sent to LCD
 * @retval None
 */
void LCD_Send_Data(uint8_t data)
{
 8000670:	b580      	push	{r7, lr}
 8000672:	b086      	sub	sp, #24
 8000674:	af02      	add	r7, sp, #8
 8000676:	4603      	mov	r3, r0
 8000678:	71fb      	strb	r3, [r7, #7]
	uint8_t data_u, data_l;
	uint8_t data_u_tx[2], data_l_tx[2];


	data_u = (data & 0xF0);
 800067a:	79fb      	ldrb	r3, [r7, #7]
 800067c:	f023 030f 	bic.w	r3, r3, #15
 8000680:	73fb      	strb	r3, [r7, #15]


	data_l = ((data << 4) & 0xF0);
 8000682:	79fb      	ldrb	r3, [r7, #7]
 8000684:	011b      	lsls	r3, r3, #4
 8000686:	73bb      	strb	r3, [r7, #14]


	data_u_tx[0] = data_u|BACKLIGHT|PIN_EN|PIN_RS;
 8000688:	7bfb      	ldrb	r3, [r7, #15]
 800068a:	f043 030d 	orr.w	r3, r3, #13
 800068e:	b2db      	uxtb	r3, r3
 8000690:	733b      	strb	r3, [r7, #12]
	data_u_tx[1] = data_u|BACKLIGHT|PIN_RS;
 8000692:	7bfb      	ldrb	r3, [r7, #15]
 8000694:	f043 0309 	orr.w	r3, r3, #9
 8000698:	b2db      	uxtb	r3, r3
 800069a:	737b      	strb	r3, [r7, #13]

	data_l_tx[0] = data_l|BACKLIGHT|PIN_EN|PIN_RS;
 800069c:	7bbb      	ldrb	r3, [r7, #14]
 800069e:	f043 030d 	orr.w	r3, r3, #13
 80006a2:	b2db      	uxtb	r3, r3
 80006a4:	723b      	strb	r3, [r7, #8]
	data_l_tx[1] = data_l|BACKLIGHT|PIN_RS;
 80006a6:	7bbb      	ldrb	r3, [r7, #14]
 80006a8:	f043 0309 	orr.w	r3, r3, #9
 80006ac:	b2db      	uxtb	r3, r3
 80006ae:	727b      	strb	r3, [r7, #9]


	if(HAL_I2C_IsDeviceReady(& myI2Chandle, I2C_SLAVE_ADDRESS, 1, 10) == HAL_OK)
 80006b0:	230a      	movs	r3, #10
 80006b2:	2201      	movs	r2, #1
 80006b4:	214e      	movs	r1, #78	; 0x4e
 80006b6:	4814      	ldr	r0, [pc, #80]	; (8000708 <LCD_Send_Data+0x98>)
 80006b8:	f006 ffb6 	bl	8007628 <HAL_I2C_IsDeviceReady>
 80006bc:	4603      	mov	r3, r0
 80006be:	2b00      	cmp	r3, #0
 80006c0:	d108      	bne.n	80006d4 <LCD_Send_Data+0x64>
		HAL_I2C_Master_Transmit(& myI2Chandle,I2C_SLAVE_ADDRESS, data_u_tx, 2, 100);
 80006c2:	f107 020c 	add.w	r2, r7, #12
 80006c6:	2364      	movs	r3, #100	; 0x64
 80006c8:	9300      	str	r3, [sp, #0]
 80006ca:	2302      	movs	r3, #2
 80006cc:	214e      	movs	r1, #78	; 0x4e
 80006ce:	480e      	ldr	r0, [pc, #56]	; (8000708 <LCD_Send_Data+0x98>)
 80006d0:	f006 feac 	bl	800742c <HAL_I2C_Master_Transmit>


	if(HAL_I2C_IsDeviceReady(& myI2Chandle, I2C_SLAVE_ADDRESS, 1, 10) == HAL_OK)
 80006d4:	230a      	movs	r3, #10
 80006d6:	2201      	movs	r2, #1
 80006d8:	214e      	movs	r1, #78	; 0x4e
 80006da:	480b      	ldr	r0, [pc, #44]	; (8000708 <LCD_Send_Data+0x98>)
 80006dc:	f006 ffa4 	bl	8007628 <HAL_I2C_IsDeviceReady>
 80006e0:	4603      	mov	r3, r0
 80006e2:	2b00      	cmp	r3, #0
 80006e4:	d108      	bne.n	80006f8 <LCD_Send_Data+0x88>
		HAL_I2C_Master_Transmit(& myI2Chandle,I2C_SLAVE_ADDRESS, data_l_tx, 2, 100);
 80006e6:	f107 0208 	add.w	r2, r7, #8
 80006ea:	2364      	movs	r3, #100	; 0x64
 80006ec:	9300      	str	r3, [sp, #0]
 80006ee:	2302      	movs	r3, #2
 80006f0:	214e      	movs	r1, #78	; 0x4e
 80006f2:	4805      	ldr	r0, [pc, #20]	; (8000708 <LCD_Send_Data+0x98>)
 80006f4:	f006 fe9a 	bl	800742c <HAL_I2C_Master_Transmit>

    HAL_Delay(5);
 80006f8:	2005      	movs	r0, #5
 80006fa:	f006 f861 	bl	80067c0 <HAL_Delay>
}
 80006fe:	bf00      	nop
 8000700:	3710      	adds	r7, #16
 8000702:	46bd      	mov	sp, r7
 8000704:	bd80      	pop	{r7, pc}
 8000706:	bf00      	nop
 8000708:	200000d4 	.word	0x200000d4

0800070c <LCD_Init>:
/**
 * @brief  Initializes LCD
 * @retval None
 */
void LCD_Init(void)
{
 800070c:	b580      	push	{r7, lr}
 800070e:	af00      	add	r7, sp, #0
	/* Configure GPIOs */
	GPIO_Config();
 8000710:	f7ff fed6 	bl	80004c0 <GPIO_Config>

	/*Configure I2C */
	I2C_Config();
 8000714:	f7ff ff20 	bl	8000558 <I2C_Config>

	/* Wait for 15ms */
	HAL_Delay(15);
 8000718:	200f      	movs	r0, #15
 800071a:	f006 f851 	bl	80067c0 <HAL_Delay>

	/*Function Set - As per HD44780U*/
	LCD_Send_Cmd(LCD_FUNCTION_SET1);
 800071e:	2033      	movs	r0, #51	; 0x33
 8000720:	f7ff ff56 	bl	80005d0 <LCD_Send_Cmd>

	/*Function Set -As per HD44780U*/
	LCD_Send_Cmd(LCD_FUNCTION_SET2);
 8000724:	2032      	movs	r0, #50	; 0x32
 8000726:	f7ff ff53 	bl	80005d0 <LCD_Send_Cmd>

	/*Set 4bit mode and 2 lines */
	LCD_Send_Cmd(LCD_4BIT_2LINE_MODE);
 800072a:	2028      	movs	r0, #40	; 0x28
 800072c:	f7ff ff50 	bl	80005d0 <LCD_Send_Cmd>

	/*Display on, cursor off*/
	LCD_Send_Cmd(0x0C);
 8000730:	200c      	movs	r0, #12
 8000732:	f7ff ff4d 	bl	80005d0 <LCD_Send_Cmd>

	/* SET Row1 and Col1 (1st Line) */
	LCD_Send_Cmd(0x80);
 8000736:	2080      	movs	r0, #128	; 0x80
 8000738:	f7ff ff4a 	bl	80005d0 <LCD_Send_Cmd>

	/*Clear Display*/
	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800073c:	2001      	movs	r0, #1
 800073e:	f7ff ff47 	bl	80005d0 <LCD_Send_Cmd>

}
 8000742:	bf00      	nop
 8000744:	bd80      	pop	{r7, pc}

08000746 <LCD_Send_String>:
 * @brief Send Strings to LCD
 * @param str: pointer to strings
 * @retval None
 */
void LCD_Send_String(char *str)
{
 8000746:	b580      	push	{r7, lr}
 8000748:	b082      	sub	sp, #8
 800074a:	af00      	add	r7, sp, #0
 800074c:	6078      	str	r0, [r7, #4]
	while (*str)
 800074e:	e006      	b.n	800075e <LCD_Send_String+0x18>
	{
		LCD_Send_Data(*str++);
 8000750:	687b      	ldr	r3, [r7, #4]
 8000752:	1c5a      	adds	r2, r3, #1
 8000754:	607a      	str	r2, [r7, #4]
 8000756:	781b      	ldrb	r3, [r3, #0]
 8000758:	4618      	mov	r0, r3
 800075a:	f7ff ff89 	bl	8000670 <LCD_Send_Data>
	while (*str)
 800075e:	687b      	ldr	r3, [r7, #4]
 8000760:	781b      	ldrb	r3, [r3, #0]
 8000762:	2b00      	cmp	r3, #0
 8000764:	d1f4      	bne.n	8000750 <LCD_Send_String+0xa>
	}
}
 8000766:	bf00      	nop
 8000768:	bf00      	nop
 800076a:	3708      	adds	r7, #8
 800076c:	46bd      	mov	sp, r7
 800076e:	bd80      	pop	{r7, pc}

08000770 <LCD_Send_String_On_Line1>:
 * @brief Display the strings on Line1
 * @param str: pointer to strings
 * @retval None
 */
void LCD_Send_String_On_Line1(char *str)
{
 8000770:	b580      	push	{r7, lr}
 8000772:	b082      	sub	sp, #8
 8000774:	af00      	add	r7, sp, #0
 8000776:	6078      	str	r0, [r7, #4]
	LCD_Send_Cmd(LCD_SET_ROW1_COL1);
 8000778:	2080      	movs	r0, #128	; 0x80
 800077a:	f7ff ff29 	bl	80005d0 <LCD_Send_Cmd>
	LCD_Send_String(str);
 800077e:	6878      	ldr	r0, [r7, #4]
 8000780:	f7ff ffe1 	bl	8000746 <LCD_Send_String>
}
 8000784:	bf00      	nop
 8000786:	3708      	adds	r7, #8
 8000788:	46bd      	mov	sp, r7
 800078a:	bd80      	pop	{r7, pc}

0800078c <LCD_Send_String_On_Line2>:
 * @brief Display the strings on Line2
 * @param str: pointer to strings
 * @retval None
 */
void LCD_Send_String_On_Line2(char *str)
{
 800078c:	b580      	push	{r7, lr}
 800078e:	b082      	sub	sp, #8
 8000790:	af00      	add	r7, sp, #0
 8000792:	6078      	str	r0, [r7, #4]
	LCD_Send_Cmd(LCD_SET_ROW2_COL1);
 8000794:	20c0      	movs	r0, #192	; 0xc0
 8000796:	f7ff ff1b 	bl	80005d0 <LCD_Send_Cmd>
	LCD_Send_String(str);
 800079a:	6878      	ldr	r0, [r7, #4]
 800079c:	f7ff ffd3 	bl	8000746 <LCD_Send_String>
}
 80007a0:	bf00      	nop
 80007a2:	3708      	adds	r7, #8
 80007a4:	46bd      	mov	sp, r7
 80007a6:	bd80      	pop	{r7, pc}

080007a8 <Genel_Ekran_Ayar>:
uint32_t veri_sifirlama[35];




void Genel_Ekran_Ayar(){
 80007a8:	b580      	push	{r7, lr}
 80007aa:	af00      	add	r7, sp, #0



	 LCD_Send_String_On_Line1("  Ayarlar   ");
 80007ac:	4878      	ldr	r0, [pc, #480]	; (8000990 <Genel_Ekran_Ayar+0x1e8>)
 80007ae:	f7ff ffdf 	bl	8000770 <LCD_Send_String_On_Line1>
	 HAL_Delay(2000);
 80007b2:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 80007b6:	f006 f803 	bl	80067c0 <HAL_Delay>
     LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80007ba:	2001      	movs	r0, #1
 80007bc:	f7ff ff08 	bl	80005d0 <LCD_Send_Cmd>



     while(1){
     if(degisken==0){
 80007c0:	4b74      	ldr	r3, [pc, #464]	; (8000994 <Genel_Ekran_Ayar+0x1ec>)
 80007c2:	781b      	ldrb	r3, [r3, #0]
 80007c4:	2b00      	cmp	r3, #0
 80007c6:	d131      	bne.n	800082c <Genel_Ekran_Ayar+0x84>
    	 LCD_Send_String_On_Line1(">>Gun Secimi  ");
 80007c8:	4873      	ldr	r0, [pc, #460]	; (8000998 <Genel_Ekran_Ayar+0x1f0>)
 80007ca:	f7ff ffd1 	bl	8000770 <LCD_Send_String_On_Line1>
    	 LCD_Send_String_On_Line2(" Pompa Ayarlar  ");
 80007ce:	4873      	ldr	r0, [pc, #460]	; (800099c <Genel_Ekran_Ayar+0x1f4>)
 80007d0:	f7ff ffdc 	bl	800078c <LCD_Send_String_On_Line2>



    	  if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1  || HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1 )
 80007d4:	2180      	movs	r1, #128	; 0x80
 80007d6:	4872      	ldr	r0, [pc, #456]	; (80009a0 <Genel_Ekran_Ayar+0x1f8>)
 80007d8:	f006 fcb2 	bl	8007140 <HAL_GPIO_ReadPin>
 80007dc:	4603      	mov	r3, r0
 80007de:	2b01      	cmp	r3, #1
 80007e0:	d006      	beq.n	80007f0 <Genel_Ekran_Ayar+0x48>
 80007e2:	2140      	movs	r1, #64	; 0x40
 80007e4:	486e      	ldr	r0, [pc, #440]	; (80009a0 <Genel_Ekran_Ayar+0x1f8>)
 80007e6:	f006 fcab 	bl	8007140 <HAL_GPIO_ReadPin>
 80007ea:	4603      	mov	r3, r0
 80007ec:	2b01      	cmp	r3, #1
 80007ee:	d105      	bne.n	80007fc <Genel_Ekran_Ayar+0x54>
    	  {

    		  degisken=1;
 80007f0:	4b68      	ldr	r3, [pc, #416]	; (8000994 <Genel_Ekran_Ayar+0x1ec>)
 80007f2:	2201      	movs	r2, #1
 80007f4:	701a      	strb	r2, [r3, #0]
    		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80007f6:	2001      	movs	r0, #1
 80007f8:	f7ff feea 	bl	80005d0 <LCD_Send_Cmd>

    	  }
    	  if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){
 80007fc:	2110      	movs	r1, #16
 80007fe:	4869      	ldr	r0, [pc, #420]	; (80009a4 <Genel_Ekran_Ayar+0x1fc>)
 8000800:	f006 fc9e 	bl	8007140 <HAL_GPIO_ReadPin>
 8000804:	4603      	mov	r3, r0
 8000806:	2b01      	cmp	r3, #1
 8000808:	d104      	bne.n	8000814 <Genel_Ekran_Ayar+0x6c>
    		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800080a:	2001      	movs	r0, #1
 800080c:	f7ff fee0 	bl	80005d0 <LCD_Send_Cmd>
    		  Ayar_Gun();
 8000810:	f000 f8d4 	bl	80009bc <Ayar_Gun>


    	  }

    	  if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8000814:	2120      	movs	r1, #32
 8000816:	4863      	ldr	r0, [pc, #396]	; (80009a4 <Genel_Ekran_Ayar+0x1fc>)
 8000818:	f006 fc92 	bl	8007140 <HAL_GPIO_ReadPin>
 800081c:	4603      	mov	r3, r0
 800081e:	2b01      	cmp	r3, #1
 8000820:	d104      	bne.n	800082c <Genel_Ekran_Ayar+0x84>
    	  	    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000822:	2001      	movs	r0, #1
 8000824:	f7ff fed4 	bl	80005d0 <LCD_Send_Cmd>
    	  	    	 																				 					 main();
 8000828:	f005 f8dc 	bl	80059e4 <main>
    	  	    	 																				 					                                          }
     }
     if(degisken==1){
 800082c:	4b59      	ldr	r3, [pc, #356]	; (8000994 <Genel_Ekran_Ayar+0x1ec>)
 800082e:	781b      	ldrb	r3, [r3, #0]
 8000830:	2b01      	cmp	r3, #1
 8000832:	d131      	bne.n	8000898 <Genel_Ekran_Ayar+0xf0>

    	 LCD_Send_String_On_Line1("Gun Secimi   ");
 8000834:	485c      	ldr	r0, [pc, #368]	; (80009a8 <Genel_Ekran_Ayar+0x200>)
 8000836:	f7ff ff9b 	bl	8000770 <LCD_Send_String_On_Line1>
    	 LCD_Send_String_On_Line2(">>Pompa Ayarlar  ");
 800083a:	485c      	ldr	r0, [pc, #368]	; (80009ac <Genel_Ekran_Ayar+0x204>)
 800083c:	f7ff ffa6 	bl	800078c <LCD_Send_String_On_Line2>


    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1 || HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1 )
 8000840:	2140      	movs	r1, #64	; 0x40
 8000842:	4857      	ldr	r0, [pc, #348]	; (80009a0 <Genel_Ekran_Ayar+0x1f8>)
 8000844:	f006 fc7c 	bl	8007140 <HAL_GPIO_ReadPin>
 8000848:	4603      	mov	r3, r0
 800084a:	2b01      	cmp	r3, #1
 800084c:	d006      	beq.n	800085c <Genel_Ekran_Ayar+0xb4>
 800084e:	2180      	movs	r1, #128	; 0x80
 8000850:	4853      	ldr	r0, [pc, #332]	; (80009a0 <Genel_Ekran_Ayar+0x1f8>)
 8000852:	f006 fc75 	bl	8007140 <HAL_GPIO_ReadPin>
 8000856:	4603      	mov	r3, r0
 8000858:	2b01      	cmp	r3, #1
 800085a:	d105      	bne.n	8000868 <Genel_Ekran_Ayar+0xc0>
    	     	  {
    	     		  degisken=2;
 800085c:	4b4d      	ldr	r3, [pc, #308]	; (8000994 <Genel_Ekran_Ayar+0x1ec>)
 800085e:	2202      	movs	r2, #2
 8000860:	701a      	strb	r2, [r3, #0]
    	     		 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000862:	2001      	movs	r0, #1
 8000864:	f7ff feb4 	bl	80005d0 <LCD_Send_Cmd>

    	     	  }
    	 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){
 8000868:	2110      	movs	r1, #16
 800086a:	484e      	ldr	r0, [pc, #312]	; (80009a4 <Genel_Ekran_Ayar+0x1fc>)
 800086c:	f006 fc68 	bl	8007140 <HAL_GPIO_ReadPin>
 8000870:	4603      	mov	r3, r0
 8000872:	2b01      	cmp	r3, #1
 8000874:	d104      	bne.n	8000880 <Genel_Ekran_Ayar+0xd8>
    		 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000876:	2001      	movs	r0, #1
 8000878:	f7ff feaa 	bl	80005d0 <LCD_Send_Cmd>
    		 Ayar_Pompa();
 800087c:	f000 fbd4 	bl	8001028 <Ayar_Pompa>

    	 	}
    	 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8000880:	2120      	movs	r1, #32
 8000882:	4848      	ldr	r0, [pc, #288]	; (80009a4 <Genel_Ekran_Ayar+0x1fc>)
 8000884:	f006 fc5c 	bl	8007140 <HAL_GPIO_ReadPin>
 8000888:	4603      	mov	r3, r0
 800088a:	2b01      	cmp	r3, #1
 800088c:	d104      	bne.n	8000898 <Genel_Ekran_Ayar+0xf0>
    	 	    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800088e:	2001      	movs	r0, #1
 8000890:	f7ff fe9e 	bl	80005d0 <LCD_Send_Cmd>
    	 	    	 																				 					main();
 8000894:	f005 f8a6 	bl	80059e4 <main>
    	 	    	 																				 					                                          }
     }
     if(degisken==2){
 8000898:	4b3e      	ldr	r3, [pc, #248]	; (8000994 <Genel_Ekran_Ayar+0x1ec>)
 800089a:	781b      	ldrb	r3, [r3, #0]
 800089c:	2b02      	cmp	r3, #2
 800089e:	d137      	bne.n	8000910 <Genel_Ekran_Ayar+0x168>

         	 LCD_Send_String_On_Line1("Pompa Ayarlar  ");
 80008a0:	4843      	ldr	r0, [pc, #268]	; (80009b0 <Genel_Ekran_Ayar+0x208>)
 80008a2:	f7ff ff65 	bl	8000770 <LCD_Send_String_On_Line1>
         	 LCD_Send_String_On_Line2(">>Saat Ayarlar ");
 80008a6:	4843      	ldr	r0, [pc, #268]	; (80009b4 <Genel_Ekran_Ayar+0x20c>)
 80008a8:	f7ff ff70 	bl	800078c <LCD_Send_String_On_Line2>


         	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1 )
 80008ac:	2180      	movs	r1, #128	; 0x80
 80008ae:	483c      	ldr	r0, [pc, #240]	; (80009a0 <Genel_Ekran_Ayar+0x1f8>)
 80008b0:	f006 fc46 	bl	8007140 <HAL_GPIO_ReadPin>
 80008b4:	4603      	mov	r3, r0
 80008b6:	2b01      	cmp	r3, #1
 80008b8:	d105      	bne.n	80008c6 <Genel_Ekran_Ayar+0x11e>
         	     	  {
         	     		  degisken=0;
 80008ba:	4b36      	ldr	r3, [pc, #216]	; (8000994 <Genel_Ekran_Ayar+0x1ec>)
 80008bc:	2200      	movs	r2, #0
 80008be:	701a      	strb	r2, [r3, #0]
         	     		 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80008c0:	2001      	movs	r0, #1
 80008c2:	f7ff fe85 	bl	80005d0 <LCD_Send_Cmd>

         	     	  }
         	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1 ){
 80008c6:	2140      	movs	r1, #64	; 0x40
 80008c8:	4835      	ldr	r0, [pc, #212]	; (80009a0 <Genel_Ekran_Ayar+0x1f8>)
 80008ca:	f006 fc39 	bl	8007140 <HAL_GPIO_ReadPin>
 80008ce:	4603      	mov	r3, r0
 80008d0:	2b01      	cmp	r3, #1
 80008d2:	d105      	bne.n	80008e0 <Genel_Ekran_Ayar+0x138>
         		degisken=3;
 80008d4:	4b2f      	ldr	r3, [pc, #188]	; (8000994 <Genel_Ekran_Ayar+0x1ec>)
 80008d6:	2203      	movs	r2, #3
 80008d8:	701a      	strb	r2, [r3, #0]
         		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80008da:	2001      	movs	r0, #1
 80008dc:	f7ff fe78 	bl	80005d0 <LCD_Send_Cmd>
         	 }
         	 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){
 80008e0:	2110      	movs	r1, #16
 80008e2:	4830      	ldr	r0, [pc, #192]	; (80009a4 <Genel_Ekran_Ayar+0x1fc>)
 80008e4:	f006 fc2c 	bl	8007140 <HAL_GPIO_ReadPin>
 80008e8:	4603      	mov	r3, r0
 80008ea:	2b01      	cmp	r3, #1
 80008ec:	d104      	bne.n	80008f8 <Genel_Ekran_Ayar+0x150>
         		 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80008ee:	2001      	movs	r0, #1
 80008f0:	f7ff fe6e 	bl	80005d0 <LCD_Send_Cmd>
         		 saat_ayarlar();
 80008f4:	f004 fa3e 	bl	8004d74 <saat_ayarlar>

         	 	}
         	 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 80008f8:	2120      	movs	r1, #32
 80008fa:	482a      	ldr	r0, [pc, #168]	; (80009a4 <Genel_Ekran_Ayar+0x1fc>)
 80008fc:	f006 fc20 	bl	8007140 <HAL_GPIO_ReadPin>
 8000900:	4603      	mov	r3, r0
 8000902:	2b01      	cmp	r3, #1
 8000904:	d104      	bne.n	8000910 <Genel_Ekran_Ayar+0x168>
         	 	    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000906:	2001      	movs	r0, #1
 8000908:	f7ff fe62 	bl	80005d0 <LCD_Send_Cmd>
         	 	    	 																				 					main();
 800090c:	f005 f86a 	bl	80059e4 <main>
         	 	    	 																				 					                                          }
          }
     if(degisken==3){
 8000910:	4b20      	ldr	r3, [pc, #128]	; (8000994 <Genel_Ekran_Ayar+0x1ec>)
 8000912:	781b      	ldrb	r3, [r3, #0]
 8000914:	2b03      	cmp	r3, #3
 8000916:	f47f af53 	bne.w	80007c0 <Genel_Ekran_Ayar+0x18>

             	 LCD_Send_String_On_Line1(">>Pompa Ayarlar  ");
 800091a:	4824      	ldr	r0, [pc, #144]	; (80009ac <Genel_Ekran_Ayar+0x204>)
 800091c:	f7ff ff28 	bl	8000770 <LCD_Send_String_On_Line1>
             	 LCD_Send_String_On_Line2("Saat Ayarlar ");
 8000920:	4825      	ldr	r0, [pc, #148]	; (80009b8 <Genel_Ekran_Ayar+0x210>)
 8000922:	f7ff ff33 	bl	800078c <LCD_Send_String_On_Line2>


             	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1 )
 8000926:	2180      	movs	r1, #128	; 0x80
 8000928:	481d      	ldr	r0, [pc, #116]	; (80009a0 <Genel_Ekran_Ayar+0x1f8>)
 800092a:	f006 fc09 	bl	8007140 <HAL_GPIO_ReadPin>
 800092e:	4603      	mov	r3, r0
 8000930:	2b01      	cmp	r3, #1
 8000932:	d105      	bne.n	8000940 <Genel_Ekran_Ayar+0x198>
             	     	  {
             	     		  degisken=2;
 8000934:	4b17      	ldr	r3, [pc, #92]	; (8000994 <Genel_Ekran_Ayar+0x1ec>)
 8000936:	2202      	movs	r2, #2
 8000938:	701a      	strb	r2, [r3, #0]
             	     		 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800093a:	2001      	movs	r0, #1
 800093c:	f7ff fe48 	bl	80005d0 <LCD_Send_Cmd>

             	     	  }
             	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1 ){
 8000940:	2140      	movs	r1, #64	; 0x40
 8000942:	4817      	ldr	r0, [pc, #92]	; (80009a0 <Genel_Ekran_Ayar+0x1f8>)
 8000944:	f006 fbfc 	bl	8007140 <HAL_GPIO_ReadPin>
 8000948:	4603      	mov	r3, r0
 800094a:	2b01      	cmp	r3, #1
 800094c:	d105      	bne.n	800095a <Genel_Ekran_Ayar+0x1b2>
             		degisken=0;
 800094e:	4b11      	ldr	r3, [pc, #68]	; (8000994 <Genel_Ekran_Ayar+0x1ec>)
 8000950:	2200      	movs	r2, #0
 8000952:	701a      	strb	r2, [r3, #0]
             		         	  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000954:	2001      	movs	r0, #1
 8000956:	f7ff fe3b 	bl	80005d0 <LCD_Send_Cmd>
             	 }
             	 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){
 800095a:	2110      	movs	r1, #16
 800095c:	4811      	ldr	r0, [pc, #68]	; (80009a4 <Genel_Ekran_Ayar+0x1fc>)
 800095e:	f006 fbef 	bl	8007140 <HAL_GPIO_ReadPin>
 8000962:	4603      	mov	r3, r0
 8000964:	2b01      	cmp	r3, #1
 8000966:	d104      	bne.n	8000972 <Genel_Ekran_Ayar+0x1ca>
             		 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000968:	2001      	movs	r0, #1
 800096a:	f7ff fe31 	bl	80005d0 <LCD_Send_Cmd>
             		 Ayar_Pompa();
 800096e:	f000 fb5b 	bl	8001028 <Ayar_Pompa>

             	 	}
             	 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8000972:	2120      	movs	r1, #32
 8000974:	480b      	ldr	r0, [pc, #44]	; (80009a4 <Genel_Ekran_Ayar+0x1fc>)
 8000976:	f006 fbe3 	bl	8007140 <HAL_GPIO_ReadPin>
 800097a:	4603      	mov	r3, r0
 800097c:	2b01      	cmp	r3, #1
 800097e:	f47f af1f 	bne.w	80007c0 <Genel_Ekran_Ayar+0x18>
             	 	    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000982:	2001      	movs	r0, #1
 8000984:	f7ff fe24 	bl	80005d0 <LCD_Send_Cmd>
             	 	    	 																				 					main();
 8000988:	f005 f82c 	bl	80059e4 <main>
     if(degisken==0){
 800098c:	e718      	b.n	80007c0 <Genel_Ekran_Ayar+0x18>
 800098e:	bf00      	nop
 8000990:	08008d58 	.word	0x08008d58
 8000994:	20000038 	.word	0x20000038
 8000998:	08008d68 	.word	0x08008d68
 800099c:	08008d78 	.word	0x08008d78
 80009a0:	40020000 	.word	0x40020000
 80009a4:	40020800 	.word	0x40020800
 80009a8:	08008d8c 	.word	0x08008d8c
 80009ac:	08008d9c 	.word	0x08008d9c
 80009b0:	08008db0 	.word	0x08008db0
 80009b4:	08008dc0 	.word	0x08008dc0
 80009b8:	08008dd0 	.word	0x08008dd0

080009bc <Ayar_Gun>:
              }

}

}
void Ayar_Gun(){
 80009bc:	b580      	push	{r7, lr}
 80009be:	b082      	sub	sp, #8
 80009c0:	af00      	add	r7, sp, #0
	 data5=Flash_Read5(0x080E0000);
 80009c2:	4804      	ldr	r0, [pc, #16]	; (80009d4 <Ayar_Gun+0x18>)
 80009c4:	f004 fddc 	bl	8005580 <Flash_Read5>
 80009c8:	4603      	mov	r3, r0
 80009ca:	4a03      	ldr	r2, [pc, #12]	; (80009d8 <Ayar_Gun+0x1c>)
 80009cc:	6013      	str	r3, [r2, #0]

				 		 	                         for(int i=0;i<30;i++){
 80009ce:	2300      	movs	r3, #0
 80009d0:	607b      	str	r3, [r7, #4]
 80009d2:	e010      	b.n	80009f6 <Ayar_Gun+0x3a>
 80009d4:	080e0000 	.word	0x080e0000
 80009d8:	20000480 	.word	0x20000480

				 		 	    	 								 		  read5[i]=data5[i];
 80009dc:	4bc4      	ldr	r3, [pc, #784]	; (8000cf0 <Ayar_Gun+0x334>)
 80009de:	681a      	ldr	r2, [r3, #0]
 80009e0:	687b      	ldr	r3, [r7, #4]
 80009e2:	009b      	lsls	r3, r3, #2
 80009e4:	4413      	add	r3, r2
 80009e6:	681a      	ldr	r2, [r3, #0]
 80009e8:	49c2      	ldr	r1, [pc, #776]	; (8000cf4 <Ayar_Gun+0x338>)
 80009ea:	687b      	ldr	r3, [r7, #4]
 80009ec:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
				 		 	                         for(int i=0;i<30;i++){
 80009f0:	687b      	ldr	r3, [r7, #4]
 80009f2:	3301      	adds	r3, #1
 80009f4:	607b      	str	r3, [r7, #4]
 80009f6:	687b      	ldr	r3, [r7, #4]
 80009f8:	2b1d      	cmp	r3, #29
 80009fa:	ddef      	ble.n	80009dc <Ayar_Gun+0x20>
				 		 	    	 								 	   }



	if(read5[0]!=0 && read5[0]!=1  ){ Flash_Write5(0x080E0000,veri_sifirlama,30);}
 80009fc:	4bbd      	ldr	r3, [pc, #756]	; (8000cf4 <Ayar_Gun+0x338>)
 80009fe:	681b      	ldr	r3, [r3, #0]
 8000a00:	2b00      	cmp	r3, #0
 8000a02:	d008      	beq.n	8000a16 <Ayar_Gun+0x5a>
 8000a04:	4bbb      	ldr	r3, [pc, #748]	; (8000cf4 <Ayar_Gun+0x338>)
 8000a06:	681b      	ldr	r3, [r3, #0]
 8000a08:	2b01      	cmp	r3, #1
 8000a0a:	d004      	beq.n	8000a16 <Ayar_Gun+0x5a>
 8000a0c:	221e      	movs	r2, #30
 8000a0e:	49ba      	ldr	r1, [pc, #744]	; (8000cf8 <Ayar_Gun+0x33c>)
 8000a10:	48ba      	ldr	r0, [pc, #744]	; (8000cfc <Ayar_Gun+0x340>)
 8000a12:	f004 fd05 	bl	8005420 <Flash_Write5>



	while(1){
	 if(degisken7==0){
 8000a16:	4bba      	ldr	r3, [pc, #744]	; (8000d00 <Ayar_Gun+0x344>)
 8000a18:	781b      	ldrb	r3, [r3, #0]
 8000a1a:	2b00      	cmp	r3, #0
 8000a1c:	d12a      	bne.n	8000a74 <Ayar_Gun+0xb8>
	    	 LCD_Send_String_On_Line1(">>Pazartesi");
 8000a1e:	48b9      	ldr	r0, [pc, #740]	; (8000d04 <Ayar_Gun+0x348>)
 8000a20:	f7ff fea6 	bl	8000770 <LCD_Send_String_On_Line1>
	    	 LCD_Send_String_On_Line2("Sali ");
 8000a24:	48b8      	ldr	r0, [pc, #736]	; (8000d08 <Ayar_Gun+0x34c>)
 8000a26:	f7ff feb1 	bl	800078c <LCD_Send_String_On_Line2>



	    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1  )
 8000a2a:	2180      	movs	r1, #128	; 0x80
 8000a2c:	48b7      	ldr	r0, [pc, #732]	; (8000d0c <Ayar_Gun+0x350>)
 8000a2e:	f006 fb87 	bl	8007140 <HAL_GPIO_ReadPin>
 8000a32:	4603      	mov	r3, r0
 8000a34:	2b01      	cmp	r3, #1
 8000a36:	d105      	bne.n	8000a44 <Ayar_Gun+0x88>
	    	     	  {
	    	     		  degisken7=1;
 8000a38:	4bb1      	ldr	r3, [pc, #708]	; (8000d00 <Ayar_Gun+0x344>)
 8000a3a:	2201      	movs	r2, #1
 8000a3c:	701a      	strb	r2, [r3, #0]
	    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000a3e:	2001      	movs	r0, #1
 8000a40:	f7ff fdc6 	bl	80005d0 <LCD_Send_Cmd>

	    	     	  }

	    	  if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){
 8000a44:	2110      	movs	r1, #16
 8000a46:	48b2      	ldr	r0, [pc, #712]	; (8000d10 <Ayar_Gun+0x354>)
 8000a48:	f006 fb7a 	bl	8007140 <HAL_GPIO_ReadPin>
 8000a4c:	4603      	mov	r3, r0
 8000a4e:	2b01      	cmp	r3, #1
 8000a50:	d104      	bne.n	8000a5c <Ayar_Gun+0xa0>
	    		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000a52:	2001      	movs	r0, #1
 8000a54:	f7ff fdbc 	bl	80005d0 <LCD_Send_Cmd>
	    		  pazartesi();
 8000a58:	f001 fe0a 	bl	8002670 <pazartesi>


	    	  }
	    	  if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8000a5c:	2120      	movs	r1, #32
 8000a5e:	48ac      	ldr	r0, [pc, #688]	; (8000d10 <Ayar_Gun+0x354>)
 8000a60:	f006 fb6e 	bl	8007140 <HAL_GPIO_ReadPin>
 8000a64:	4603      	mov	r3, r0
 8000a66:	2b01      	cmp	r3, #1
 8000a68:	d104      	bne.n	8000a74 <Ayar_Gun+0xb8>
	    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000a6a:	2001      	movs	r0, #1
 8000a6c:	f7ff fdb0 	bl	80005d0 <LCD_Send_Cmd>
	    	 																				 					 	Genel_Ekran_Ayar();
 8000a70:	f7ff fe9a 	bl	80007a8 <Genel_Ekran_Ayar>
	    	 																				 					                                          }


	     }
	 if(degisken7==1){
 8000a74:	4ba2      	ldr	r3, [pc, #648]	; (8000d00 <Ayar_Gun+0x344>)
 8000a76:	781b      	ldrb	r3, [r3, #0]
 8000a78:	2b01      	cmp	r3, #1
 8000a7a:	d137      	bne.n	8000aec <Ayar_Gun+0x130>
	 	    	 LCD_Send_String_On_Line1("Pazartesi ");
 8000a7c:	48a5      	ldr	r0, [pc, #660]	; (8000d14 <Ayar_Gun+0x358>)
 8000a7e:	f7ff fe77 	bl	8000770 <LCD_Send_String_On_Line1>
	 	    	 LCD_Send_String_On_Line2(">>Sali ");
 8000a82:	48a5      	ldr	r0, [pc, #660]	; (8000d18 <Ayar_Gun+0x35c>)
 8000a84:	f7ff fe82 	bl	800078c <LCD_Send_String_On_Line2>




		    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1  )
 8000a88:	2180      	movs	r1, #128	; 0x80
 8000a8a:	48a0      	ldr	r0, [pc, #640]	; (8000d0c <Ayar_Gun+0x350>)
 8000a8c:	f006 fb58 	bl	8007140 <HAL_GPIO_ReadPin>
 8000a90:	4603      	mov	r3, r0
 8000a92:	2b01      	cmp	r3, #1
 8000a94:	d105      	bne.n	8000aa2 <Ayar_Gun+0xe6>
		    	     	  {
		    	     		  degisken7=2;
 8000a96:	4b9a      	ldr	r3, [pc, #616]	; (8000d00 <Ayar_Gun+0x344>)
 8000a98:	2202      	movs	r2, #2
 8000a9a:	701a      	strb	r2, [r3, #0]
		    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000a9c:	2001      	movs	r0, #1
 8000a9e:	f7ff fd97 	bl	80005d0 <LCD_Send_Cmd>

		    	     	  }
		    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1  )
 8000aa2:	2140      	movs	r1, #64	; 0x40
 8000aa4:	4899      	ldr	r0, [pc, #612]	; (8000d0c <Ayar_Gun+0x350>)
 8000aa6:	f006 fb4b 	bl	8007140 <HAL_GPIO_ReadPin>
 8000aaa:	4603      	mov	r3, r0
 8000aac:	2b01      	cmp	r3, #1
 8000aae:	d105      	bne.n	8000abc <Ayar_Gun+0x100>
		    			    	     	  {
		    			    	     		  degisken7=0;
 8000ab0:	4b93      	ldr	r3, [pc, #588]	; (8000d00 <Ayar_Gun+0x344>)
 8000ab2:	2200      	movs	r2, #0
 8000ab4:	701a      	strb	r2, [r3, #0]
		    			    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000ab6:	2001      	movs	r0, #1
 8000ab8:	f7ff fd8a 	bl	80005d0 <LCD_Send_Cmd>
		    			    	     	  }
	 	    	  if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){
 8000abc:	2110      	movs	r1, #16
 8000abe:	4894      	ldr	r0, [pc, #592]	; (8000d10 <Ayar_Gun+0x354>)
 8000ac0:	f006 fb3e 	bl	8007140 <HAL_GPIO_ReadPin>
 8000ac4:	4603      	mov	r3, r0
 8000ac6:	2b01      	cmp	r3, #1
 8000ac8:	d104      	bne.n	8000ad4 <Ayar_Gun+0x118>
	 	    		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000aca:	2001      	movs	r0, #1
 8000acc:	f7ff fd80 	bl	80005d0 <LCD_Send_Cmd>
	 	    		  sali();
 8000ad0:	f002 f89e 	bl	8002c10 <sali>
                                              }
	 	    	  if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8000ad4:	2120      	movs	r1, #32
 8000ad6:	488e      	ldr	r0, [pc, #568]	; (8000d10 <Ayar_Gun+0x354>)
 8000ad8:	f006 fb32 	bl	8007140 <HAL_GPIO_ReadPin>
 8000adc:	4603      	mov	r3, r0
 8000ade:	2b01      	cmp	r3, #1
 8000ae0:	d104      	bne.n	8000aec <Ayar_Gun+0x130>
	 	    		    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000ae2:	2001      	movs	r0, #1
 8000ae4:	f7ff fd74 	bl	80005d0 <LCD_Send_Cmd>
	 	    		    	 																				 					 	Genel_Ekran_Ayar();
 8000ae8:	f7ff fe5e 	bl	80007a8 <Genel_Ekran_Ayar>
	 	    		    	 																				 					                                          }
	 	     }
	 if(degisken7==2){
 8000aec:	4b84      	ldr	r3, [pc, #528]	; (8000d00 <Ayar_Gun+0x344>)
 8000aee:	781b      	ldrb	r3, [r3, #0]
 8000af0:	2b02      	cmp	r3, #2
 8000af2:	d137      	bne.n	8000b64 <Ayar_Gun+0x1a8>
	 	 	    	 LCD_Send_String_On_Line1("Sali");
 8000af4:	4889      	ldr	r0, [pc, #548]	; (8000d1c <Ayar_Gun+0x360>)
 8000af6:	f7ff fe3b 	bl	8000770 <LCD_Send_String_On_Line1>
	 	 	    	 LCD_Send_String_On_Line2(">>Carsamba ");
 8000afa:	4889      	ldr	r0, [pc, #548]	; (8000d20 <Ayar_Gun+0x364>)
 8000afc:	f7ff fe46 	bl	800078c <LCD_Send_String_On_Line2>




	 		    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1  )
 8000b00:	2180      	movs	r1, #128	; 0x80
 8000b02:	4882      	ldr	r0, [pc, #520]	; (8000d0c <Ayar_Gun+0x350>)
 8000b04:	f006 fb1c 	bl	8007140 <HAL_GPIO_ReadPin>
 8000b08:	4603      	mov	r3, r0
 8000b0a:	2b01      	cmp	r3, #1
 8000b0c:	d105      	bne.n	8000b1a <Ayar_Gun+0x15e>
	 		    	     	  {
	 		    	     		  degisken7=3;
 8000b0e:	4b7c      	ldr	r3, [pc, #496]	; (8000d00 <Ayar_Gun+0x344>)
 8000b10:	2203      	movs	r2, #3
 8000b12:	701a      	strb	r2, [r3, #0]
	 		    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000b14:	2001      	movs	r0, #1
 8000b16:	f7ff fd5b 	bl	80005d0 <LCD_Send_Cmd>

	 		    	     	  }
	 		    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1  )
 8000b1a:	2140      	movs	r1, #64	; 0x40
 8000b1c:	487b      	ldr	r0, [pc, #492]	; (8000d0c <Ayar_Gun+0x350>)
 8000b1e:	f006 fb0f 	bl	8007140 <HAL_GPIO_ReadPin>
 8000b22:	4603      	mov	r3, r0
 8000b24:	2b01      	cmp	r3, #1
 8000b26:	d105      	bne.n	8000b34 <Ayar_Gun+0x178>
	 		    			    	     	  {
	 		    			    	     		  degisken7=4;
 8000b28:	4b75      	ldr	r3, [pc, #468]	; (8000d00 <Ayar_Gun+0x344>)
 8000b2a:	2204      	movs	r2, #4
 8000b2c:	701a      	strb	r2, [r3, #0]
	 		    			    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000b2e:	2001      	movs	r0, #1
 8000b30:	f7ff fd4e 	bl	80005d0 <LCD_Send_Cmd>
	 		    			    	     	  }
	 	 	    	  if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){
 8000b34:	2110      	movs	r1, #16
 8000b36:	4876      	ldr	r0, [pc, #472]	; (8000d10 <Ayar_Gun+0x354>)
 8000b38:	f006 fb02 	bl	8007140 <HAL_GPIO_ReadPin>
 8000b3c:	4603      	mov	r3, r0
 8000b3e:	2b01      	cmp	r3, #1
 8000b40:	d104      	bne.n	8000b4c <Ayar_Gun+0x190>
	 	 	    		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000b42:	2001      	movs	r0, #1
 8000b44:	f7ff fd44 	bl	80005d0 <LCD_Send_Cmd>
	 	 	    		carsamba();
 8000b48:	f002 fb32 	bl	80031b0 <carsamba>


	 	 	    	  }
	 	 	    	  if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8000b4c:	2120      	movs	r1, #32
 8000b4e:	4870      	ldr	r0, [pc, #448]	; (8000d10 <Ayar_Gun+0x354>)
 8000b50:	f006 faf6 	bl	8007140 <HAL_GPIO_ReadPin>
 8000b54:	4603      	mov	r3, r0
 8000b56:	2b01      	cmp	r3, #1
 8000b58:	d104      	bne.n	8000b64 <Ayar_Gun+0x1a8>
	 	 	    		    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000b5a:	2001      	movs	r0, #1
 8000b5c:	f7ff fd38 	bl	80005d0 <LCD_Send_Cmd>
	 	 	    		    	 																				 					 	Genel_Ekran_Ayar();
 8000b60:	f7ff fe22 	bl	80007a8 <Genel_Ekran_Ayar>
	 	 	    		    	 																				 					                                          }
	 	 	     }
	 if(degisken7==4){
 8000b64:	4b66      	ldr	r3, [pc, #408]	; (8000d00 <Ayar_Gun+0x344>)
 8000b66:	781b      	ldrb	r3, [r3, #0]
 8000b68:	2b04      	cmp	r3, #4
 8000b6a:	d137      	bne.n	8000bdc <Ayar_Gun+0x220>
		 	 	 	    	 LCD_Send_String_On_Line1(">>Sali");
 8000b6c:	486d      	ldr	r0, [pc, #436]	; (8000d24 <Ayar_Gun+0x368>)
 8000b6e:	f7ff fdff 	bl	8000770 <LCD_Send_String_On_Line1>
		 	 	 	    	 LCD_Send_String_On_Line2("Carsamba");
 8000b72:	486d      	ldr	r0, [pc, #436]	; (8000d28 <Ayar_Gun+0x36c>)
 8000b74:	f7ff fe0a 	bl	800078c <LCD_Send_String_On_Line2>




		 	 		    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1  )
 8000b78:	2180      	movs	r1, #128	; 0x80
 8000b7a:	4864      	ldr	r0, [pc, #400]	; (8000d0c <Ayar_Gun+0x350>)
 8000b7c:	f006 fae0 	bl	8007140 <HAL_GPIO_ReadPin>
 8000b80:	4603      	mov	r3, r0
 8000b82:	2b01      	cmp	r3, #1
 8000b84:	d105      	bne.n	8000b92 <Ayar_Gun+0x1d6>
		 	 		    	     	  {
		 	 		    	     		  degisken7=2;
 8000b86:	4b5e      	ldr	r3, [pc, #376]	; (8000d00 <Ayar_Gun+0x344>)
 8000b88:	2202      	movs	r2, #2
 8000b8a:	701a      	strb	r2, [r3, #0]
		 	 		    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000b8c:	2001      	movs	r0, #1
 8000b8e:	f7ff fd1f 	bl	80005d0 <LCD_Send_Cmd>

		 	 		    	     	  }
		 	 		    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1  )
 8000b92:	2140      	movs	r1, #64	; 0x40
 8000b94:	485d      	ldr	r0, [pc, #372]	; (8000d0c <Ayar_Gun+0x350>)
 8000b96:	f006 fad3 	bl	8007140 <HAL_GPIO_ReadPin>
 8000b9a:	4603      	mov	r3, r0
 8000b9c:	2b01      	cmp	r3, #1
 8000b9e:	d105      	bne.n	8000bac <Ayar_Gun+0x1f0>
		 	 		    			    	     	  {
		 	 		    			    	     		  degisken7=0;
 8000ba0:	4b57      	ldr	r3, [pc, #348]	; (8000d00 <Ayar_Gun+0x344>)
 8000ba2:	2200      	movs	r2, #0
 8000ba4:	701a      	strb	r2, [r3, #0]
		 	 		    			    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000ba6:	2001      	movs	r0, #1
 8000ba8:	f7ff fd12 	bl	80005d0 <LCD_Send_Cmd>
		 	 		    			    	     	  }
		 	 	 	    	  if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){
 8000bac:	2110      	movs	r1, #16
 8000bae:	4858      	ldr	r0, [pc, #352]	; (8000d10 <Ayar_Gun+0x354>)
 8000bb0:	f006 fac6 	bl	8007140 <HAL_GPIO_ReadPin>
 8000bb4:	4603      	mov	r3, r0
 8000bb6:	2b01      	cmp	r3, #1
 8000bb8:	d104      	bne.n	8000bc4 <Ayar_Gun+0x208>
		 	 	 	    		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000bba:	2001      	movs	r0, #1
 8000bbc:	f7ff fd08 	bl	80005d0 <LCD_Send_Cmd>
		 	 	 	    		 sali();
 8000bc0:	f002 f826 	bl	8002c10 <sali>


		 	 	 	    	  }
		 	 	 	    	  if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8000bc4:	2120      	movs	r1, #32
 8000bc6:	4852      	ldr	r0, [pc, #328]	; (8000d10 <Ayar_Gun+0x354>)
 8000bc8:	f006 faba 	bl	8007140 <HAL_GPIO_ReadPin>
 8000bcc:	4603      	mov	r3, r0
 8000bce:	2b01      	cmp	r3, #1
 8000bd0:	d104      	bne.n	8000bdc <Ayar_Gun+0x220>
		 	 	 	    		    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000bd2:	2001      	movs	r0, #1
 8000bd4:	f7ff fcfc 	bl	80005d0 <LCD_Send_Cmd>
		 	 	 	    		    	 																				 					 	Genel_Ekran_Ayar();
 8000bd8:	f7ff fde6 	bl	80007a8 <Genel_Ekran_Ayar>
		 	 	 	    		    	 																				 					                                          }
		 	 	 	     }
	 if(degisken7==3){
 8000bdc:	4b48      	ldr	r3, [pc, #288]	; (8000d00 <Ayar_Gun+0x344>)
 8000bde:	781b      	ldrb	r3, [r3, #0]
 8000be0:	2b03      	cmp	r3, #3
 8000be2:	d137      	bne.n	8000c54 <Ayar_Gun+0x298>
	 	 	 	    	 LCD_Send_String_On_Line1("Carsamba");
 8000be4:	4850      	ldr	r0, [pc, #320]	; (8000d28 <Ayar_Gun+0x36c>)
 8000be6:	f7ff fdc3 	bl	8000770 <LCD_Send_String_On_Line1>
	 	 	 	    	 LCD_Send_String_On_Line2(">>Persembe ");
 8000bea:	4850      	ldr	r0, [pc, #320]	; (8000d2c <Ayar_Gun+0x370>)
 8000bec:	f7ff fdce 	bl	800078c <LCD_Send_String_On_Line2>




	 	 		    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1  )
 8000bf0:	2180      	movs	r1, #128	; 0x80
 8000bf2:	4846      	ldr	r0, [pc, #280]	; (8000d0c <Ayar_Gun+0x350>)
 8000bf4:	f006 faa4 	bl	8007140 <HAL_GPIO_ReadPin>
 8000bf8:	4603      	mov	r3, r0
 8000bfa:	2b01      	cmp	r3, #1
 8000bfc:	d105      	bne.n	8000c0a <Ayar_Gun+0x24e>
	 	 		    	     	  {
	 	 		    	     		  degisken7=5;
 8000bfe:	4b40      	ldr	r3, [pc, #256]	; (8000d00 <Ayar_Gun+0x344>)
 8000c00:	2205      	movs	r2, #5
 8000c02:	701a      	strb	r2, [r3, #0]
	 	 		    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000c04:	2001      	movs	r0, #1
 8000c06:	f7ff fce3 	bl	80005d0 <LCD_Send_Cmd>

	 	 		    	     	  }
	 	 		    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1  )
 8000c0a:	2140      	movs	r1, #64	; 0x40
 8000c0c:	483f      	ldr	r0, [pc, #252]	; (8000d0c <Ayar_Gun+0x350>)
 8000c0e:	f006 fa97 	bl	8007140 <HAL_GPIO_ReadPin>
 8000c12:	4603      	mov	r3, r0
 8000c14:	2b01      	cmp	r3, #1
 8000c16:	d105      	bne.n	8000c24 <Ayar_Gun+0x268>
	 	 		    			    	     	  {
	 	 		    			    	     		  degisken7=6;
 8000c18:	4b39      	ldr	r3, [pc, #228]	; (8000d00 <Ayar_Gun+0x344>)
 8000c1a:	2206      	movs	r2, #6
 8000c1c:	701a      	strb	r2, [r3, #0]
	 	 		    			    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000c1e:	2001      	movs	r0, #1
 8000c20:	f7ff fcd6 	bl	80005d0 <LCD_Send_Cmd>
	 	 		    			    	     	  }
	 	 	 	    	  if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){
 8000c24:	2110      	movs	r1, #16
 8000c26:	483a      	ldr	r0, [pc, #232]	; (8000d10 <Ayar_Gun+0x354>)
 8000c28:	f006 fa8a 	bl	8007140 <HAL_GPIO_ReadPin>
 8000c2c:	4603      	mov	r3, r0
 8000c2e:	2b01      	cmp	r3, #1
 8000c30:	d104      	bne.n	8000c3c <Ayar_Gun+0x280>
	 	 	 	    		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000c32:	2001      	movs	r0, #1
 8000c34:	f7ff fccc 	bl	80005d0 <LCD_Send_Cmd>
	 	 	 	    		persembe();
 8000c38:	f002 fd94 	bl	8003764 <persembe>


	 	 	 	    	  }
	 	 	 	    	  if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8000c3c:	2120      	movs	r1, #32
 8000c3e:	4834      	ldr	r0, [pc, #208]	; (8000d10 <Ayar_Gun+0x354>)
 8000c40:	f006 fa7e 	bl	8007140 <HAL_GPIO_ReadPin>
 8000c44:	4603      	mov	r3, r0
 8000c46:	2b01      	cmp	r3, #1
 8000c48:	d104      	bne.n	8000c54 <Ayar_Gun+0x298>
	 	 	 	    		    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000c4a:	2001      	movs	r0, #1
 8000c4c:	f7ff fcc0 	bl	80005d0 <LCD_Send_Cmd>
	 	 	 	    		    	 																				 					 	Genel_Ekran_Ayar();
 8000c50:	f7ff fdaa 	bl	80007a8 <Genel_Ekran_Ayar>
	 	 	 	    		    	 																				 					                                          }
	 	 	 	     }
	 if(degisken7==6){
 8000c54:	4b2a      	ldr	r3, [pc, #168]	; (8000d00 <Ayar_Gun+0x344>)
 8000c56:	781b      	ldrb	r3, [r3, #0]
 8000c58:	2b06      	cmp	r3, #6
 8000c5a:	d137      	bne.n	8000ccc <Ayar_Gun+0x310>
	 	 	 	 	    	 LCD_Send_String_On_Line1(">>Carsamba");
 8000c5c:	4834      	ldr	r0, [pc, #208]	; (8000d30 <Ayar_Gun+0x374>)
 8000c5e:	f7ff fd87 	bl	8000770 <LCD_Send_String_On_Line1>
	 	 	 	 	    	 LCD_Send_String_On_Line2("Persembe ");
 8000c62:	4834      	ldr	r0, [pc, #208]	; (8000d34 <Ayar_Gun+0x378>)
 8000c64:	f7ff fd92 	bl	800078c <LCD_Send_String_On_Line2>




	 	 	 		    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1  )
 8000c68:	2180      	movs	r1, #128	; 0x80
 8000c6a:	4828      	ldr	r0, [pc, #160]	; (8000d0c <Ayar_Gun+0x350>)
 8000c6c:	f006 fa68 	bl	8007140 <HAL_GPIO_ReadPin>
 8000c70:	4603      	mov	r3, r0
 8000c72:	2b01      	cmp	r3, #1
 8000c74:	d105      	bne.n	8000c82 <Ayar_Gun+0x2c6>
	 	 	 		    	     	  {
	 	 	 		    	     		  degisken7=3;
 8000c76:	4b22      	ldr	r3, [pc, #136]	; (8000d00 <Ayar_Gun+0x344>)
 8000c78:	2203      	movs	r2, #3
 8000c7a:	701a      	strb	r2, [r3, #0]
	 	 	 		    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000c7c:	2001      	movs	r0, #1
 8000c7e:	f7ff fca7 	bl	80005d0 <LCD_Send_Cmd>

	 	 	 		    	     	  }
	 	 	 		    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1  )
 8000c82:	2140      	movs	r1, #64	; 0x40
 8000c84:	4821      	ldr	r0, [pc, #132]	; (8000d0c <Ayar_Gun+0x350>)
 8000c86:	f006 fa5b 	bl	8007140 <HAL_GPIO_ReadPin>
 8000c8a:	4603      	mov	r3, r0
 8000c8c:	2b01      	cmp	r3, #1
 8000c8e:	d105      	bne.n	8000c9c <Ayar_Gun+0x2e0>
	 	 	 		    			    	     	  {
	 	 	 		    			    	     		  degisken7=4;
 8000c90:	4b1b      	ldr	r3, [pc, #108]	; (8000d00 <Ayar_Gun+0x344>)
 8000c92:	2204      	movs	r2, #4
 8000c94:	701a      	strb	r2, [r3, #0]
	 	 	 		    			    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000c96:	2001      	movs	r0, #1
 8000c98:	f7ff fc9a 	bl	80005d0 <LCD_Send_Cmd>
	 	 	 		    			    	     	  }
	 	 	 	 	    	  if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){
 8000c9c:	2110      	movs	r1, #16
 8000c9e:	481c      	ldr	r0, [pc, #112]	; (8000d10 <Ayar_Gun+0x354>)
 8000ca0:	f006 fa4e 	bl	8007140 <HAL_GPIO_ReadPin>
 8000ca4:	4603      	mov	r3, r0
 8000ca6:	2b01      	cmp	r3, #1
 8000ca8:	d104      	bne.n	8000cb4 <Ayar_Gun+0x2f8>
	 	 	 	 	    		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000caa:	2001      	movs	r0, #1
 8000cac:	f7ff fc90 	bl	80005d0 <LCD_Send_Cmd>
	 	 	 	 	    		carsamba();
 8000cb0:	f002 fa7e 	bl	80031b0 <carsamba>


	 	 	 	 	    	  }
	 	 	 	 	      if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8000cb4:	2120      	movs	r1, #32
 8000cb6:	4816      	ldr	r0, [pc, #88]	; (8000d10 <Ayar_Gun+0x354>)
 8000cb8:	f006 fa42 	bl	8007140 <HAL_GPIO_ReadPin>
 8000cbc:	4603      	mov	r3, r0
 8000cbe:	2b01      	cmp	r3, #1
 8000cc0:	d104      	bne.n	8000ccc <Ayar_Gun+0x310>
	 	 	 	 	    	    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000cc2:	2001      	movs	r0, #1
 8000cc4:	f7ff fc84 	bl	80005d0 <LCD_Send_Cmd>
	 	 	 	 	    	    	 																				 					 	Genel_Ekran_Ayar();
 8000cc8:	f7ff fd6e 	bl	80007a8 <Genel_Ekran_Ayar>
	 	 	 	 	    	    	 																				 					                                          }
	 	 	 	 	     }
	 if(degisken7==5){
 8000ccc:	4b0c      	ldr	r3, [pc, #48]	; (8000d00 <Ayar_Gun+0x344>)
 8000cce:	781b      	ldrb	r3, [r3, #0]
 8000cd0:	2b05      	cmp	r3, #5
 8000cd2:	d160      	bne.n	8000d96 <Ayar_Gun+0x3da>
		 	 	 	 	    	 LCD_Send_String_On_Line1("Persembe");
 8000cd4:	4818      	ldr	r0, [pc, #96]	; (8000d38 <Ayar_Gun+0x37c>)
 8000cd6:	f7ff fd4b 	bl	8000770 <LCD_Send_String_On_Line1>
		 	 	 	 	    	 LCD_Send_String_On_Line2(">>Cuma ");
 8000cda:	4818      	ldr	r0, [pc, #96]	; (8000d3c <Ayar_Gun+0x380>)
 8000cdc:	f7ff fd56 	bl	800078c <LCD_Send_String_On_Line2>




		 	 	 		    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1  )
 8000ce0:	2180      	movs	r1, #128	; 0x80
 8000ce2:	480a      	ldr	r0, [pc, #40]	; (8000d0c <Ayar_Gun+0x350>)
 8000ce4:	f006 fa2c 	bl	8007140 <HAL_GPIO_ReadPin>
 8000ce8:	4603      	mov	r3, r0
 8000cea:	2b01      	cmp	r3, #1
 8000cec:	d12e      	bne.n	8000d4c <Ayar_Gun+0x390>
 8000cee:	e027      	b.n	8000d40 <Ayar_Gun+0x384>
 8000cf0:	20000480 	.word	0x20000480
 8000cf4:	20000344 	.word	0x20000344
 8000cf8:	2000021c 	.word	0x2000021c
 8000cfc:	080e0000 	.word	0x080e0000
 8000d00:	2000003e 	.word	0x2000003e
 8000d04:	08008de0 	.word	0x08008de0
 8000d08:	08008dec 	.word	0x08008dec
 8000d0c:	40020000 	.word	0x40020000
 8000d10:	40020800 	.word	0x40020800
 8000d14:	08008df4 	.word	0x08008df4
 8000d18:	08008e00 	.word	0x08008e00
 8000d1c:	08008e08 	.word	0x08008e08
 8000d20:	08008e10 	.word	0x08008e10
 8000d24:	08008e1c 	.word	0x08008e1c
 8000d28:	08008e24 	.word	0x08008e24
 8000d2c:	08008e30 	.word	0x08008e30
 8000d30:	08008e3c 	.word	0x08008e3c
 8000d34:	08008e48 	.word	0x08008e48
 8000d38:	08008e54 	.word	0x08008e54
 8000d3c:	08008e60 	.word	0x08008e60
		 	 	 		    	     	  {
		 	 	 		    	     		  degisken7=7;
 8000d40:	4bac      	ldr	r3, [pc, #688]	; (8000ff4 <Ayar_Gun+0x638>)
 8000d42:	2207      	movs	r2, #7
 8000d44:	701a      	strb	r2, [r3, #0]
		 	 	 		    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000d46:	2001      	movs	r0, #1
 8000d48:	f7ff fc42 	bl	80005d0 <LCD_Send_Cmd>

		 	 	 		    	     	  }
		 	 	 		    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1  )
 8000d4c:	2140      	movs	r1, #64	; 0x40
 8000d4e:	48aa      	ldr	r0, [pc, #680]	; (8000ff8 <Ayar_Gun+0x63c>)
 8000d50:	f006 f9f6 	bl	8007140 <HAL_GPIO_ReadPin>
 8000d54:	4603      	mov	r3, r0
 8000d56:	2b01      	cmp	r3, #1
 8000d58:	d105      	bne.n	8000d66 <Ayar_Gun+0x3aa>
		 	 	 		    			    	     	  {
		 	 	 		    			    	     		  degisken7=8;
 8000d5a:	4ba6      	ldr	r3, [pc, #664]	; (8000ff4 <Ayar_Gun+0x638>)
 8000d5c:	2208      	movs	r2, #8
 8000d5e:	701a      	strb	r2, [r3, #0]
		 	 	 		    			    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000d60:	2001      	movs	r0, #1
 8000d62:	f7ff fc35 	bl	80005d0 <LCD_Send_Cmd>
		 	 	 		    			    	     	  }
		 	 	 	 	    	  if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){
 8000d66:	2110      	movs	r1, #16
 8000d68:	48a4      	ldr	r0, [pc, #656]	; (8000ffc <Ayar_Gun+0x640>)
 8000d6a:	f006 f9e9 	bl	8007140 <HAL_GPIO_ReadPin>
 8000d6e:	4603      	mov	r3, r0
 8000d70:	2b01      	cmp	r3, #1
 8000d72:	d104      	bne.n	8000d7e <Ayar_Gun+0x3c2>
		 	 	 	 	    		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000d74:	2001      	movs	r0, #1
 8000d76:	f7ff fc2b 	bl	80005d0 <LCD_Send_Cmd>
		 	 	 	 	    		cuma();
 8000d7a:	f002 ffb5 	bl	8003ce8 <cuma>


		 	 	 	 	    	  }
		 	 	 	 	      if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8000d7e:	2120      	movs	r1, #32
 8000d80:	489e      	ldr	r0, [pc, #632]	; (8000ffc <Ayar_Gun+0x640>)
 8000d82:	f006 f9dd 	bl	8007140 <HAL_GPIO_ReadPin>
 8000d86:	4603      	mov	r3, r0
 8000d88:	2b01      	cmp	r3, #1
 8000d8a:	d104      	bne.n	8000d96 <Ayar_Gun+0x3da>
		 	 	 	 	    	    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000d8c:	2001      	movs	r0, #1
 8000d8e:	f7ff fc1f 	bl	80005d0 <LCD_Send_Cmd>
		 	 	 	 	    	    	 																				 					 	Genel_Ekran_Ayar();
 8000d92:	f7ff fd09 	bl	80007a8 <Genel_Ekran_Ayar>
		 	 	 	 	    	    	 																				 					                                          }
		 	 	 	 	     }

	 if(degisken7==8){
 8000d96:	4b97      	ldr	r3, [pc, #604]	; (8000ff4 <Ayar_Gun+0x638>)
 8000d98:	781b      	ldrb	r3, [r3, #0]
 8000d9a:	2b08      	cmp	r3, #8
 8000d9c:	d137      	bne.n	8000e0e <Ayar_Gun+0x452>
			 	 	 	 	    	 LCD_Send_String_On_Line1(">>Persembe");
 8000d9e:	4898      	ldr	r0, [pc, #608]	; (8001000 <Ayar_Gun+0x644>)
 8000da0:	f7ff fce6 	bl	8000770 <LCD_Send_String_On_Line1>
			 	 	 	 	    	 LCD_Send_String_On_Line2("Cuma ");
 8000da4:	4897      	ldr	r0, [pc, #604]	; (8001004 <Ayar_Gun+0x648>)
 8000da6:	f7ff fcf1 	bl	800078c <LCD_Send_String_On_Line2>




			 	 	 		    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1  )
 8000daa:	2180      	movs	r1, #128	; 0x80
 8000dac:	4892      	ldr	r0, [pc, #584]	; (8000ff8 <Ayar_Gun+0x63c>)
 8000dae:	f006 f9c7 	bl	8007140 <HAL_GPIO_ReadPin>
 8000db2:	4603      	mov	r3, r0
 8000db4:	2b01      	cmp	r3, #1
 8000db6:	d105      	bne.n	8000dc4 <Ayar_Gun+0x408>
			 	 	 		    	     	  {
			 	 	 		    	     		  degisken7=5;
 8000db8:	4b8e      	ldr	r3, [pc, #568]	; (8000ff4 <Ayar_Gun+0x638>)
 8000dba:	2205      	movs	r2, #5
 8000dbc:	701a      	strb	r2, [r3, #0]
			 	 	 		    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000dbe:	2001      	movs	r0, #1
 8000dc0:	f7ff fc06 	bl	80005d0 <LCD_Send_Cmd>

			 	 	 		    	     	  }
			 	 	 		    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1  )
 8000dc4:	2140      	movs	r1, #64	; 0x40
 8000dc6:	488c      	ldr	r0, [pc, #560]	; (8000ff8 <Ayar_Gun+0x63c>)
 8000dc8:	f006 f9ba 	bl	8007140 <HAL_GPIO_ReadPin>
 8000dcc:	4603      	mov	r3, r0
 8000dce:	2b01      	cmp	r3, #1
 8000dd0:	d105      	bne.n	8000dde <Ayar_Gun+0x422>
			 	 	 		    			    	     	  {
			 	 	 		    			    	     		  degisken7=6;
 8000dd2:	4b88      	ldr	r3, [pc, #544]	; (8000ff4 <Ayar_Gun+0x638>)
 8000dd4:	2206      	movs	r2, #6
 8000dd6:	701a      	strb	r2, [r3, #0]
			 	 	 		    			    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000dd8:	2001      	movs	r0, #1
 8000dda:	f7ff fbf9 	bl	80005d0 <LCD_Send_Cmd>
			 	 	 		    			    	     	  }
			 	 	 	 	    	  if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){
 8000dde:	2110      	movs	r1, #16
 8000de0:	4886      	ldr	r0, [pc, #536]	; (8000ffc <Ayar_Gun+0x640>)
 8000de2:	f006 f9ad 	bl	8007140 <HAL_GPIO_ReadPin>
 8000de6:	4603      	mov	r3, r0
 8000de8:	2b01      	cmp	r3, #1
 8000dea:	d104      	bne.n	8000df6 <Ayar_Gun+0x43a>
			 	 	 	 	    		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000dec:	2001      	movs	r0, #1
 8000dee:	f7ff fbef 	bl	80005d0 <LCD_Send_Cmd>
			 	 	 	 	    		persembe();
 8000df2:	f002 fcb7 	bl	8003764 <persembe>


			 	 	 	 	    	  }
			 	 	 	 	      if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8000df6:	2120      	movs	r1, #32
 8000df8:	4880      	ldr	r0, [pc, #512]	; (8000ffc <Ayar_Gun+0x640>)
 8000dfa:	f006 f9a1 	bl	8007140 <HAL_GPIO_ReadPin>
 8000dfe:	4603      	mov	r3, r0
 8000e00:	2b01      	cmp	r3, #1
 8000e02:	d104      	bne.n	8000e0e <Ayar_Gun+0x452>
			 	 	 	 	    	    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000e04:	2001      	movs	r0, #1
 8000e06:	f7ff fbe3 	bl	80005d0 <LCD_Send_Cmd>
			 	 	 	 	    	    	 																				 					 	Genel_Ekran_Ayar();
 8000e0a:	f7ff fccd 	bl	80007a8 <Genel_Ekran_Ayar>
			 	 	 	 	    	    	 																				 					                                          }
			 	 	 	 	     }
	 if(degisken7==7){
 8000e0e:	4b79      	ldr	r3, [pc, #484]	; (8000ff4 <Ayar_Gun+0x638>)
 8000e10:	781b      	ldrb	r3, [r3, #0]
 8000e12:	2b07      	cmp	r3, #7
 8000e14:	d137      	bne.n	8000e86 <Ayar_Gun+0x4ca>
				 	 	 	 	    	 LCD_Send_String_On_Line1("Cuma");
 8000e16:	487c      	ldr	r0, [pc, #496]	; (8001008 <Ayar_Gun+0x64c>)
 8000e18:	f7ff fcaa 	bl	8000770 <LCD_Send_String_On_Line1>
				 	 	 	 	    	 LCD_Send_String_On_Line2(">>Cumartesi ");
 8000e1c:	487b      	ldr	r0, [pc, #492]	; (800100c <Ayar_Gun+0x650>)
 8000e1e:	f7ff fcb5 	bl	800078c <LCD_Send_String_On_Line2>




				 	 	 		    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1  )
 8000e22:	2180      	movs	r1, #128	; 0x80
 8000e24:	4874      	ldr	r0, [pc, #464]	; (8000ff8 <Ayar_Gun+0x63c>)
 8000e26:	f006 f98b 	bl	8007140 <HAL_GPIO_ReadPin>
 8000e2a:	4603      	mov	r3, r0
 8000e2c:	2b01      	cmp	r3, #1
 8000e2e:	d105      	bne.n	8000e3c <Ayar_Gun+0x480>
				 	 	 		    	     	  {
				 	 	 		    	     		  degisken7=9;
 8000e30:	4b70      	ldr	r3, [pc, #448]	; (8000ff4 <Ayar_Gun+0x638>)
 8000e32:	2209      	movs	r2, #9
 8000e34:	701a      	strb	r2, [r3, #0]
				 	 	 		    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000e36:	2001      	movs	r0, #1
 8000e38:	f7ff fbca 	bl	80005d0 <LCD_Send_Cmd>

				 	 	 		    	     	  }
				 	 	 		    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1  )
 8000e3c:	2140      	movs	r1, #64	; 0x40
 8000e3e:	486e      	ldr	r0, [pc, #440]	; (8000ff8 <Ayar_Gun+0x63c>)
 8000e40:	f006 f97e 	bl	8007140 <HAL_GPIO_ReadPin>
 8000e44:	4603      	mov	r3, r0
 8000e46:	2b01      	cmp	r3, #1
 8000e48:	d105      	bne.n	8000e56 <Ayar_Gun+0x49a>
				 	 	 		    			    	     	  {
				 	 	 		    			    	     		  degisken7=10;
 8000e4a:	4b6a      	ldr	r3, [pc, #424]	; (8000ff4 <Ayar_Gun+0x638>)
 8000e4c:	220a      	movs	r2, #10
 8000e4e:	701a      	strb	r2, [r3, #0]
				 	 	 		    			    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000e50:	2001      	movs	r0, #1
 8000e52:	f7ff fbbd 	bl	80005d0 <LCD_Send_Cmd>
				 	 	 		    			    	     	  }
				 	 	 	 	    	  if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){
 8000e56:	2110      	movs	r1, #16
 8000e58:	4868      	ldr	r0, [pc, #416]	; (8000ffc <Ayar_Gun+0x640>)
 8000e5a:	f006 f971 	bl	8007140 <HAL_GPIO_ReadPin>
 8000e5e:	4603      	mov	r3, r0
 8000e60:	2b01      	cmp	r3, #1
 8000e62:	d104      	bne.n	8000e6e <Ayar_Gun+0x4b2>
				 	 	 	 	    		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000e64:	2001      	movs	r0, #1
 8000e66:	f7ff fbb3 	bl	80005d0 <LCD_Send_Cmd>
				 	 	 	 	    		cumartesi();
 8000e6a:	f003 f9ff 	bl	800426c <cumartesi>


				 	 	 	 	    	  }
				 	 	 	 	      if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8000e6e:	2120      	movs	r1, #32
 8000e70:	4862      	ldr	r0, [pc, #392]	; (8000ffc <Ayar_Gun+0x640>)
 8000e72:	f006 f965 	bl	8007140 <HAL_GPIO_ReadPin>
 8000e76:	4603      	mov	r3, r0
 8000e78:	2b01      	cmp	r3, #1
 8000e7a:	d104      	bne.n	8000e86 <Ayar_Gun+0x4ca>
				 	 	 	 	    	    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000e7c:	2001      	movs	r0, #1
 8000e7e:	f7ff fba7 	bl	80005d0 <LCD_Send_Cmd>
				 	 	 	 	    	    	 																				 					 	Genel_Ekran_Ayar();
 8000e82:	f7ff fc91 	bl	80007a8 <Genel_Ekran_Ayar>
				 	 	 	 	    	    	 																				 					                                          }
				 	 	 	 	     }
	 if(degisken7==10){
 8000e86:	4b5b      	ldr	r3, [pc, #364]	; (8000ff4 <Ayar_Gun+0x638>)
 8000e88:	781b      	ldrb	r3, [r3, #0]
 8000e8a:	2b0a      	cmp	r3, #10
 8000e8c:	d137      	bne.n	8000efe <Ayar_Gun+0x542>
					 	 	 	 	    	 LCD_Send_String_On_Line1(">>Cuma");
 8000e8e:	4860      	ldr	r0, [pc, #384]	; (8001010 <Ayar_Gun+0x654>)
 8000e90:	f7ff fc6e 	bl	8000770 <LCD_Send_String_On_Line1>
					 	 	 	 	    	 LCD_Send_String_On_Line2("Cumartesi ");
 8000e94:	485f      	ldr	r0, [pc, #380]	; (8001014 <Ayar_Gun+0x658>)
 8000e96:	f7ff fc79 	bl	800078c <LCD_Send_String_On_Line2>




					 	 	 		    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1  )
 8000e9a:	2180      	movs	r1, #128	; 0x80
 8000e9c:	4856      	ldr	r0, [pc, #344]	; (8000ff8 <Ayar_Gun+0x63c>)
 8000e9e:	f006 f94f 	bl	8007140 <HAL_GPIO_ReadPin>
 8000ea2:	4603      	mov	r3, r0
 8000ea4:	2b01      	cmp	r3, #1
 8000ea6:	d105      	bne.n	8000eb4 <Ayar_Gun+0x4f8>
					 	 	 		    	     	  {
					 	 	 		    	     		  degisken7=7;
 8000ea8:	4b52      	ldr	r3, [pc, #328]	; (8000ff4 <Ayar_Gun+0x638>)
 8000eaa:	2207      	movs	r2, #7
 8000eac:	701a      	strb	r2, [r3, #0]
					 	 	 		    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000eae:	2001      	movs	r0, #1
 8000eb0:	f7ff fb8e 	bl	80005d0 <LCD_Send_Cmd>

					 	 	 		    	     	  }
					 	 	 		    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1  )
 8000eb4:	2140      	movs	r1, #64	; 0x40
 8000eb6:	4850      	ldr	r0, [pc, #320]	; (8000ff8 <Ayar_Gun+0x63c>)
 8000eb8:	f006 f942 	bl	8007140 <HAL_GPIO_ReadPin>
 8000ebc:	4603      	mov	r3, r0
 8000ebe:	2b01      	cmp	r3, #1
 8000ec0:	d105      	bne.n	8000ece <Ayar_Gun+0x512>
					 	 	 		    			    	     	  {
					 	 	 		    			    	     		  degisken7=8;
 8000ec2:	4b4c      	ldr	r3, [pc, #304]	; (8000ff4 <Ayar_Gun+0x638>)
 8000ec4:	2208      	movs	r2, #8
 8000ec6:	701a      	strb	r2, [r3, #0]
					 	 	 		    			    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000ec8:	2001      	movs	r0, #1
 8000eca:	f7ff fb81 	bl	80005d0 <LCD_Send_Cmd>
					 	 	 		    			    	     	  }
					 	 	 	 	    	  if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){
 8000ece:	2110      	movs	r1, #16
 8000ed0:	484a      	ldr	r0, [pc, #296]	; (8000ffc <Ayar_Gun+0x640>)
 8000ed2:	f006 f935 	bl	8007140 <HAL_GPIO_ReadPin>
 8000ed6:	4603      	mov	r3, r0
 8000ed8:	2b01      	cmp	r3, #1
 8000eda:	d104      	bne.n	8000ee6 <Ayar_Gun+0x52a>
					 	 	 	 	    		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000edc:	2001      	movs	r0, #1
 8000ede:	f7ff fb77 	bl	80005d0 <LCD_Send_Cmd>
					 	 	 	 	    		cuma();
 8000ee2:	f002 ff01 	bl	8003ce8 <cuma>


					 	 	 	 	    	  }
					 	 	 	 	      if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8000ee6:	2120      	movs	r1, #32
 8000ee8:	4844      	ldr	r0, [pc, #272]	; (8000ffc <Ayar_Gun+0x640>)
 8000eea:	f006 f929 	bl	8007140 <HAL_GPIO_ReadPin>
 8000eee:	4603      	mov	r3, r0
 8000ef0:	2b01      	cmp	r3, #1
 8000ef2:	d104      	bne.n	8000efe <Ayar_Gun+0x542>
					 	 	 	 	    	    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000ef4:	2001      	movs	r0, #1
 8000ef6:	f7ff fb6b 	bl	80005d0 <LCD_Send_Cmd>
					 	 	 	 	    	    	 																				 					 	Genel_Ekran_Ayar();
 8000efa:	f7ff fc55 	bl	80007a8 <Genel_Ekran_Ayar>
					 	 	 	 	    	    	 																				 					                                          }
					 	 	 	 	     }
	 if(degisken7==9){
 8000efe:	4b3d      	ldr	r3, [pc, #244]	; (8000ff4 <Ayar_Gun+0x638>)
 8000f00:	781b      	ldrb	r3, [r3, #0]
 8000f02:	2b09      	cmp	r3, #9
 8000f04:	d137      	bne.n	8000f76 <Ayar_Gun+0x5ba>
	 				 	 	 	 	    	 LCD_Send_String_On_Line1("Cumartesi");
 8000f06:	4844      	ldr	r0, [pc, #272]	; (8001018 <Ayar_Gun+0x65c>)
 8000f08:	f7ff fc32 	bl	8000770 <LCD_Send_String_On_Line1>
	 				 	 	 	 	    	 LCD_Send_String_On_Line2(">>Pazar");
 8000f0c:	4843      	ldr	r0, [pc, #268]	; (800101c <Ayar_Gun+0x660>)
 8000f0e:	f7ff fc3d 	bl	800078c <LCD_Send_String_On_Line2>




	 				 	 	 		    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1  )
 8000f12:	2180      	movs	r1, #128	; 0x80
 8000f14:	4838      	ldr	r0, [pc, #224]	; (8000ff8 <Ayar_Gun+0x63c>)
 8000f16:	f006 f913 	bl	8007140 <HAL_GPIO_ReadPin>
 8000f1a:	4603      	mov	r3, r0
 8000f1c:	2b01      	cmp	r3, #1
 8000f1e:	d105      	bne.n	8000f2c <Ayar_Gun+0x570>
	 				 	 	 		    	     	  {
	 				 	 	 		    	     		  degisken7=0;
 8000f20:	4b34      	ldr	r3, [pc, #208]	; (8000ff4 <Ayar_Gun+0x638>)
 8000f22:	2200      	movs	r2, #0
 8000f24:	701a      	strb	r2, [r3, #0]
	 				 	 	 		    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000f26:	2001      	movs	r0, #1
 8000f28:	f7ff fb52 	bl	80005d0 <LCD_Send_Cmd>

	 				 	 	 		    	     	  }
	 				 	 	 		    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1  )
 8000f2c:	2140      	movs	r1, #64	; 0x40
 8000f2e:	4832      	ldr	r0, [pc, #200]	; (8000ff8 <Ayar_Gun+0x63c>)
 8000f30:	f006 f906 	bl	8007140 <HAL_GPIO_ReadPin>
 8000f34:	4603      	mov	r3, r0
 8000f36:	2b01      	cmp	r3, #1
 8000f38:	d105      	bne.n	8000f46 <Ayar_Gun+0x58a>
	 				 	 	 		    			    	     	  {
	 				 	 	 		    			    	     		  degisken7=11;
 8000f3a:	4b2e      	ldr	r3, [pc, #184]	; (8000ff4 <Ayar_Gun+0x638>)
 8000f3c:	220b      	movs	r2, #11
 8000f3e:	701a      	strb	r2, [r3, #0]
	 				 	 	 		    			    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000f40:	2001      	movs	r0, #1
 8000f42:	f7ff fb45 	bl	80005d0 <LCD_Send_Cmd>
	 				 	 	 		    			    	     	  }
	 				 	 	 	 	    	  if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){
 8000f46:	2110      	movs	r1, #16
 8000f48:	482c      	ldr	r0, [pc, #176]	; (8000ffc <Ayar_Gun+0x640>)
 8000f4a:	f006 f8f9 	bl	8007140 <HAL_GPIO_ReadPin>
 8000f4e:	4603      	mov	r3, r0
 8000f50:	2b01      	cmp	r3, #1
 8000f52:	d104      	bne.n	8000f5e <Ayar_Gun+0x5a2>
	 				 	 	 	 	    		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000f54:	2001      	movs	r0, #1
 8000f56:	f7ff fb3b 	bl	80005d0 <LCD_Send_Cmd>
	 				 	 	 	 	    		pazar();
 8000f5a:	f003 fc49 	bl	80047f0 <pazar>


	 				 	 	 	 	    	  }
	 				 	 	 	 	     if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8000f5e:	2120      	movs	r1, #32
 8000f60:	4826      	ldr	r0, [pc, #152]	; (8000ffc <Ayar_Gun+0x640>)
 8000f62:	f006 f8ed 	bl	8007140 <HAL_GPIO_ReadPin>
 8000f66:	4603      	mov	r3, r0
 8000f68:	2b01      	cmp	r3, #1
 8000f6a:	d104      	bne.n	8000f76 <Ayar_Gun+0x5ba>
	 				 	 	 	 	   	    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000f6c:	2001      	movs	r0, #1
 8000f6e:	f7ff fb2f 	bl	80005d0 <LCD_Send_Cmd>
	 				 	 	 	 	   	    	 																				 					 	Genel_Ekran_Ayar();
 8000f72:	f7ff fc19 	bl	80007a8 <Genel_Ekran_Ayar>
	 				 	 	 	 	   	    	 																				 					                                          }
	 				 	 	 	 	     }
	 if(degisken7==11){
 8000f76:	4b1f      	ldr	r3, [pc, #124]	; (8000ff4 <Ayar_Gun+0x638>)
 8000f78:	781b      	ldrb	r3, [r3, #0]
 8000f7a:	2b0b      	cmp	r3, #11
 8000f7c:	f47f ad4b 	bne.w	8000a16 <Ayar_Gun+0x5a>
		 				 	 	 	 	    	 LCD_Send_String_On_Line1(">>Cumartesi");
 8000f80:	4827      	ldr	r0, [pc, #156]	; (8001020 <Ayar_Gun+0x664>)
 8000f82:	f7ff fbf5 	bl	8000770 <LCD_Send_String_On_Line1>
		 				 	 	 	 	    	 LCD_Send_String_On_Line2("Pazar");
 8000f86:	4827      	ldr	r0, [pc, #156]	; (8001024 <Ayar_Gun+0x668>)
 8000f88:	f7ff fc00 	bl	800078c <LCD_Send_String_On_Line2>




		 				 	 	 		    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1  )
 8000f8c:	2180      	movs	r1, #128	; 0x80
 8000f8e:	481a      	ldr	r0, [pc, #104]	; (8000ff8 <Ayar_Gun+0x63c>)
 8000f90:	f006 f8d6 	bl	8007140 <HAL_GPIO_ReadPin>
 8000f94:	4603      	mov	r3, r0
 8000f96:	2b01      	cmp	r3, #1
 8000f98:	d105      	bne.n	8000fa6 <Ayar_Gun+0x5ea>
		 				 	 	 		    	     	  {
		 				 	 	 		    	     		  degisken7=9;
 8000f9a:	4b16      	ldr	r3, [pc, #88]	; (8000ff4 <Ayar_Gun+0x638>)
 8000f9c:	2209      	movs	r2, #9
 8000f9e:	701a      	strb	r2, [r3, #0]
		 				 	 	 		    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000fa0:	2001      	movs	r0, #1
 8000fa2:	f7ff fb15 	bl	80005d0 <LCD_Send_Cmd>

		 				 	 	 		    	     	  }
		 				 	 	 		    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1  )
 8000fa6:	2140      	movs	r1, #64	; 0x40
 8000fa8:	4813      	ldr	r0, [pc, #76]	; (8000ff8 <Ayar_Gun+0x63c>)
 8000faa:	f006 f8c9 	bl	8007140 <HAL_GPIO_ReadPin>
 8000fae:	4603      	mov	r3, r0
 8000fb0:	2b01      	cmp	r3, #1
 8000fb2:	d105      	bne.n	8000fc0 <Ayar_Gun+0x604>
		 				 	 	 		    			    	     	  {
		 				 	 	 		    			    	     		  degisken7=10;
 8000fb4:	4b0f      	ldr	r3, [pc, #60]	; (8000ff4 <Ayar_Gun+0x638>)
 8000fb6:	220a      	movs	r2, #10
 8000fb8:	701a      	strb	r2, [r3, #0]
		 				 	 	 		    			    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000fba:	2001      	movs	r0, #1
 8000fbc:	f7ff fb08 	bl	80005d0 <LCD_Send_Cmd>
		 				 	 	 		    			    	     	  }
		 				 	 	 	 	    	  if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){
 8000fc0:	2110      	movs	r1, #16
 8000fc2:	480e      	ldr	r0, [pc, #56]	; (8000ffc <Ayar_Gun+0x640>)
 8000fc4:	f006 f8bc 	bl	8007140 <HAL_GPIO_ReadPin>
 8000fc8:	4603      	mov	r3, r0
 8000fca:	2b01      	cmp	r3, #1
 8000fcc:	d104      	bne.n	8000fd8 <Ayar_Gun+0x61c>
		 				 	 	 	 	    		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000fce:	2001      	movs	r0, #1
 8000fd0:	f7ff fafe 	bl	80005d0 <LCD_Send_Cmd>
		 				 	 	 	 	    		cumartesi();
 8000fd4:	f003 f94a 	bl	800426c <cumartesi>


		 				 	 	 	 	    	  }
		 				 	 	 	 	     if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8000fd8:	2120      	movs	r1, #32
 8000fda:	4808      	ldr	r0, [pc, #32]	; (8000ffc <Ayar_Gun+0x640>)
 8000fdc:	f006 f8b0 	bl	8007140 <HAL_GPIO_ReadPin>
 8000fe0:	4603      	mov	r3, r0
 8000fe2:	2b01      	cmp	r3, #1
 8000fe4:	f47f ad17 	bne.w	8000a16 <Ayar_Gun+0x5a>
		 				 	 	 	 	   	    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8000fe8:	2001      	movs	r0, #1
 8000fea:	f7ff faf1 	bl	80005d0 <LCD_Send_Cmd>
		 				 	 	 	 	   	    	 																				 					 	Genel_Ekran_Ayar();
 8000fee:	f7ff fbdb 	bl	80007a8 <Genel_Ekran_Ayar>
	 if(degisken7==0){
 8000ff2:	e510      	b.n	8000a16 <Ayar_Gun+0x5a>
 8000ff4:	2000003e 	.word	0x2000003e
 8000ff8:	40020000 	.word	0x40020000
 8000ffc:	40020800 	.word	0x40020800
 8001000:	08008e68 	.word	0x08008e68
 8001004:	08008e74 	.word	0x08008e74
 8001008:	08008e7c 	.word	0x08008e7c
 800100c:	08008e84 	.word	0x08008e84
 8001010:	08008e94 	.word	0x08008e94
 8001014:	08008e9c 	.word	0x08008e9c
 8001018:	08008ea8 	.word	0x08008ea8
 800101c:	08008eb4 	.word	0x08008eb4
 8001020:	08008ebc 	.word	0x08008ebc
 8001024:	08008ec8 	.word	0x08008ec8

08001028 <Ayar_Pompa>:
		 				 	 	 	 	     }

	}
}

void Ayar_Pompa(){
 8001028:	b580      	push	{r7, lr}
 800102a:	af00      	add	r7, sp, #0


	while(1){


		if(degisken2==0){
 800102c:	4bcf      	ldr	r3, [pc, #828]	; (800136c <Ayar_Pompa+0x344>)
 800102e:	781b      	ldrb	r3, [r3, #0]
 8001030:	2b00      	cmp	r3, #0
 8001032:	d141      	bne.n	80010b8 <Ayar_Pompa+0x90>
		    	 LCD_Send_String_On_Line1(">>Pompa 1   ");
 8001034:	48ce      	ldr	r0, [pc, #824]	; (8001370 <Ayar_Pompa+0x348>)
 8001036:	f7ff fb9b 	bl	8000770 <LCD_Send_String_On_Line1>
		    	 LCD_Send_String_On_Line2(" Pompa 2  ");
 800103a:	48ce      	ldr	r0, [pc, #824]	; (8001374 <Ayar_Pompa+0x34c>)
 800103c:	f7ff fba6 	bl	800078c <LCD_Send_String_On_Line2>

		    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1  )
 8001040:	2180      	movs	r1, #128	; 0x80
 8001042:	48cd      	ldr	r0, [pc, #820]	; (8001378 <Ayar_Pompa+0x350>)
 8001044:	f006 f87c 	bl	8007140 <HAL_GPIO_ReadPin>
 8001048:	4603      	mov	r3, r0
 800104a:	2b01      	cmp	r3, #1
 800104c:	d105      	bne.n	800105a <Ayar_Pompa+0x32>
		    	     	  {
		    	     		  degisken2=1;
 800104e:	4bc7      	ldr	r3, [pc, #796]	; (800136c <Ayar_Pompa+0x344>)
 8001050:	2201      	movs	r2, #1
 8001052:	701a      	strb	r2, [r3, #0]
		    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001054:	2001      	movs	r0, #1
 8001056:	f7ff fabb 	bl	80005d0 <LCD_Send_Cmd>

		    	     	  }
		    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1  )
 800105a:	2140      	movs	r1, #64	; 0x40
 800105c:	48c6      	ldr	r0, [pc, #792]	; (8001378 <Ayar_Pompa+0x350>)
 800105e:	f006 f86f 	bl	8007140 <HAL_GPIO_ReadPin>
 8001062:	4603      	mov	r3, r0
 8001064:	2b01      	cmp	r3, #1
 8001066:	d105      	bne.n	8001074 <Ayar_Pompa+0x4c>
		    			    	     	  {
		    			    	     		  degisken2=3;
 8001068:	4bc0      	ldr	r3, [pc, #768]	; (800136c <Ayar_Pompa+0x344>)
 800106a:	2203      	movs	r2, #3
 800106c:	701a      	strb	r2, [r3, #0]
		    			    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800106e:	2001      	movs	r0, #1
 8001070:	f7ff faae 	bl	80005d0 <LCD_Send_Cmd>

		    			    	     	  }
		    	 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){
 8001074:	2110      	movs	r1, #16
 8001076:	48c1      	ldr	r0, [pc, #772]	; (800137c <Ayar_Pompa+0x354>)
 8001078:	f006 f862 	bl	8007140 <HAL_GPIO_ReadPin>
 800107c:	4603      	mov	r3, r0
 800107e:	2b01      	cmp	r3, #1
 8001080:	d10e      	bne.n	80010a0 <Ayar_Pompa+0x78>
		    		 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001082:	2001      	movs	r0, #1
 8001084:	f7ff faa4 	bl	80005d0 <LCD_Send_Cmd>
		    		    		  LCD_Send_String_On_Line1("     POMPA 1");
 8001088:	48bd      	ldr	r0, [pc, #756]	; (8001380 <Ayar_Pompa+0x358>)
 800108a:	f7ff fb71 	bl	8000770 <LCD_Send_String_On_Line1>
		    		    		  HAL_Delay(1000);
 800108e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001092:	f005 fb95 	bl	80067c0 <HAL_Delay>
		    		 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001096:	2001      	movs	r0, #1
 8001098:	f7ff fa9a 	bl	80005d0 <LCD_Send_Cmd>

		    		 pompa1_ayar();
 800109c:	f000 f996 	bl	80013cc <pompa1_ayar>


		    	 }
		    	 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 80010a0:	2120      	movs	r1, #32
 80010a2:	48b6      	ldr	r0, [pc, #728]	; (800137c <Ayar_Pompa+0x354>)
 80010a4:	f006 f84c 	bl	8007140 <HAL_GPIO_ReadPin>
 80010a8:	4603      	mov	r3, r0
 80010aa:	2b01      	cmp	r3, #1
 80010ac:	d104      	bne.n	80010b8 <Ayar_Pompa+0x90>
		    	     	  	    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80010ae:	2001      	movs	r0, #1
 80010b0:	f7ff fa8e 	bl	80005d0 <LCD_Send_Cmd>
		    	     	  	    	 																				 					Genel_Ekran_Ayar();
 80010b4:	f7ff fb78 	bl	80007a8 <Genel_Ekran_Ayar>
		    	     	  	    	 																				 					                                          }
		}
		if(degisken2==1){
 80010b8:	4bac      	ldr	r3, [pc, #688]	; (800136c <Ayar_Pompa+0x344>)
 80010ba:	781b      	ldrb	r3, [r3, #0]
 80010bc:	2b01      	cmp	r3, #1
 80010be:	d141      	bne.n	8001144 <Ayar_Pompa+0x11c>
				    	 LCD_Send_String_On_Line1(" Pompa 1   ");
 80010c0:	48b0      	ldr	r0, [pc, #704]	; (8001384 <Ayar_Pompa+0x35c>)
 80010c2:	f7ff fb55 	bl	8000770 <LCD_Send_String_On_Line1>
				    	 LCD_Send_String_On_Line2(">>Pompa 2  ");
 80010c6:	48b0      	ldr	r0, [pc, #704]	; (8001388 <Ayar_Pompa+0x360>)
 80010c8:	f7ff fb60 	bl	800078c <LCD_Send_String_On_Line2>

				    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1 )
 80010cc:	2180      	movs	r1, #128	; 0x80
 80010ce:	48aa      	ldr	r0, [pc, #680]	; (8001378 <Ayar_Pompa+0x350>)
 80010d0:	f006 f836 	bl	8007140 <HAL_GPIO_ReadPin>
 80010d4:	4603      	mov	r3, r0
 80010d6:	2b01      	cmp	r3, #1
 80010d8:	d105      	bne.n	80010e6 <Ayar_Pompa+0xbe>
				    	     	  {
				    	     		  degisken2=2;
 80010da:	4ba4      	ldr	r3, [pc, #656]	; (800136c <Ayar_Pompa+0x344>)
 80010dc:	2202      	movs	r2, #2
 80010de:	701a      	strb	r2, [r3, #0]
				    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80010e0:	2001      	movs	r0, #1
 80010e2:	f7ff fa75 	bl	80005d0 <LCD_Send_Cmd>

				    	     	  }
				    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1  )
 80010e6:	2140      	movs	r1, #64	; 0x40
 80010e8:	48a3      	ldr	r0, [pc, #652]	; (8001378 <Ayar_Pompa+0x350>)
 80010ea:	f006 f829 	bl	8007140 <HAL_GPIO_ReadPin>
 80010ee:	4603      	mov	r3, r0
 80010f0:	2b01      	cmp	r3, #1
 80010f2:	d105      	bne.n	8001100 <Ayar_Pompa+0xd8>
				    	 		    			    	     	  {
				    	 		    			    	     		  degisken2=0;
 80010f4:	4b9d      	ldr	r3, [pc, #628]	; (800136c <Ayar_Pompa+0x344>)
 80010f6:	2200      	movs	r2, #0
 80010f8:	701a      	strb	r2, [r3, #0]
				    	 		    			    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80010fa:	2001      	movs	r0, #1
 80010fc:	f7ff fa68 	bl	80005d0 <LCD_Send_Cmd>

				    	 		    			    	     	  }

				    	 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){
 8001100:	2110      	movs	r1, #16
 8001102:	489e      	ldr	r0, [pc, #632]	; (800137c <Ayar_Pompa+0x354>)
 8001104:	f006 f81c 	bl	8007140 <HAL_GPIO_ReadPin>
 8001108:	4603      	mov	r3, r0
 800110a:	2b01      	cmp	r3, #1
 800110c:	d10e      	bne.n	800112c <Ayar_Pompa+0x104>
				    			    		 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800110e:	2001      	movs	r0, #1
 8001110:	f7ff fa5e 	bl	80005d0 <LCD_Send_Cmd>
				    			    		    		  LCD_Send_String_On_Line1("     POMPA 2");
 8001114:	489d      	ldr	r0, [pc, #628]	; (800138c <Ayar_Pompa+0x364>)
 8001116:	f7ff fb2b 	bl	8000770 <LCD_Send_String_On_Line1>
				    			    		    		  HAL_Delay(1000);
 800111a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800111e:	f005 fb4f 	bl	80067c0 <HAL_Delay>
				    			    		 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001122:	2001      	movs	r0, #1
 8001124:	f7ff fa54 	bl	80005d0 <LCD_Send_Cmd>
				    			    		 pompa2_ayar();
 8001128:	f000 fbee 	bl	8001908 <pompa2_ayar>

				    			    	 }
				    	 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 800112c:	2120      	movs	r1, #32
 800112e:	4893      	ldr	r0, [pc, #588]	; (800137c <Ayar_Pompa+0x354>)
 8001130:	f006 f806 	bl	8007140 <HAL_GPIO_ReadPin>
 8001134:	4603      	mov	r3, r0
 8001136:	2b01      	cmp	r3, #1
 8001138:	d104      	bne.n	8001144 <Ayar_Pompa+0x11c>
				    	 		    	     	  	    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800113a:	2001      	movs	r0, #1
 800113c:	f7ff fa48 	bl	80005d0 <LCD_Send_Cmd>
				    	 		    	     	  	    	 																				 					Genel_Ekran_Ayar();
 8001140:	f7ff fb32 	bl	80007a8 <Genel_Ekran_Ayar>
				    	 		    	     	  	    	 																				 					                                          }
				}
		if(degisken2==2){
 8001144:	4b89      	ldr	r3, [pc, #548]	; (800136c <Ayar_Pompa+0x344>)
 8001146:	781b      	ldrb	r3, [r3, #0]
 8001148:	2b02      	cmp	r3, #2
 800114a:	d141      	bne.n	80011d0 <Ayar_Pompa+0x1a8>
						    	 LCD_Send_String_On_Line1(" Pompa 2   ");
 800114c:	4890      	ldr	r0, [pc, #576]	; (8001390 <Ayar_Pompa+0x368>)
 800114e:	f7ff fb0f 	bl	8000770 <LCD_Send_String_On_Line1>
						    	 LCD_Send_String_On_Line2(">>Pompa 3  ");
 8001152:	4890      	ldr	r0, [pc, #576]	; (8001394 <Ayar_Pompa+0x36c>)
 8001154:	f7ff fb1a 	bl	800078c <LCD_Send_String_On_Line2>

						    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1  )
 8001158:	2180      	movs	r1, #128	; 0x80
 800115a:	4887      	ldr	r0, [pc, #540]	; (8001378 <Ayar_Pompa+0x350>)
 800115c:	f005 fff0 	bl	8007140 <HAL_GPIO_ReadPin>
 8001160:	4603      	mov	r3, r0
 8001162:	2b01      	cmp	r3, #1
 8001164:	d105      	bne.n	8001172 <Ayar_Pompa+0x14a>
						    	     	  {
						    	     		  degisken2=3;
 8001166:	4b81      	ldr	r3, [pc, #516]	; (800136c <Ayar_Pompa+0x344>)
 8001168:	2203      	movs	r2, #3
 800116a:	701a      	strb	r2, [r3, #0]
						    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800116c:	2001      	movs	r0, #1
 800116e:	f7ff fa2f 	bl	80005d0 <LCD_Send_Cmd>

						    	     	  }
						    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1  )
 8001172:	2140      	movs	r1, #64	; 0x40
 8001174:	4880      	ldr	r0, [pc, #512]	; (8001378 <Ayar_Pompa+0x350>)
 8001176:	f005 ffe3 	bl	8007140 <HAL_GPIO_ReadPin>
 800117a:	4603      	mov	r3, r0
 800117c:	2b01      	cmp	r3, #1
 800117e:	d105      	bne.n	800118c <Ayar_Pompa+0x164>
						    	 		    			    	     	  {
						    	 		    			    	     		  degisken2=5;
 8001180:	4b7a      	ldr	r3, [pc, #488]	; (800136c <Ayar_Pompa+0x344>)
 8001182:	2205      	movs	r2, #5
 8001184:	701a      	strb	r2, [r3, #0]
						    	 		    			    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001186:	2001      	movs	r0, #1
 8001188:	f7ff fa22 	bl	80005d0 <LCD_Send_Cmd>

						    	 		    			    	     	  }
						    	 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){
 800118c:	2110      	movs	r1, #16
 800118e:	487b      	ldr	r0, [pc, #492]	; (800137c <Ayar_Pompa+0x354>)
 8001190:	f005 ffd6 	bl	8007140 <HAL_GPIO_ReadPin>
 8001194:	4603      	mov	r3, r0
 8001196:	2b01      	cmp	r3, #1
 8001198:	d10e      	bne.n	80011b8 <Ayar_Pompa+0x190>
						    			    		 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800119a:	2001      	movs	r0, #1
 800119c:	f7ff fa18 	bl	80005d0 <LCD_Send_Cmd>
						    			    		    		  LCD_Send_String_On_Line1("     POMPA 3");
 80011a0:	487d      	ldr	r0, [pc, #500]	; (8001398 <Ayar_Pompa+0x370>)
 80011a2:	f7ff fae5 	bl	8000770 <LCD_Send_String_On_Line1>
						    			    		    		  HAL_Delay(1000);
 80011a6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80011aa:	f005 fb09 	bl	80067c0 <HAL_Delay>
						    			    		 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80011ae:	2001      	movs	r0, #1
 80011b0:	f7ff fa0e 	bl	80005d0 <LCD_Send_Cmd>
						    			    		pompa3_ayar();
 80011b4:	f000 fe14 	bl	8001de0 <pompa3_ayar>
						    			    	 }
						    	 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 80011b8:	2120      	movs	r1, #32
 80011ba:	4870      	ldr	r0, [pc, #448]	; (800137c <Ayar_Pompa+0x354>)
 80011bc:	f005 ffc0 	bl	8007140 <HAL_GPIO_ReadPin>
 80011c0:	4603      	mov	r3, r0
 80011c2:	2b01      	cmp	r3, #1
 80011c4:	d104      	bne.n	80011d0 <Ayar_Pompa+0x1a8>
						    	 		    	     	  	    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80011c6:	2001      	movs	r0, #1
 80011c8:	f7ff fa02 	bl	80005d0 <LCD_Send_Cmd>
						    	 		    	     	  	    	 																				 					Genel_Ekran_Ayar();
 80011cc:	f7ff faec 	bl	80007a8 <Genel_Ekran_Ayar>
						    	 		    	     	  	    	 																				 					                                          }
						}

		if(degisken2==5){
 80011d0:	4b66      	ldr	r3, [pc, #408]	; (800136c <Ayar_Pompa+0x344>)
 80011d2:	781b      	ldrb	r3, [r3, #0]
 80011d4:	2b05      	cmp	r3, #5
 80011d6:	d141      	bne.n	800125c <Ayar_Pompa+0x234>
								    	 LCD_Send_String_On_Line1(">>Pompa 2   ");
 80011d8:	4870      	ldr	r0, [pc, #448]	; (800139c <Ayar_Pompa+0x374>)
 80011da:	f7ff fac9 	bl	8000770 <LCD_Send_String_On_Line1>
								    	 LCD_Send_String_On_Line2(" Pompa 3  ");
 80011de:	4870      	ldr	r0, [pc, #448]	; (80013a0 <Ayar_Pompa+0x378>)
 80011e0:	f7ff fad4 	bl	800078c <LCD_Send_String_On_Line2>

								    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1  )
 80011e4:	2180      	movs	r1, #128	; 0x80
 80011e6:	4864      	ldr	r0, [pc, #400]	; (8001378 <Ayar_Pompa+0x350>)
 80011e8:	f005 ffaa 	bl	8007140 <HAL_GPIO_ReadPin>
 80011ec:	4603      	mov	r3, r0
 80011ee:	2b01      	cmp	r3, #1
 80011f0:	d105      	bne.n	80011fe <Ayar_Pompa+0x1d6>
								    	     	  {
								    	     		  degisken2=2;
 80011f2:	4b5e      	ldr	r3, [pc, #376]	; (800136c <Ayar_Pompa+0x344>)
 80011f4:	2202      	movs	r2, #2
 80011f6:	701a      	strb	r2, [r3, #0]
								    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80011f8:	2001      	movs	r0, #1
 80011fa:	f7ff f9e9 	bl	80005d0 <LCD_Send_Cmd>

								    	     	  }
								    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1  )
 80011fe:	2140      	movs	r1, #64	; 0x40
 8001200:	485d      	ldr	r0, [pc, #372]	; (8001378 <Ayar_Pompa+0x350>)
 8001202:	f005 ff9d 	bl	8007140 <HAL_GPIO_ReadPin>
 8001206:	4603      	mov	r3, r0
 8001208:	2b01      	cmp	r3, #1
 800120a:	d105      	bne.n	8001218 <Ayar_Pompa+0x1f0>
								    	 		    			    	     	  {
								    	 		    			    	     		  degisken2=0;
 800120c:	4b57      	ldr	r3, [pc, #348]	; (800136c <Ayar_Pompa+0x344>)
 800120e:	2200      	movs	r2, #0
 8001210:	701a      	strb	r2, [r3, #0]
								    	 		    			    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001212:	2001      	movs	r0, #1
 8001214:	f7ff f9dc 	bl	80005d0 <LCD_Send_Cmd>

								    	 		    			    	     	  }
								    	 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){
 8001218:	2110      	movs	r1, #16
 800121a:	4858      	ldr	r0, [pc, #352]	; (800137c <Ayar_Pompa+0x354>)
 800121c:	f005 ff90 	bl	8007140 <HAL_GPIO_ReadPin>
 8001220:	4603      	mov	r3, r0
 8001222:	2b01      	cmp	r3, #1
 8001224:	d10e      	bne.n	8001244 <Ayar_Pompa+0x21c>
								    			    		 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001226:	2001      	movs	r0, #1
 8001228:	f7ff f9d2 	bl	80005d0 <LCD_Send_Cmd>
								    			    		    		  LCD_Send_String_On_Line1("     POMPA 2");
 800122c:	4857      	ldr	r0, [pc, #348]	; (800138c <Ayar_Pompa+0x364>)
 800122e:	f7ff fa9f 	bl	8000770 <LCD_Send_String_On_Line1>
								    			    		    		  HAL_Delay(1000);
 8001232:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001236:	f005 fac3 	bl	80067c0 <HAL_Delay>
								    			    		 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800123a:	2001      	movs	r0, #1
 800123c:	f7ff f9c8 	bl	80005d0 <LCD_Send_Cmd>
								    			    		 pompa2_ayar();
 8001240:	f000 fb62 	bl	8001908 <pompa2_ayar>
								    			    	 }
								    	 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8001244:	2120      	movs	r1, #32
 8001246:	484d      	ldr	r0, [pc, #308]	; (800137c <Ayar_Pompa+0x354>)
 8001248:	f005 ff7a 	bl	8007140 <HAL_GPIO_ReadPin>
 800124c:	4603      	mov	r3, r0
 800124e:	2b01      	cmp	r3, #1
 8001250:	d104      	bne.n	800125c <Ayar_Pompa+0x234>
								    	 		    	     	  	    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001252:	2001      	movs	r0, #1
 8001254:	f7ff f9bc 	bl	80005d0 <LCD_Send_Cmd>
								    	 		    	     	  	    	 																				 					Genel_Ekran_Ayar();
 8001258:	f7ff faa6 	bl	80007a8 <Genel_Ekran_Ayar>
								    	 		    	     	  	    	 																				 					                                          }
								}
		if(degisken2==3){
 800125c:	4b43      	ldr	r3, [pc, #268]	; (800136c <Ayar_Pompa+0x344>)
 800125e:	781b      	ldrb	r3, [r3, #0]
 8001260:	2b03      	cmp	r3, #3
 8001262:	d141      	bne.n	80012e8 <Ayar_Pompa+0x2c0>
								    	 LCD_Send_String_On_Line1(" Pompa 3   ");
 8001264:	484f      	ldr	r0, [pc, #316]	; (80013a4 <Ayar_Pompa+0x37c>)
 8001266:	f7ff fa83 	bl	8000770 <LCD_Send_String_On_Line1>
								    	 LCD_Send_String_On_Line2(">>Pompa 4  ");
 800126a:	484f      	ldr	r0, [pc, #316]	; (80013a8 <Ayar_Pompa+0x380>)
 800126c:	f7ff fa8e 	bl	800078c <LCD_Send_String_On_Line2>

								    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1  )
 8001270:	2180      	movs	r1, #128	; 0x80
 8001272:	4841      	ldr	r0, [pc, #260]	; (8001378 <Ayar_Pompa+0x350>)
 8001274:	f005 ff64 	bl	8007140 <HAL_GPIO_ReadPin>
 8001278:	4603      	mov	r3, r0
 800127a:	2b01      	cmp	r3, #1
 800127c:	d105      	bne.n	800128a <Ayar_Pompa+0x262>
								    	     	  {
								    	     		  degisken2=0;
 800127e:	4b3b      	ldr	r3, [pc, #236]	; (800136c <Ayar_Pompa+0x344>)
 8001280:	2200      	movs	r2, #0
 8001282:	701a      	strb	r2, [r3, #0]
								    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001284:	2001      	movs	r0, #1
 8001286:	f7ff f9a3 	bl	80005d0 <LCD_Send_Cmd>

								    	     	  }
								    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1  )
 800128a:	2140      	movs	r1, #64	; 0x40
 800128c:	483a      	ldr	r0, [pc, #232]	; (8001378 <Ayar_Pompa+0x350>)
 800128e:	f005 ff57 	bl	8007140 <HAL_GPIO_ReadPin>
 8001292:	4603      	mov	r3, r0
 8001294:	2b01      	cmp	r3, #1
 8001296:	d105      	bne.n	80012a4 <Ayar_Pompa+0x27c>
								    	 		    			    	     	  {
								    	 		    			    	     		  degisken2=6;
 8001298:	4b34      	ldr	r3, [pc, #208]	; (800136c <Ayar_Pompa+0x344>)
 800129a:	2206      	movs	r2, #6
 800129c:	701a      	strb	r2, [r3, #0]
								    	 		    			    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800129e:	2001      	movs	r0, #1
 80012a0:	f7ff f996 	bl	80005d0 <LCD_Send_Cmd>

								    	 		    			    	     	  }
								    	 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){
 80012a4:	2110      	movs	r1, #16
 80012a6:	4835      	ldr	r0, [pc, #212]	; (800137c <Ayar_Pompa+0x354>)
 80012a8:	f005 ff4a 	bl	8007140 <HAL_GPIO_ReadPin>
 80012ac:	4603      	mov	r3, r0
 80012ae:	2b01      	cmp	r3, #1
 80012b0:	d10e      	bne.n	80012d0 <Ayar_Pompa+0x2a8>
								    			    		 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80012b2:	2001      	movs	r0, #1
 80012b4:	f7ff f98c 	bl	80005d0 <LCD_Send_Cmd>
								    			    		    		  LCD_Send_String_On_Line1("     POMPA 4");
 80012b8:	483c      	ldr	r0, [pc, #240]	; (80013ac <Ayar_Pompa+0x384>)
 80012ba:	f7ff fa59 	bl	8000770 <LCD_Send_String_On_Line1>
								    			    		    		  HAL_Delay(1000);
 80012be:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80012c2:	f005 fa7d 	bl	80067c0 <HAL_Delay>
								    			    		 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80012c6:	2001      	movs	r0, #1
 80012c8:	f7ff f982 	bl	80005d0 <LCD_Send_Cmd>
								    			    		 pompa4_ayar();
 80012cc:	f000 ff5e 	bl	800218c <pompa4_ayar>
								    			    	 }
								    	 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 80012d0:	2120      	movs	r1, #32
 80012d2:	482a      	ldr	r0, [pc, #168]	; (800137c <Ayar_Pompa+0x354>)
 80012d4:	f005 ff34 	bl	8007140 <HAL_GPIO_ReadPin>
 80012d8:	4603      	mov	r3, r0
 80012da:	2b01      	cmp	r3, #1
 80012dc:	d104      	bne.n	80012e8 <Ayar_Pompa+0x2c0>
								    	 		    	     	  	    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80012de:	2001      	movs	r0, #1
 80012e0:	f7ff f976 	bl	80005d0 <LCD_Send_Cmd>
								    	 		    	     	  	    	 																				 					Genel_Ekran_Ayar();
 80012e4:	f7ff fa60 	bl	80007a8 <Genel_Ekran_Ayar>
								    	 		    	     	  	    	 																				 					                                          }
								}
		if(degisken2==6){
 80012e8:	4b20      	ldr	r3, [pc, #128]	; (800136c <Ayar_Pompa+0x344>)
 80012ea:	781b      	ldrb	r3, [r3, #0]
 80012ec:	2b06      	cmp	r3, #6
 80012ee:	f47f ae9d 	bne.w	800102c <Ayar_Pompa+0x4>
										    	 LCD_Send_String_On_Line1(">>Pompa 3   ");
 80012f2:	482f      	ldr	r0, [pc, #188]	; (80013b0 <Ayar_Pompa+0x388>)
 80012f4:	f7ff fa3c 	bl	8000770 <LCD_Send_String_On_Line1>
										    	 LCD_Send_String_On_Line2(" Pompa 4  ");
 80012f8:	482e      	ldr	r0, [pc, #184]	; (80013b4 <Ayar_Pompa+0x38c>)
 80012fa:	f7ff fa47 	bl	800078c <LCD_Send_String_On_Line2>

										    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1  )
 80012fe:	2180      	movs	r1, #128	; 0x80
 8001300:	481d      	ldr	r0, [pc, #116]	; (8001378 <Ayar_Pompa+0x350>)
 8001302:	f005 ff1d 	bl	8007140 <HAL_GPIO_ReadPin>
 8001306:	4603      	mov	r3, r0
 8001308:	2b01      	cmp	r3, #1
 800130a:	d105      	bne.n	8001318 <Ayar_Pompa+0x2f0>
										    	     	  {
										    	     		  degisken2=3;
 800130c:	4b17      	ldr	r3, [pc, #92]	; (800136c <Ayar_Pompa+0x344>)
 800130e:	2203      	movs	r2, #3
 8001310:	701a      	strb	r2, [r3, #0]
										    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001312:	2001      	movs	r0, #1
 8001314:	f7ff f95c 	bl	80005d0 <LCD_Send_Cmd>

										    	     	  }
										    	 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1  )
 8001318:	2140      	movs	r1, #64	; 0x40
 800131a:	4817      	ldr	r0, [pc, #92]	; (8001378 <Ayar_Pompa+0x350>)
 800131c:	f005 ff10 	bl	8007140 <HAL_GPIO_ReadPin>
 8001320:	4603      	mov	r3, r0
 8001322:	2b01      	cmp	r3, #1
 8001324:	d105      	bne.n	8001332 <Ayar_Pompa+0x30a>
										    	 		    			    	     	  {
										    	 		    			    	     		  degisken2=5;
 8001326:	4b11      	ldr	r3, [pc, #68]	; (800136c <Ayar_Pompa+0x344>)
 8001328:	2205      	movs	r2, #5
 800132a:	701a      	strb	r2, [r3, #0]
										    	 		    			    	     		  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800132c:	2001      	movs	r0, #1
 800132e:	f7ff f94f 	bl	80005d0 <LCD_Send_Cmd>

										    	 		    			    	     	  }
										    	 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){
 8001332:	2110      	movs	r1, #16
 8001334:	4811      	ldr	r0, [pc, #68]	; (800137c <Ayar_Pompa+0x354>)
 8001336:	f005 ff03 	bl	8007140 <HAL_GPIO_ReadPin>
 800133a:	4603      	mov	r3, r0
 800133c:	2b01      	cmp	r3, #1
 800133e:	d10e      	bne.n	800135e <Ayar_Pompa+0x336>
										    			    		 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001340:	2001      	movs	r0, #1
 8001342:	f7ff f945 	bl	80005d0 <LCD_Send_Cmd>
										    			    		    		  LCD_Send_String_On_Line1("     POMPA 3");
 8001346:	4814      	ldr	r0, [pc, #80]	; (8001398 <Ayar_Pompa+0x370>)
 8001348:	f7ff fa12 	bl	8000770 <LCD_Send_String_On_Line1>
										    			    		    		  HAL_Delay(1000);
 800134c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001350:	f005 fa36 	bl	80067c0 <HAL_Delay>
										    			    		 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001354:	2001      	movs	r0, #1
 8001356:	f7ff f93b 	bl	80005d0 <LCD_Send_Cmd>
										    			    		 pompa3_ayar();
 800135a:	f000 fd41 	bl	8001de0 <pompa3_ayar>
										    			    	 }
										    	 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 800135e:	2120      	movs	r1, #32
 8001360:	4806      	ldr	r0, [pc, #24]	; (800137c <Ayar_Pompa+0x354>)
 8001362:	f005 feed 	bl	8007140 <HAL_GPIO_ReadPin>
 8001366:	4603      	mov	r3, r0
 8001368:	e026      	b.n	80013b8 <Ayar_Pompa+0x390>
 800136a:	bf00      	nop
 800136c:	20000039 	.word	0x20000039
 8001370:	08008ed0 	.word	0x08008ed0
 8001374:	08008ee0 	.word	0x08008ee0
 8001378:	40020000 	.word	0x40020000
 800137c:	40020800 	.word	0x40020800
 8001380:	08008eec 	.word	0x08008eec
 8001384:	08008efc 	.word	0x08008efc
 8001388:	08008f08 	.word	0x08008f08
 800138c:	08008f14 	.word	0x08008f14
 8001390:	08008f24 	.word	0x08008f24
 8001394:	08008f30 	.word	0x08008f30
 8001398:	08008f3c 	.word	0x08008f3c
 800139c:	08008f4c 	.word	0x08008f4c
 80013a0:	08008f5c 	.word	0x08008f5c
 80013a4:	08008f68 	.word	0x08008f68
 80013a8:	08008f74 	.word	0x08008f74
 80013ac:	08008f80 	.word	0x08008f80
 80013b0:	08008f90 	.word	0x08008f90
 80013b4:	08008fa0 	.word	0x08008fa0
 80013b8:	2b01      	cmp	r3, #1
 80013ba:	f47f ae37 	bne.w	800102c <Ayar_Pompa+0x4>
										    	 		    	     	  	    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80013be:	2001      	movs	r0, #1
 80013c0:	f7ff f906 	bl	80005d0 <LCD_Send_Cmd>
										    	 		    	     	  	    	 																				 					Genel_Ekran_Ayar();
 80013c4:	f7ff f9f0 	bl	80007a8 <Genel_Ekran_Ayar>
		if(degisken2==0){
 80013c8:	e630      	b.n	800102c <Ayar_Pompa+0x4>
 80013ca:	bf00      	nop

080013cc <pompa1_ayar>:


		}
}

void pompa1_ayar(){
 80013cc:	b580      	push	{r7, lr}
 80013ce:	b090      	sub	sp, #64	; 0x40
 80013d0:	af00      	add	r7, sp, #0
	char snum[50];
	 data=Flash_Read(0x08020000);
 80013d2:	486a      	ldr	r0, [pc, #424]	; (800157c <pompa1_ayar+0x1b0>)
 80013d4:	f004 f854 	bl	8005480 <Flash_Read>
 80013d8:	4603      	mov	r3, r0
 80013da:	4a69      	ldr	r2, [pc, #420]	; (8001580 <pompa1_ayar+0x1b4>)
 80013dc:	6013      	str	r3, [r2, #0]
		 		 	                         for(int i=0;i<=12;i++){
 80013de:	2300      	movs	r3, #0
 80013e0:	63fb      	str	r3, [r7, #60]	; 0x3c
 80013e2:	e00c      	b.n	80013fe <pompa1_ayar+0x32>

		 		 	    	 								 		  read[i]=data[i];
 80013e4:	4b66      	ldr	r3, [pc, #408]	; (8001580 <pompa1_ayar+0x1b4>)
 80013e6:	681a      	ldr	r2, [r3, #0]
 80013e8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80013ea:	009b      	lsls	r3, r3, #2
 80013ec:	4413      	add	r3, r2
 80013ee:	681a      	ldr	r2, [r3, #0]
 80013f0:	4964      	ldr	r1, [pc, #400]	; (8001584 <pompa1_ayar+0x1b8>)
 80013f2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80013f4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		 		 	                         for(int i=0;i<=12;i++){
 80013f8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80013fa:	3301      	adds	r3, #1
 80013fc:	63fb      	str	r3, [r7, #60]	; 0x3c
 80013fe:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8001400:	2b0c      	cmp	r3, #12
 8001402:	ddef      	ble.n	80013e4 <pompa1_ayar+0x18>
		 		 	    	 								 	  }


		 		 	    	 				 p1_ml=read[0];
 8001404:	4b5f      	ldr	r3, [pc, #380]	; (8001584 <pompa1_ayar+0x1b8>)
 8001406:	681b      	ldr	r3, [r3, #0]
 8001408:	4a5f      	ldr	r2, [pc, #380]	; (8001588 <pompa1_ayar+0x1bc>)
 800140a:	6013      	str	r3, [r2, #0]
		 		 	    	 				 p1_tkrr=read[1];
 800140c:	4b5d      	ldr	r3, [pc, #372]	; (8001584 <pompa1_ayar+0x1b8>)
 800140e:	685b      	ldr	r3, [r3, #4]
 8001410:	4a5e      	ldr	r2, [pc, #376]	; (800158c <pompa1_ayar+0x1c0>)
 8001412:	6013      	str	r3, [r2, #0]
		 		 	    	 				 p1_saat=read[2];
 8001414:	4b5b      	ldr	r3, [pc, #364]	; (8001584 <pompa1_ayar+0x1b8>)
 8001416:	689b      	ldr	r3, [r3, #8]
 8001418:	4a5d      	ldr	r2, [pc, #372]	; (8001590 <pompa1_ayar+0x1c4>)
 800141a:	6013      	str	r3, [r2, #0]
		 		 	    	 				 Flash_Write(0x08020000,read,12);
 800141c:	220c      	movs	r2, #12
 800141e:	4959      	ldr	r1, [pc, #356]	; (8001584 <pompa1_ayar+0x1b8>)
 8001420:	4856      	ldr	r0, [pc, #344]	; (800157c <pompa1_ayar+0x1b0>)
 8001422:	f003 ff49 	bl	80052b8 <Flash_Write>

	while(1){



		if(degisken3==0)
 8001426:	4b5b      	ldr	r3, [pc, #364]	; (8001594 <pompa1_ayar+0x1c8>)
 8001428:	781b      	ldrb	r3, [r3, #0]
 800142a:	2b00      	cmp	r3, #0
 800142c:	f040 8097 	bne.w	800155e <pompa1_ayar+0x192>
		{


			         LCD_Send_String_On_Line1(">Gun/Ml  1/");
 8001430:	4859      	ldr	r0, [pc, #356]	; (8001598 <pompa1_ayar+0x1cc>)
 8001432:	f7ff f99d 	bl	8000770 <LCD_Send_String_On_Line1>
					 LCD_Send_String_On_Line2("Gun/Tkrr 1/");
 8001436:	4859      	ldr	r0, [pc, #356]	; (800159c <pompa1_ayar+0x1d0>)
 8001438:	f7ff f9a8 	bl	800078c <LCD_Send_String_On_Line2>

					 itoa((p1_ml), snum, 10);
 800143c:	4b52      	ldr	r3, [pc, #328]	; (8001588 <pompa1_ayar+0x1bc>)
 800143e:	681b      	ldr	r3, [r3, #0]
 8001440:	4618      	mov	r0, r3
 8001442:	1d3b      	adds	r3, r7, #4
 8001444:	220a      	movs	r2, #10
 8001446:	4619      	mov	r1, r3
 8001448:	f007 fc2e 	bl	8008ca8 <itoa>
					 HD44780_SetCursor(11,0);
 800144c:	2100      	movs	r1, #0
 800144e:	200b      	movs	r0, #11
 8001450:	f004 f950 	bl	80056f4 <HD44780_SetCursor>
					 HD44780_PrintStr(snum);
 8001454:	1d3b      	adds	r3, r7, #4
 8001456:	4618      	mov	r0, r3
 8001458:	f004 f9bd 	bl	80057d6 <HD44780_PrintStr>



					itoa((p1_tkrr), snum, 10);
 800145c:	4b4b      	ldr	r3, [pc, #300]	; (800158c <pompa1_ayar+0x1c0>)
 800145e:	681b      	ldr	r3, [r3, #0]
 8001460:	4618      	mov	r0, r3
 8001462:	1d3b      	adds	r3, r7, #4
 8001464:	220a      	movs	r2, #10
 8001466:	4619      	mov	r1, r3
 8001468:	f007 fc1e 	bl	8008ca8 <itoa>
					HD44780_SetCursor(11,1);
 800146c:	2101      	movs	r1, #1
 800146e:	200b      	movs	r0, #11
 8001470:	f004 f940 	bl	80056f4 <HD44780_SetCursor>
					HD44780_PrintStr(snum);
 8001474:	1d3b      	adds	r3, r7, #4
 8001476:	4618      	mov	r0, r3
 8001478:	f004 f9ad 	bl	80057d6 <HD44780_PrintStr>


				    if((p1_ml==10 || p1_ml==100 || p1_ml==1000) &&  HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 ){LCD_Send_Cmd(LCD_CLEAR_DISPLAY);p1_ml=p1_ml-1;veri[0]=p1_ml;Flash_Write(0x08020000,veri,12);}
 800147c:	4b42      	ldr	r3, [pc, #264]	; (8001588 <pompa1_ayar+0x1bc>)
 800147e:	681b      	ldr	r3, [r3, #0]
 8001480:	2b0a      	cmp	r3, #10
 8001482:	d008      	beq.n	8001496 <pompa1_ayar+0xca>
 8001484:	4b40      	ldr	r3, [pc, #256]	; (8001588 <pompa1_ayar+0x1bc>)
 8001486:	681b      	ldr	r3, [r3, #0]
 8001488:	2b64      	cmp	r3, #100	; 0x64
 800148a:	d004      	beq.n	8001496 <pompa1_ayar+0xca>
 800148c:	4b3e      	ldr	r3, [pc, #248]	; (8001588 <pompa1_ayar+0x1bc>)
 800148e:	681b      	ldr	r3, [r3, #0]
 8001490:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8001494:	d117      	bne.n	80014c6 <pompa1_ayar+0xfa>
 8001496:	2120      	movs	r1, #32
 8001498:	4841      	ldr	r0, [pc, #260]	; (80015a0 <pompa1_ayar+0x1d4>)
 800149a:	f005 fe51 	bl	8007140 <HAL_GPIO_ReadPin>
 800149e:	4603      	mov	r3, r0
 80014a0:	2b01      	cmp	r3, #1
 80014a2:	d110      	bne.n	80014c6 <pompa1_ayar+0xfa>
 80014a4:	2001      	movs	r0, #1
 80014a6:	f7ff f893 	bl	80005d0 <LCD_Send_Cmd>
 80014aa:	4b37      	ldr	r3, [pc, #220]	; (8001588 <pompa1_ayar+0x1bc>)
 80014ac:	681b      	ldr	r3, [r3, #0]
 80014ae:	3b01      	subs	r3, #1
 80014b0:	4a35      	ldr	r2, [pc, #212]	; (8001588 <pompa1_ayar+0x1bc>)
 80014b2:	6013      	str	r3, [r2, #0]
 80014b4:	4b34      	ldr	r3, [pc, #208]	; (8001588 <pompa1_ayar+0x1bc>)
 80014b6:	681b      	ldr	r3, [r3, #0]
 80014b8:	4a3a      	ldr	r2, [pc, #232]	; (80015a4 <pompa1_ayar+0x1d8>)
 80014ba:	6013      	str	r3, [r2, #0]
 80014bc:	220c      	movs	r2, #12
 80014be:	4939      	ldr	r1, [pc, #228]	; (80015a4 <pompa1_ayar+0x1d8>)
 80014c0:	482e      	ldr	r0, [pc, #184]	; (800157c <pompa1_ayar+0x1b0>)
 80014c2:	f003 fef9 	bl	80052b8 <Flash_Write>

				    firsttime =HAL_GetTick();
 80014c6:	f005 f96f 	bl	80067a8 <HAL_GetTick>
 80014ca:	4603      	mov	r3, r0
 80014cc:	4a36      	ldr	r2, [pc, #216]	; (80015a8 <pompa1_ayar+0x1dc>)
 80014ce:	6013      	str	r3, [r2, #0]

				    if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==1){
 80014d0:	2110      	movs	r1, #16
 80014d2:	4833      	ldr	r0, [pc, #204]	; (80015a0 <pompa1_ayar+0x1d4>)
 80014d4:	f005 fe34 	bl	8007140 <HAL_GPIO_ReadPin>
 80014d8:	4603      	mov	r3, r0
 80014da:	2b01      	cmp	r3, #1
 80014dc:	d108      	bne.n	80014f0 <pompa1_ayar+0x124>

					 p1_ml=p1_ml+1;
 80014de:	4b2a      	ldr	r3, [pc, #168]	; (8001588 <pompa1_ayar+0x1bc>)
 80014e0:	681b      	ldr	r3, [r3, #0]
 80014e2:	3301      	adds	r3, #1
 80014e4:	4a28      	ldr	r2, [pc, #160]	; (8001588 <pompa1_ayar+0x1bc>)
 80014e6:	6013      	str	r3, [r2, #0]
					 veri[0]=p1_ml;
 80014e8:	4b27      	ldr	r3, [pc, #156]	; (8001588 <pompa1_ayar+0x1bc>)
 80014ea:	681b      	ldr	r3, [r3, #0]
 80014ec:	4a2d      	ldr	r2, [pc, #180]	; (80015a4 <pompa1_ayar+0x1d8>)
 80014ee:	6013      	str	r3, [r2, #0]


					 }


					 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 && p1_ml>0 ){p1_ml=p1_ml-1;veri[0]=p1_ml;}
 80014f0:	2120      	movs	r1, #32
 80014f2:	482b      	ldr	r0, [pc, #172]	; (80015a0 <pompa1_ayar+0x1d4>)
 80014f4:	f005 fe24 	bl	8007140 <HAL_GPIO_ReadPin>
 80014f8:	4603      	mov	r3, r0
 80014fa:	2b01      	cmp	r3, #1
 80014fc:	d10c      	bne.n	8001518 <pompa1_ayar+0x14c>
 80014fe:	4b22      	ldr	r3, [pc, #136]	; (8001588 <pompa1_ayar+0x1bc>)
 8001500:	681b      	ldr	r3, [r3, #0]
 8001502:	2b00      	cmp	r3, #0
 8001504:	d008      	beq.n	8001518 <pompa1_ayar+0x14c>
 8001506:	4b20      	ldr	r3, [pc, #128]	; (8001588 <pompa1_ayar+0x1bc>)
 8001508:	681b      	ldr	r3, [r3, #0]
 800150a:	3b01      	subs	r3, #1
 800150c:	4a1e      	ldr	r2, [pc, #120]	; (8001588 <pompa1_ayar+0x1bc>)
 800150e:	6013      	str	r3, [r2, #0]
 8001510:	4b1d      	ldr	r3, [pc, #116]	; (8001588 <pompa1_ayar+0x1bc>)
 8001512:	681b      	ldr	r3, [r3, #0]
 8001514:	4a23      	ldr	r2, [pc, #140]	; (80015a4 <pompa1_ayar+0x1d8>)
 8001516:	6013      	str	r3, [r2, #0]
//					 Flash_Write(0x08020000,veri,12);


					 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8001518:	2180      	movs	r1, #128	; 0x80
 800151a:	4821      	ldr	r0, [pc, #132]	; (80015a0 <pompa1_ayar+0x1d4>)
 800151c:	f005 fe10 	bl	8007140 <HAL_GPIO_ReadPin>
 8001520:	4603      	mov	r3, r0
 8001522:	2b01      	cmp	r3, #1
 8001524:	d10a      	bne.n	800153c <pompa1_ayar+0x170>



						 Flash_Write(0x08020000,veri,12);
 8001526:	220c      	movs	r2, #12
 8001528:	491e      	ldr	r1, [pc, #120]	; (80015a4 <pompa1_ayar+0x1d8>)
 800152a:	4814      	ldr	r0, [pc, #80]	; (800157c <pompa1_ayar+0x1b0>)
 800152c:	f003 fec4 	bl	80052b8 <Flash_Write>
						 degisken3=1;
 8001530:	4b18      	ldr	r3, [pc, #96]	; (8001594 <pompa1_ayar+0x1c8>)
 8001532:	2201      	movs	r2, #1
 8001534:	701a      	strb	r2, [r3, #0]
						 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001536:	2001      	movs	r0, #1
 8001538:	f7ff f84a 	bl	80005d0 <LCD_Send_Cmd>

					 }
                   	 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 800153c:	2120      	movs	r1, #32
 800153e:	481b      	ldr	r0, [pc, #108]	; (80015ac <pompa1_ayar+0x1e0>)
 8001540:	f005 fdfe 	bl	8007140 <HAL_GPIO_ReadPin>
 8001544:	4603      	mov	r3, r0
 8001546:	2b01      	cmp	r3, #1
 8001548:	d109      	bne.n	800155e <pompa1_ayar+0x192>



                   								              Flash_Write(0x08020000,veri,12);
 800154a:	220c      	movs	r2, #12
 800154c:	4915      	ldr	r1, [pc, #84]	; (80015a4 <pompa1_ayar+0x1d8>)
 800154e:	480b      	ldr	r0, [pc, #44]	; (800157c <pompa1_ayar+0x1b0>)
 8001550:	f003 feb2 	bl	80052b8 <Flash_Write>
					 		    	     	  	    	 		LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001554:	2001      	movs	r0, #1
 8001556:	f7ff f83b 	bl	80005d0 <LCD_Send_Cmd>
					 		    	     	  	    	 		Ayar_Pompa();
 800155a:	f7ff fd65 	bl	8001028 <Ayar_Pompa>
	                                                           }
		}
		if(degisken3==1)
 800155e:	4b0d      	ldr	r3, [pc, #52]	; (8001594 <pompa1_ayar+0x1c8>)
 8001560:	781b      	ldrb	r3, [r3, #0]
 8001562:	2b01      	cmp	r3, #1
 8001564:	f040 80d5 	bne.w	8001712 <pompa1_ayar+0x346>
				{
			          data=Flash_Read(0x08020000);
 8001568:	4804      	ldr	r0, [pc, #16]	; (800157c <pompa1_ayar+0x1b0>)
 800156a:	f003 ff89 	bl	8005480 <Flash_Read>
 800156e:	4603      	mov	r3, r0
 8001570:	4a03      	ldr	r2, [pc, #12]	; (8001580 <pompa1_ayar+0x1b4>)
 8001572:	6013      	str	r3, [r2, #0]
					 		 	                                             for(int i=0;i<=12;i++){
 8001574:	2300      	movs	r3, #0
 8001576:	63bb      	str	r3, [r7, #56]	; 0x38
 8001578:	e027      	b.n	80015ca <pompa1_ayar+0x1fe>
 800157a:	bf00      	nop
 800157c:	08020000 	.word	0x08020000
 8001580:	2000045c 	.word	0x2000045c
 8001584:	200003e4 	.word	0x200003e4
 8001588:	20000048 	.word	0x20000048
 800158c:	2000004c 	.word	0x2000004c
 8001590:	2000030c 	.word	0x2000030c
 8001594:	2000003a 	.word	0x2000003a
 8001598:	08008fac 	.word	0x08008fac
 800159c:	08008fb8 	.word	0x08008fb8
 80015a0:	40020000 	.word	0x40020000
 80015a4:	200004b0 	.word	0x200004b0
 80015a8:	200000cc 	.word	0x200000cc
 80015ac:	40020800 	.word	0x40020800

					 		 	    	 								 		  read[i]=data[i];
 80015b0:	4bb6      	ldr	r3, [pc, #728]	; (800188c <pompa1_ayar+0x4c0>)
 80015b2:	681a      	ldr	r2, [r3, #0]
 80015b4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80015b6:	009b      	lsls	r3, r3, #2
 80015b8:	4413      	add	r3, r2
 80015ba:	681a      	ldr	r2, [r3, #0]
 80015bc:	49b4      	ldr	r1, [pc, #720]	; (8001890 <pompa1_ayar+0x4c4>)
 80015be:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80015c0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
					 		 	                                             for(int i=0;i<=12;i++){
 80015c4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80015c6:	3301      	adds	r3, #1
 80015c8:	63bb      	str	r3, [r7, #56]	; 0x38
 80015ca:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80015cc:	2b0c      	cmp	r3, #12
 80015ce:	ddef      	ble.n	80015b0 <pompa1_ayar+0x1e4>
					 		 	    	 								 	  }

					         LCD_Send_String_On_Line1("Gun/Ml  1/");
 80015d0:	48b0      	ldr	r0, [pc, #704]	; (8001894 <pompa1_ayar+0x4c8>)
 80015d2:	f7ff f8cd 	bl	8000770 <LCD_Send_String_On_Line1>
							 LCD_Send_String_On_Line2(">Gun/Tkrr 1/");
 80015d6:	48b0      	ldr	r0, [pc, #704]	; (8001898 <pompa1_ayar+0x4cc>)
 80015d8:	f7ff f8d8 	bl	800078c <LCD_Send_String_On_Line2>

							 itoa((p1_ml), snum, 10);
 80015dc:	4baf      	ldr	r3, [pc, #700]	; (800189c <pompa1_ayar+0x4d0>)
 80015de:	681b      	ldr	r3, [r3, #0]
 80015e0:	4618      	mov	r0, r3
 80015e2:	1d3b      	adds	r3, r7, #4
 80015e4:	220a      	movs	r2, #10
 80015e6:	4619      	mov	r1, r3
 80015e8:	f007 fb5e 	bl	8008ca8 <itoa>
							 HD44780_SetCursor(10,0);
 80015ec:	2100      	movs	r1, #0
 80015ee:	200a      	movs	r0, #10
 80015f0:	f004 f880 	bl	80056f4 <HD44780_SetCursor>
							 HD44780_PrintStr(snum);
 80015f4:	1d3b      	adds	r3, r7, #4
 80015f6:	4618      	mov	r0, r3
 80015f8:	f004 f8ed 	bl	80057d6 <HD44780_PrintStr>



							itoa((p1_tkrr), snum, 10);
 80015fc:	4ba8      	ldr	r3, [pc, #672]	; (80018a0 <pompa1_ayar+0x4d4>)
 80015fe:	681b      	ldr	r3, [r3, #0]
 8001600:	4618      	mov	r0, r3
 8001602:	1d3b      	adds	r3, r7, #4
 8001604:	220a      	movs	r2, #10
 8001606:	4619      	mov	r1, r3
 8001608:	f007 fb4e 	bl	8008ca8 <itoa>
							HD44780_SetCursor(12,1);
 800160c:	2101      	movs	r1, #1
 800160e:	200c      	movs	r0, #12
 8001610:	f004 f870 	bl	80056f4 <HD44780_SetCursor>
							HD44780_PrintStr(snum);
 8001614:	1d3b      	adds	r3, r7, #4
 8001616:	4618      	mov	r0, r3
 8001618:	f004 f8dd 	bl	80057d6 <HD44780_PrintStr>

							if((p1_tkrr==10 || p1_tkrr==100 || p1_tkrr==1000) &&  HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 ){LCD_Send_Cmd(LCD_CLEAR_DISPLAY);p1_tkrr=p1_tkrr-1;veri[1]=p1_tkrr;Flash_Write(0x08020000,veri,12);}
 800161c:	4ba0      	ldr	r3, [pc, #640]	; (80018a0 <pompa1_ayar+0x4d4>)
 800161e:	681b      	ldr	r3, [r3, #0]
 8001620:	2b0a      	cmp	r3, #10
 8001622:	d008      	beq.n	8001636 <pompa1_ayar+0x26a>
 8001624:	4b9e      	ldr	r3, [pc, #632]	; (80018a0 <pompa1_ayar+0x4d4>)
 8001626:	681b      	ldr	r3, [r3, #0]
 8001628:	2b64      	cmp	r3, #100	; 0x64
 800162a:	d004      	beq.n	8001636 <pompa1_ayar+0x26a>
 800162c:	4b9c      	ldr	r3, [pc, #624]	; (80018a0 <pompa1_ayar+0x4d4>)
 800162e:	681b      	ldr	r3, [r3, #0]
 8001630:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8001634:	d117      	bne.n	8001666 <pompa1_ayar+0x29a>
 8001636:	2120      	movs	r1, #32
 8001638:	489a      	ldr	r0, [pc, #616]	; (80018a4 <pompa1_ayar+0x4d8>)
 800163a:	f005 fd81 	bl	8007140 <HAL_GPIO_ReadPin>
 800163e:	4603      	mov	r3, r0
 8001640:	2b01      	cmp	r3, #1
 8001642:	d110      	bne.n	8001666 <pompa1_ayar+0x29a>
 8001644:	2001      	movs	r0, #1
 8001646:	f7fe ffc3 	bl	80005d0 <LCD_Send_Cmd>
 800164a:	4b95      	ldr	r3, [pc, #596]	; (80018a0 <pompa1_ayar+0x4d4>)
 800164c:	681b      	ldr	r3, [r3, #0]
 800164e:	3b01      	subs	r3, #1
 8001650:	4a93      	ldr	r2, [pc, #588]	; (80018a0 <pompa1_ayar+0x4d4>)
 8001652:	6013      	str	r3, [r2, #0]
 8001654:	4b92      	ldr	r3, [pc, #584]	; (80018a0 <pompa1_ayar+0x4d4>)
 8001656:	681b      	ldr	r3, [r3, #0]
 8001658:	4a93      	ldr	r2, [pc, #588]	; (80018a8 <pompa1_ayar+0x4dc>)
 800165a:	6053      	str	r3, [r2, #4]
 800165c:	220c      	movs	r2, #12
 800165e:	4992      	ldr	r1, [pc, #584]	; (80018a8 <pompa1_ayar+0x4dc>)
 8001660:	4892      	ldr	r0, [pc, #584]	; (80018ac <pompa1_ayar+0x4e0>)
 8001662:	f003 fe29 	bl	80052b8 <Flash_Write>
							 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==1)
 8001666:	2110      	movs	r1, #16
 8001668:	488e      	ldr	r0, [pc, #568]	; (80018a4 <pompa1_ayar+0x4d8>)
 800166a:	f005 fd69 	bl	8007140 <HAL_GPIO_ReadPin>
 800166e:	4603      	mov	r3, r0
 8001670:	2b01      	cmp	r3, #1
 8001672:	d10d      	bne.n	8001690 <pompa1_ayar+0x2c4>
							 {
							 p1_tkrr=p1_tkrr+1;
 8001674:	4b8a      	ldr	r3, [pc, #552]	; (80018a0 <pompa1_ayar+0x4d4>)
 8001676:	681b      	ldr	r3, [r3, #0]
 8001678:	3301      	adds	r3, #1
 800167a:	4a89      	ldr	r2, [pc, #548]	; (80018a0 <pompa1_ayar+0x4d4>)
 800167c:	6013      	str	r3, [r2, #0]
							 veri[1]=p1_tkrr;
 800167e:	4b88      	ldr	r3, [pc, #544]	; (80018a0 <pompa1_ayar+0x4d4>)
 8001680:	681b      	ldr	r3, [r3, #0]
 8001682:	4a89      	ldr	r2, [pc, #548]	; (80018a8 <pompa1_ayar+0x4dc>)
 8001684:	6053      	str	r3, [r2, #4]
							 Flash_Write(0x08020000,veri,12);
 8001686:	220c      	movs	r2, #12
 8001688:	4987      	ldr	r1, [pc, #540]	; (80018a8 <pompa1_ayar+0x4dc>)
 800168a:	4888      	ldr	r0, [pc, #544]	; (80018ac <pompa1_ayar+0x4e0>)
 800168c:	f003 fe14 	bl	80052b8 <Flash_Write>
							 }

							 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 && p1_tkrr>0 ){p1_tkrr=p1_tkrr-1;veri[1]=p1_tkrr;
 8001690:	2120      	movs	r1, #32
 8001692:	4884      	ldr	r0, [pc, #528]	; (80018a4 <pompa1_ayar+0x4d8>)
 8001694:	f005 fd54 	bl	8007140 <HAL_GPIO_ReadPin>
 8001698:	4603      	mov	r3, r0
 800169a:	2b01      	cmp	r3, #1
 800169c:	d111      	bne.n	80016c2 <pompa1_ayar+0x2f6>
 800169e:	4b80      	ldr	r3, [pc, #512]	; (80018a0 <pompa1_ayar+0x4d4>)
 80016a0:	681b      	ldr	r3, [r3, #0]
 80016a2:	2b00      	cmp	r3, #0
 80016a4:	d00d      	beq.n	80016c2 <pompa1_ayar+0x2f6>
 80016a6:	4b7e      	ldr	r3, [pc, #504]	; (80018a0 <pompa1_ayar+0x4d4>)
 80016a8:	681b      	ldr	r3, [r3, #0]
 80016aa:	3b01      	subs	r3, #1
 80016ac:	4a7c      	ldr	r2, [pc, #496]	; (80018a0 <pompa1_ayar+0x4d4>)
 80016ae:	6013      	str	r3, [r2, #0]
 80016b0:	4b7b      	ldr	r3, [pc, #492]	; (80018a0 <pompa1_ayar+0x4d4>)
 80016b2:	681b      	ldr	r3, [r3, #0]
 80016b4:	4a7c      	ldr	r2, [pc, #496]	; (80018a8 <pompa1_ayar+0x4dc>)
 80016b6:	6053      	str	r3, [r2, #4]
							 Flash_Write(0x08020000,veri,12);
 80016b8:	220c      	movs	r2, #12
 80016ba:	497b      	ldr	r1, [pc, #492]	; (80018a8 <pompa1_ayar+0x4dc>)
 80016bc:	487b      	ldr	r0, [pc, #492]	; (80018ac <pompa1_ayar+0x4e0>)
 80016be:	f003 fdfb 	bl	80052b8 <Flash_Write>
							 }

							 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 80016c2:	2180      	movs	r1, #128	; 0x80
 80016c4:	4877      	ldr	r0, [pc, #476]	; (80018a4 <pompa1_ayar+0x4d8>)
 80016c6:	f005 fd3b 	bl	8007140 <HAL_GPIO_ReadPin>
 80016ca:	4603      	mov	r3, r0
 80016cc:	2b01      	cmp	r3, #1
 80016ce:	d105      	bne.n	80016dc <pompa1_ayar+0x310>

								 degisken3=2;
 80016d0:	4b77      	ldr	r3, [pc, #476]	; (80018b0 <pompa1_ayar+0x4e4>)
 80016d2:	2202      	movs	r2, #2
 80016d4:	701a      	strb	r2, [r3, #0]
								 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80016d6:	2001      	movs	r0, #1
 80016d8:	f7fe ff7a 	bl	80005d0 <LCD_Send_Cmd>
							 }
							 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 80016dc:	2140      	movs	r1, #64	; 0x40
 80016de:	4871      	ldr	r0, [pc, #452]	; (80018a4 <pompa1_ayar+0x4d8>)
 80016e0:	f005 fd2e 	bl	8007140 <HAL_GPIO_ReadPin>
 80016e4:	4603      	mov	r3, r0
 80016e6:	2b01      	cmp	r3, #1
 80016e8:	d105      	bne.n	80016f6 <pompa1_ayar+0x32a>

							 								 degisken3=0;
 80016ea:	4b71      	ldr	r3, [pc, #452]	; (80018b0 <pompa1_ayar+0x4e4>)
 80016ec:	2200      	movs	r2, #0
 80016ee:	701a      	strb	r2, [r3, #0]
							 								 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80016f0:	2001      	movs	r0, #1
 80016f2:	f7fe ff6d 	bl	80005d0 <LCD_Send_Cmd>
							 							 }


							 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 80016f6:	2120      	movs	r1, #32
 80016f8:	486e      	ldr	r0, [pc, #440]	; (80018b4 <pompa1_ayar+0x4e8>)
 80016fa:	f005 fd21 	bl	8007140 <HAL_GPIO_ReadPin>
 80016fe:	4603      	mov	r3, r0
 8001700:	2b01      	cmp	r3, #1
 8001702:	d106      	bne.n	8001712 <pompa1_ayar+0x346>


												 		    	     	  	    	 		LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001704:	2001      	movs	r0, #1
 8001706:	f7fe ff63 	bl	80005d0 <LCD_Send_Cmd>
												 		    	     	  		    	     	  	    	 		Ayar_Pompa(); 	  	    	 																				 					Ayar_Pompa();
 800170a:	f7ff fc8d 	bl	8001028 <Ayar_Pompa>
 800170e:	f7ff fc8b 	bl	8001028 <Ayar_Pompa>
										 					                                          }

				}
		if(degisken3==2)
 8001712:	4b67      	ldr	r3, [pc, #412]	; (80018b0 <pompa1_ayar+0x4e4>)
 8001714:	781b      	ldrb	r3, [r3, #0]
 8001716:	2b02      	cmp	r3, #2
 8001718:	d13b      	bne.n	8001792 <pompa1_ayar+0x3c6>
						{
							         LCD_Send_String_On_Line1("Gun/Tkrr 1/");
 800171a:	4867      	ldr	r0, [pc, #412]	; (80018b8 <pompa1_ayar+0x4ec>)
 800171c:	f7ff f828 	bl	8000770 <LCD_Send_String_On_Line1>
									 LCD_Send_String_On_Line2("> Bsl/Saat 17.31");
 8001720:	4866      	ldr	r0, [pc, #408]	; (80018bc <pompa1_ayar+0x4f0>)
 8001722:	f7ff f833 	bl	800078c <LCD_Send_String_On_Line2>

									 itoa((p1_tkrr), snum, 10);
 8001726:	4b5e      	ldr	r3, [pc, #376]	; (80018a0 <pompa1_ayar+0x4d4>)
 8001728:	681b      	ldr	r3, [r3, #0]
 800172a:	4618      	mov	r0, r3
 800172c:	1d3b      	adds	r3, r7, #4
 800172e:	220a      	movs	r2, #10
 8001730:	4619      	mov	r1, r3
 8001732:	f007 fab9 	bl	8008ca8 <itoa>
									 HD44780_SetCursor(11,0);
 8001736:	2100      	movs	r1, #0
 8001738:	200b      	movs	r0, #11
 800173a:	f003 ffdb 	bl	80056f4 <HD44780_SetCursor>
									 HD44780_PrintStr(snum);
 800173e:	1d3b      	adds	r3, r7, #4
 8001740:	4618      	mov	r0, r3
 8001742:	f004 f848 	bl	80057d6 <HD44780_PrintStr>
//									HD44780_PrintStr(snum);

//									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==1){p1_tkrr=p1_tkrr+1;veri[1]=p1_tkrr;Flash_Write(0x080E0000,veri,12);}
//									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1){p1_tkrr=p1_tkrr-1;veri[1]=p1_tkrr;Flash_Write(0x080E0000,veri,12);}

									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8001746:	2180      	movs	r1, #128	; 0x80
 8001748:	4856      	ldr	r0, [pc, #344]	; (80018a4 <pompa1_ayar+0x4d8>)
 800174a:	f005 fcf9 	bl	8007140 <HAL_GPIO_ReadPin>
 800174e:	4603      	mov	r3, r0
 8001750:	2b01      	cmp	r3, #1
 8001752:	d105      	bne.n	8001760 <pompa1_ayar+0x394>
										 degisken3=0;
 8001754:	4b56      	ldr	r3, [pc, #344]	; (80018b0 <pompa1_ayar+0x4e4>)
 8001756:	2200      	movs	r2, #0
 8001758:	701a      	strb	r2, [r3, #0]
										 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800175a:	2001      	movs	r0, #1
 800175c:	f7fe ff38 	bl	80005d0 <LCD_Send_Cmd>
									 }
									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8001760:	2140      	movs	r1, #64	; 0x40
 8001762:	4850      	ldr	r0, [pc, #320]	; (80018a4 <pompa1_ayar+0x4d8>)
 8001764:	f005 fcec 	bl	8007140 <HAL_GPIO_ReadPin>
 8001768:	4603      	mov	r3, r0
 800176a:	2b01      	cmp	r3, #1
 800176c:	d105      	bne.n	800177a <pompa1_ayar+0x3ae>
									 								 degisken3=3;
 800176e:	4b50      	ldr	r3, [pc, #320]	; (80018b0 <pompa1_ayar+0x4e4>)
 8001770:	2203      	movs	r2, #3
 8001772:	701a      	strb	r2, [r3, #0]
									 								 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001774:	2001      	movs	r0, #1
 8001776:	f7fe ff2b 	bl	80005d0 <LCD_Send_Cmd>
									 							 }
									 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 800177a:	2120      	movs	r1, #32
 800177c:	484d      	ldr	r0, [pc, #308]	; (80018b4 <pompa1_ayar+0x4e8>)
 800177e:	f005 fcdf 	bl	8007140 <HAL_GPIO_ReadPin>
 8001782:	4603      	mov	r3, r0
 8001784:	2b01      	cmp	r3, #1
 8001786:	d104      	bne.n	8001792 <pompa1_ayar+0x3c6>
														 		    	     	  	    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001788:	2001      	movs	r0, #1
 800178a:	f7fe ff21 	bl	80005d0 <LCD_Send_Cmd>
														 		    	     	  	    	 																				 					Ayar_Pompa();
 800178e:	f7ff fc4b 	bl	8001028 <Ayar_Pompa>



						}

		if(degisken3==3)
 8001792:	4b47      	ldr	r3, [pc, #284]	; (80018b0 <pompa1_ayar+0x4e4>)
 8001794:	781b      	ldrb	r3, [r3, #0]
 8001796:	2b03      	cmp	r3, #3
 8001798:	f47f ae45 	bne.w	8001426 <pompa1_ayar+0x5a>
						{
							         LCD_Send_String_On_Line1(">Gun/Tkrr 1/");
 800179c:	483e      	ldr	r0, [pc, #248]	; (8001898 <pompa1_ayar+0x4cc>)
 800179e:	f7fe ffe7 	bl	8000770 <LCD_Send_String_On_Line1>
									 LCD_Send_String_On_Line2("Bsl/Saat 17.31");
 80017a2:	4847      	ldr	r0, [pc, #284]	; (80018c0 <pompa1_ayar+0x4f4>)
 80017a4:	f7fe fff2 	bl	800078c <LCD_Send_String_On_Line2>

									 itoa((p1_tkrr), snum, 10);
 80017a8:	4b3d      	ldr	r3, [pc, #244]	; (80018a0 <pompa1_ayar+0x4d4>)
 80017aa:	681b      	ldr	r3, [r3, #0]
 80017ac:	4618      	mov	r0, r3
 80017ae:	1d3b      	adds	r3, r7, #4
 80017b0:	220a      	movs	r2, #10
 80017b2:	4619      	mov	r1, r3
 80017b4:	f007 fa78 	bl	8008ca8 <itoa>
									 HD44780_SetCursor(12,0);
 80017b8:	2100      	movs	r1, #0
 80017ba:	200c      	movs	r0, #12
 80017bc:	f003 ff9a 	bl	80056f4 <HD44780_SetCursor>
									 HD44780_PrintStr(snum);
 80017c0:	1d3b      	adds	r3, r7, #4
 80017c2:	4618      	mov	r0, r3
 80017c4:	f004 f807 	bl	80057d6 <HD44780_PrintStr>
//									itoa((p1_tkrr), snum, 10);  saat eklenecek
//									HD44780_SetCursor(14,1);
//									HD44780_PrintStr(snum);


										if((p1_tkrr==10 || p1_tkrr==100 || p1_tkrr==1000) &&  HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 ){LCD_Send_Cmd(LCD_CLEAR_DISPLAY);p1_tkrr=p1_tkrr-1;veri[1]=p1_tkrr;Flash_Write(0x08020000,veri,12);}
 80017c8:	4b35      	ldr	r3, [pc, #212]	; (80018a0 <pompa1_ayar+0x4d4>)
 80017ca:	681b      	ldr	r3, [r3, #0]
 80017cc:	2b0a      	cmp	r3, #10
 80017ce:	d008      	beq.n	80017e2 <pompa1_ayar+0x416>
 80017d0:	4b33      	ldr	r3, [pc, #204]	; (80018a0 <pompa1_ayar+0x4d4>)
 80017d2:	681b      	ldr	r3, [r3, #0]
 80017d4:	2b64      	cmp	r3, #100	; 0x64
 80017d6:	d004      	beq.n	80017e2 <pompa1_ayar+0x416>
 80017d8:	4b31      	ldr	r3, [pc, #196]	; (80018a0 <pompa1_ayar+0x4d4>)
 80017da:	681b      	ldr	r3, [r3, #0]
 80017dc:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80017e0:	d117      	bne.n	8001812 <pompa1_ayar+0x446>
 80017e2:	2120      	movs	r1, #32
 80017e4:	482f      	ldr	r0, [pc, #188]	; (80018a4 <pompa1_ayar+0x4d8>)
 80017e6:	f005 fcab 	bl	8007140 <HAL_GPIO_ReadPin>
 80017ea:	4603      	mov	r3, r0
 80017ec:	2b01      	cmp	r3, #1
 80017ee:	d110      	bne.n	8001812 <pompa1_ayar+0x446>
 80017f0:	2001      	movs	r0, #1
 80017f2:	f7fe feed 	bl	80005d0 <LCD_Send_Cmd>
 80017f6:	4b2a      	ldr	r3, [pc, #168]	; (80018a0 <pompa1_ayar+0x4d4>)
 80017f8:	681b      	ldr	r3, [r3, #0]
 80017fa:	3b01      	subs	r3, #1
 80017fc:	4a28      	ldr	r2, [pc, #160]	; (80018a0 <pompa1_ayar+0x4d4>)
 80017fe:	6013      	str	r3, [r2, #0]
 8001800:	4b27      	ldr	r3, [pc, #156]	; (80018a0 <pompa1_ayar+0x4d4>)
 8001802:	681b      	ldr	r3, [r3, #0]
 8001804:	4a28      	ldr	r2, [pc, #160]	; (80018a8 <pompa1_ayar+0x4dc>)
 8001806:	6053      	str	r3, [r2, #4]
 8001808:	220c      	movs	r2, #12
 800180a:	4927      	ldr	r1, [pc, #156]	; (80018a8 <pompa1_ayar+0x4dc>)
 800180c:	4827      	ldr	r0, [pc, #156]	; (80018ac <pompa1_ayar+0x4e0>)
 800180e:	f003 fd53 	bl	80052b8 <Flash_Write>
									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==1){p1_tkrr=p1_tkrr+1;veri[1]=p1_tkrr;Flash_Write(0x08020000,veri,12);}
 8001812:	2110      	movs	r1, #16
 8001814:	4823      	ldr	r0, [pc, #140]	; (80018a4 <pompa1_ayar+0x4d8>)
 8001816:	f005 fc93 	bl	8007140 <HAL_GPIO_ReadPin>
 800181a:	4603      	mov	r3, r0
 800181c:	2b01      	cmp	r3, #1
 800181e:	d10d      	bne.n	800183c <pompa1_ayar+0x470>
 8001820:	4b1f      	ldr	r3, [pc, #124]	; (80018a0 <pompa1_ayar+0x4d4>)
 8001822:	681b      	ldr	r3, [r3, #0]
 8001824:	3301      	adds	r3, #1
 8001826:	4a1e      	ldr	r2, [pc, #120]	; (80018a0 <pompa1_ayar+0x4d4>)
 8001828:	6013      	str	r3, [r2, #0]
 800182a:	4b1d      	ldr	r3, [pc, #116]	; (80018a0 <pompa1_ayar+0x4d4>)
 800182c:	681b      	ldr	r3, [r3, #0]
 800182e:	4a1e      	ldr	r2, [pc, #120]	; (80018a8 <pompa1_ayar+0x4dc>)
 8001830:	6053      	str	r3, [r2, #4]
 8001832:	220c      	movs	r2, #12
 8001834:	491c      	ldr	r1, [pc, #112]	; (80018a8 <pompa1_ayar+0x4dc>)
 8001836:	481d      	ldr	r0, [pc, #116]	; (80018ac <pompa1_ayar+0x4e0>)
 8001838:	f003 fd3e 	bl	80052b8 <Flash_Write>
									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 && p1_tkrr>0){p1_tkrr=p1_tkrr-1;veri[1]=p1_tkrr;Flash_Write(0x08020000,veri,12);}
 800183c:	2120      	movs	r1, #32
 800183e:	4819      	ldr	r0, [pc, #100]	; (80018a4 <pompa1_ayar+0x4d8>)
 8001840:	f005 fc7e 	bl	8007140 <HAL_GPIO_ReadPin>
 8001844:	4603      	mov	r3, r0
 8001846:	2b01      	cmp	r3, #1
 8001848:	d111      	bne.n	800186e <pompa1_ayar+0x4a2>
 800184a:	4b15      	ldr	r3, [pc, #84]	; (80018a0 <pompa1_ayar+0x4d4>)
 800184c:	681b      	ldr	r3, [r3, #0]
 800184e:	2b00      	cmp	r3, #0
 8001850:	d00d      	beq.n	800186e <pompa1_ayar+0x4a2>
 8001852:	4b13      	ldr	r3, [pc, #76]	; (80018a0 <pompa1_ayar+0x4d4>)
 8001854:	681b      	ldr	r3, [r3, #0]
 8001856:	3b01      	subs	r3, #1
 8001858:	4a11      	ldr	r2, [pc, #68]	; (80018a0 <pompa1_ayar+0x4d4>)
 800185a:	6013      	str	r3, [r2, #0]
 800185c:	4b10      	ldr	r3, [pc, #64]	; (80018a0 <pompa1_ayar+0x4d4>)
 800185e:	681b      	ldr	r3, [r3, #0]
 8001860:	4a11      	ldr	r2, [pc, #68]	; (80018a8 <pompa1_ayar+0x4dc>)
 8001862:	6053      	str	r3, [r2, #4]
 8001864:	220c      	movs	r2, #12
 8001866:	4910      	ldr	r1, [pc, #64]	; (80018a8 <pompa1_ayar+0x4dc>)
 8001868:	4810      	ldr	r0, [pc, #64]	; (80018ac <pompa1_ayar+0x4e0>)
 800186a:	f003 fd25 	bl	80052b8 <Flash_Write>

									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 800186e:	2180      	movs	r1, #128	; 0x80
 8001870:	480c      	ldr	r0, [pc, #48]	; (80018a4 <pompa1_ayar+0x4d8>)
 8001872:	f005 fc65 	bl	8007140 <HAL_GPIO_ReadPin>
 8001876:	4603      	mov	r3, r0
 8001878:	2b01      	cmp	r3, #1
 800187a:	d123      	bne.n	80018c4 <pompa1_ayar+0x4f8>
										 degisken3=2;
 800187c:	4b0c      	ldr	r3, [pc, #48]	; (80018b0 <pompa1_ayar+0x4e4>)
 800187e:	2202      	movs	r2, #2
 8001880:	701a      	strb	r2, [r3, #0]
										 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001882:	2001      	movs	r0, #1
 8001884:	f7fe fea4 	bl	80005d0 <LCD_Send_Cmd>
 8001888:	e01c      	b.n	80018c4 <pompa1_ayar+0x4f8>
 800188a:	bf00      	nop
 800188c:	2000045c 	.word	0x2000045c
 8001890:	200003e4 	.word	0x200003e4
 8001894:	08008fc4 	.word	0x08008fc4
 8001898:	08008fd0 	.word	0x08008fd0
 800189c:	20000048 	.word	0x20000048
 80018a0:	2000004c 	.word	0x2000004c
 80018a4:	40020000 	.word	0x40020000
 80018a8:	200004b0 	.word	0x200004b0
 80018ac:	08020000 	.word	0x08020000
 80018b0:	2000003a 	.word	0x2000003a
 80018b4:	40020800 	.word	0x40020800
 80018b8:	08008fb8 	.word	0x08008fb8
 80018bc:	08008fe0 	.word	0x08008fe0
 80018c0:	08008ff4 	.word	0x08008ff4
									 }

									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 80018c4:	2140      	movs	r1, #64	; 0x40
 80018c6:	480d      	ldr	r0, [pc, #52]	; (80018fc <pompa1_ayar+0x530>)
 80018c8:	f005 fc3a 	bl	8007140 <HAL_GPIO_ReadPin>
 80018cc:	4603      	mov	r3, r0
 80018ce:	2b01      	cmp	r3, #1
 80018d0:	d105      	bne.n	80018de <pompa1_ayar+0x512>
									 								 degisken3=0;
 80018d2:	4b0b      	ldr	r3, [pc, #44]	; (8001900 <pompa1_ayar+0x534>)
 80018d4:	2200      	movs	r2, #0
 80018d6:	701a      	strb	r2, [r3, #0]
									 								 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80018d8:	2001      	movs	r0, #1
 80018da:	f7fe fe79 	bl	80005d0 <LCD_Send_Cmd>
									 							 }

									 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 80018de:	2120      	movs	r1, #32
 80018e0:	4808      	ldr	r0, [pc, #32]	; (8001904 <pompa1_ayar+0x538>)
 80018e2:	f005 fc2d 	bl	8007140 <HAL_GPIO_ReadPin>
 80018e6:	4603      	mov	r3, r0
 80018e8:	2b01      	cmp	r3, #1
 80018ea:	f47f ad9c 	bne.w	8001426 <pompa1_ayar+0x5a>
														 		    	     	  	    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80018ee:	2001      	movs	r0, #1
 80018f0:	f7fe fe6e 	bl	80005d0 <LCD_Send_Cmd>
														 		    	     	  	    	 																				 					Ayar_Pompa();
 80018f4:	f7ff fb98 	bl	8001028 <Ayar_Pompa>
		if(degisken3==0)
 80018f8:	e595      	b.n	8001426 <pompa1_ayar+0x5a>
 80018fa:	bf00      	nop
 80018fc:	40020000 	.word	0x40020000
 8001900:	2000003a 	.word	0x2000003a
 8001904:	40020800 	.word	0x40020800

08001908 <pompa2_ayar>:



}

 void pompa2_ayar(){
 8001908:	b580      	push	{r7, lr}
 800190a:	b08e      	sub	sp, #56	; 0x38
 800190c:	af00      	add	r7, sp, #0
	 char snum2[50];
	 data2=Flash_Read2(0x08040000);
 800190e:	4804      	ldr	r0, [pc, #16]	; (8001920 <pompa2_ayar+0x18>)
 8001910:	f003 fdd6 	bl	80054c0 <Flash_Read2>
 8001914:	4603      	mov	r3, r0
 8001916:	4a03      	ldr	r2, [pc, #12]	; (8001924 <pompa2_ayar+0x1c>)
 8001918:	6013      	str	r3, [r2, #0]
	 		 	                         for(int i=0;i<=12;i++){
 800191a:	2300      	movs	r3, #0
 800191c:	637b      	str	r3, [r7, #52]	; 0x34
 800191e:	e010      	b.n	8001942 <pompa2_ayar+0x3a>
 8001920:	08040000 	.word	0x08040000
 8001924:	20000140 	.word	0x20000140

	 		 	    	 								 		  read2[i]=data2[i];
 8001928:	4bb2      	ldr	r3, [pc, #712]	; (8001bf4 <pompa2_ayar+0x2ec>)
 800192a:	681a      	ldr	r2, [r3, #0]
 800192c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800192e:	009b      	lsls	r3, r3, #2
 8001930:	4413      	add	r3, r2
 8001932:	681a      	ldr	r2, [r3, #0]
 8001934:	49b0      	ldr	r1, [pc, #704]	; (8001bf8 <pompa2_ayar+0x2f0>)
 8001936:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001938:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	 		 	                         for(int i=0;i<=12;i++){
 800193c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800193e:	3301      	adds	r3, #1
 8001940:	637b      	str	r3, [r7, #52]	; 0x34
 8001942:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001944:	2b0c      	cmp	r3, #12
 8001946:	ddef      	ble.n	8001928 <pompa2_ayar+0x20>
	 		 	    	 								 	  }


	 		 	    	 				p2_ml=read2[0];
 8001948:	4bab      	ldr	r3, [pc, #684]	; (8001bf8 <pompa2_ayar+0x2f0>)
 800194a:	681b      	ldr	r3, [r3, #0]
 800194c:	b29a      	uxth	r2, r3
 800194e:	4bab      	ldr	r3, [pc, #684]	; (8001bfc <pompa2_ayar+0x2f4>)
 8001950:	801a      	strh	r2, [r3, #0]
	 		 	    	 				 p2_tkrr=read2[1];
 8001952:	4ba9      	ldr	r3, [pc, #676]	; (8001bf8 <pompa2_ayar+0x2f0>)
 8001954:	685b      	ldr	r3, [r3, #4]
 8001956:	b29a      	uxth	r2, r3
 8001958:	4ba9      	ldr	r3, [pc, #676]	; (8001c00 <pompa2_ayar+0x2f8>)
 800195a:	801a      	strh	r2, [r3, #0]
	 		 	    	 				 Flash_Write2(0x08040000,read2,12);
 800195c:	220c      	movs	r2, #12
 800195e:	49a6      	ldr	r1, [pc, #664]	; (8001bf8 <pompa2_ayar+0x2f0>)
 8001960:	48a8      	ldr	r0, [pc, #672]	; (8001c04 <pompa2_ayar+0x2fc>)
 8001962:	f003 fcd6 	bl	8005312 <Flash_Write2>


	while(1){

		if(degisken4==0)
 8001966:	4ba8      	ldr	r3, [pc, #672]	; (8001c08 <pompa2_ayar+0x300>)
 8001968:	781b      	ldrb	r3, [r3, #0]
 800196a:	2b00      	cmp	r3, #0
 800196c:	f040 8093 	bne.w	8001a96 <pompa2_ayar+0x18e>
		{

			         LCD_Send_String_On_Line1(">Gun/Ml  1/");
 8001970:	48a6      	ldr	r0, [pc, #664]	; (8001c0c <pompa2_ayar+0x304>)
 8001972:	f7fe fefd 	bl	8000770 <LCD_Send_String_On_Line1>
					 LCD_Send_String_On_Line2("Gun/Tkrr 1/");
 8001976:	48a6      	ldr	r0, [pc, #664]	; (8001c10 <pompa2_ayar+0x308>)
 8001978:	f7fe ff08 	bl	800078c <LCD_Send_String_On_Line2>

					 itoa((p2_ml), snum2, 10);
 800197c:	4b9f      	ldr	r3, [pc, #636]	; (8001bfc <pompa2_ayar+0x2f4>)
 800197e:	881b      	ldrh	r3, [r3, #0]
 8001980:	4618      	mov	r0, r3
 8001982:	463b      	mov	r3, r7
 8001984:	220a      	movs	r2, #10
 8001986:	4619      	mov	r1, r3
 8001988:	f007 f98e 	bl	8008ca8 <itoa>
					 HD44780_SetCursor(11,0);
 800198c:	2100      	movs	r1, #0
 800198e:	200b      	movs	r0, #11
 8001990:	f003 feb0 	bl	80056f4 <HD44780_SetCursor>
					 HD44780_PrintStr(snum2);
 8001994:	463b      	mov	r3, r7
 8001996:	4618      	mov	r0, r3
 8001998:	f003 ff1d 	bl	80057d6 <HD44780_PrintStr>



					itoa((p2_tkrr), snum2, 10);
 800199c:	4b98      	ldr	r3, [pc, #608]	; (8001c00 <pompa2_ayar+0x2f8>)
 800199e:	881b      	ldrh	r3, [r3, #0]
 80019a0:	4618      	mov	r0, r3
 80019a2:	463b      	mov	r3, r7
 80019a4:	220a      	movs	r2, #10
 80019a6:	4619      	mov	r1, r3
 80019a8:	f007 f97e 	bl	8008ca8 <itoa>
					HD44780_SetCursor(11,1);
 80019ac:	2101      	movs	r1, #1
 80019ae:	200b      	movs	r0, #11
 80019b0:	f003 fea0 	bl	80056f4 <HD44780_SetCursor>
					HD44780_PrintStr(snum2);
 80019b4:	463b      	mov	r3, r7
 80019b6:	4618      	mov	r0, r3
 80019b8:	f003 ff0d 	bl	80057d6 <HD44780_PrintStr>

					 if((p2_ml==10 || p2_ml==100 || p2_ml==1000) &&  HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 ){LCD_Send_Cmd(LCD_CLEAR_DISPLAY);p2_ml=p2_ml-1;veri2[0]=p2_ml;Flash_Write2(0x08040000,veri2,12);}
 80019bc:	4b8f      	ldr	r3, [pc, #572]	; (8001bfc <pompa2_ayar+0x2f4>)
 80019be:	881b      	ldrh	r3, [r3, #0]
 80019c0:	2b0a      	cmp	r3, #10
 80019c2:	d008      	beq.n	80019d6 <pompa2_ayar+0xce>
 80019c4:	4b8d      	ldr	r3, [pc, #564]	; (8001bfc <pompa2_ayar+0x2f4>)
 80019c6:	881b      	ldrh	r3, [r3, #0]
 80019c8:	2b64      	cmp	r3, #100	; 0x64
 80019ca:	d004      	beq.n	80019d6 <pompa2_ayar+0xce>
 80019cc:	4b8b      	ldr	r3, [pc, #556]	; (8001bfc <pompa2_ayar+0x2f4>)
 80019ce:	881b      	ldrh	r3, [r3, #0]
 80019d0:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80019d4:	d119      	bne.n	8001a0a <pompa2_ayar+0x102>
 80019d6:	2120      	movs	r1, #32
 80019d8:	488e      	ldr	r0, [pc, #568]	; (8001c14 <pompa2_ayar+0x30c>)
 80019da:	f005 fbb1 	bl	8007140 <HAL_GPIO_ReadPin>
 80019de:	4603      	mov	r3, r0
 80019e0:	2b01      	cmp	r3, #1
 80019e2:	d112      	bne.n	8001a0a <pompa2_ayar+0x102>
 80019e4:	2001      	movs	r0, #1
 80019e6:	f7fe fdf3 	bl	80005d0 <LCD_Send_Cmd>
 80019ea:	4b84      	ldr	r3, [pc, #528]	; (8001bfc <pompa2_ayar+0x2f4>)
 80019ec:	881b      	ldrh	r3, [r3, #0]
 80019ee:	3b01      	subs	r3, #1
 80019f0:	b29a      	uxth	r2, r3
 80019f2:	4b82      	ldr	r3, [pc, #520]	; (8001bfc <pompa2_ayar+0x2f4>)
 80019f4:	801a      	strh	r2, [r3, #0]
 80019f6:	4b81      	ldr	r3, [pc, #516]	; (8001bfc <pompa2_ayar+0x2f4>)
 80019f8:	881b      	ldrh	r3, [r3, #0]
 80019fa:	461a      	mov	r2, r3
 80019fc:	4b86      	ldr	r3, [pc, #536]	; (8001c18 <pompa2_ayar+0x310>)
 80019fe:	601a      	str	r2, [r3, #0]
 8001a00:	220c      	movs	r2, #12
 8001a02:	4985      	ldr	r1, [pc, #532]	; (8001c18 <pompa2_ayar+0x310>)
 8001a04:	487f      	ldr	r0, [pc, #508]	; (8001c04 <pompa2_ayar+0x2fc>)
 8001a06:	f003 fc84 	bl	8005312 <Flash_Write2>
					 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==1)
 8001a0a:	2110      	movs	r1, #16
 8001a0c:	4881      	ldr	r0, [pc, #516]	; (8001c14 <pompa2_ayar+0x30c>)
 8001a0e:	f005 fb97 	bl	8007140 <HAL_GPIO_ReadPin>
 8001a12:	4603      	mov	r3, r0
 8001a14:	2b01      	cmp	r3, #1
 8001a16:	d10a      	bne.n	8001a2e <pompa2_ayar+0x126>
					 {
						 p2_ml=p2_ml+1;
 8001a18:	4b78      	ldr	r3, [pc, #480]	; (8001bfc <pompa2_ayar+0x2f4>)
 8001a1a:	881b      	ldrh	r3, [r3, #0]
 8001a1c:	3301      	adds	r3, #1
 8001a1e:	b29a      	uxth	r2, r3
 8001a20:	4b76      	ldr	r3, [pc, #472]	; (8001bfc <pompa2_ayar+0x2f4>)
 8001a22:	801a      	strh	r2, [r3, #0]
						 veri2[0]=p2_ml;
 8001a24:	4b75      	ldr	r3, [pc, #468]	; (8001bfc <pompa2_ayar+0x2f4>)
 8001a26:	881b      	ldrh	r3, [r3, #0]
 8001a28:	461a      	mov	r2, r3
 8001a2a:	4b7b      	ldr	r3, [pc, #492]	; (8001c18 <pompa2_ayar+0x310>)
 8001a2c:	601a      	str	r2, [r3, #0]
				     }
					 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 && p2_ml>0 )
 8001a2e:	2120      	movs	r1, #32
 8001a30:	4878      	ldr	r0, [pc, #480]	; (8001c14 <pompa2_ayar+0x30c>)
 8001a32:	f005 fb85 	bl	8007140 <HAL_GPIO_ReadPin>
 8001a36:	4603      	mov	r3, r0
 8001a38:	2b01      	cmp	r3, #1
 8001a3a:	d10e      	bne.n	8001a5a <pompa2_ayar+0x152>
 8001a3c:	4b6f      	ldr	r3, [pc, #444]	; (8001bfc <pompa2_ayar+0x2f4>)
 8001a3e:	881b      	ldrh	r3, [r3, #0]
 8001a40:	2b00      	cmp	r3, #0
 8001a42:	d00a      	beq.n	8001a5a <pompa2_ayar+0x152>
					 {p2_ml=p2_ml-1;
 8001a44:	4b6d      	ldr	r3, [pc, #436]	; (8001bfc <pompa2_ayar+0x2f4>)
 8001a46:	881b      	ldrh	r3, [r3, #0]
 8001a48:	3b01      	subs	r3, #1
 8001a4a:	b29a      	uxth	r2, r3
 8001a4c:	4b6b      	ldr	r3, [pc, #428]	; (8001bfc <pompa2_ayar+0x2f4>)
 8001a4e:	801a      	strh	r2, [r3, #0]
					 veri2[0]=p2_ml;
 8001a50:	4b6a      	ldr	r3, [pc, #424]	; (8001bfc <pompa2_ayar+0x2f4>)
 8001a52:	881b      	ldrh	r3, [r3, #0]
 8001a54:	461a      	mov	r2, r3
 8001a56:	4b70      	ldr	r3, [pc, #448]	; (8001c18 <pompa2_ayar+0x310>)
 8001a58:	601a      	str	r2, [r3, #0]
					 }

					 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8001a5a:	2180      	movs	r1, #128	; 0x80
 8001a5c:	486d      	ldr	r0, [pc, #436]	; (8001c14 <pompa2_ayar+0x30c>)
 8001a5e:	f005 fb6f 	bl	8007140 <HAL_GPIO_ReadPin>
 8001a62:	4603      	mov	r3, r0
 8001a64:	2b01      	cmp	r3, #1
 8001a66:	d105      	bne.n	8001a74 <pompa2_ayar+0x16c>
						 degisken4=1;
 8001a68:	4b67      	ldr	r3, [pc, #412]	; (8001c08 <pompa2_ayar+0x300>)
 8001a6a:	2201      	movs	r2, #1
 8001a6c:	701a      	strb	r2, [r3, #0]
						 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001a6e:	2001      	movs	r0, #1
 8001a70:	f7fe fdae 	bl	80005d0 <LCD_Send_Cmd>
					 }
					 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8001a74:	2120      	movs	r1, #32
 8001a76:	4869      	ldr	r0, [pc, #420]	; (8001c1c <pompa2_ayar+0x314>)
 8001a78:	f005 fb62 	bl	8007140 <HAL_GPIO_ReadPin>
 8001a7c:	4603      	mov	r3, r0
 8001a7e:	2b01      	cmp	r3, #1
 8001a80:	d109      	bne.n	8001a96 <pompa2_ayar+0x18e>
						                                                        Flash_Write2(0x08040000,veri2,12);
 8001a82:	220c      	movs	r2, #12
 8001a84:	4964      	ldr	r1, [pc, #400]	; (8001c18 <pompa2_ayar+0x310>)
 8001a86:	485f      	ldr	r0, [pc, #380]	; (8001c04 <pompa2_ayar+0x2fc>)
 8001a88:	f003 fc43 	bl	8005312 <Flash_Write2>
						 				 		    	     	  	    		LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001a8c:	2001      	movs	r0, #1
 8001a8e:	f7fe fd9f 	bl	80005d0 <LCD_Send_Cmd>
										 		    	     	  	    	 	Ayar_Pompa();
 8001a92:	f7ff fac9 	bl	8001028 <Ayar_Pompa>
							 }


		}

		if(degisken4==1)
 8001a96:	4b5c      	ldr	r3, [pc, #368]	; (8001c08 <pompa2_ayar+0x300>)
 8001a98:	781b      	ldrb	r3, [r3, #0]
 8001a9a:	2b01      	cmp	r3, #1
 8001a9c:	f040 809c 	bne.w	8001bd8 <pompa2_ayar+0x2d0>
				{
					         LCD_Send_String_On_Line1("Gun/Ml  1/");
 8001aa0:	485f      	ldr	r0, [pc, #380]	; (8001c20 <pompa2_ayar+0x318>)
 8001aa2:	f7fe fe65 	bl	8000770 <LCD_Send_String_On_Line1>
							 LCD_Send_String_On_Line2(">Gun/Tkrr 1/");
 8001aa6:	485f      	ldr	r0, [pc, #380]	; (8001c24 <pompa2_ayar+0x31c>)
 8001aa8:	f7fe fe70 	bl	800078c <LCD_Send_String_On_Line2>

							 itoa((p2_ml), snum2, 10);
 8001aac:	4b53      	ldr	r3, [pc, #332]	; (8001bfc <pompa2_ayar+0x2f4>)
 8001aae:	881b      	ldrh	r3, [r3, #0]
 8001ab0:	4618      	mov	r0, r3
 8001ab2:	463b      	mov	r3, r7
 8001ab4:	220a      	movs	r2, #10
 8001ab6:	4619      	mov	r1, r3
 8001ab8:	f007 f8f6 	bl	8008ca8 <itoa>
							 HD44780_SetCursor(10,0);
 8001abc:	2100      	movs	r1, #0
 8001abe:	200a      	movs	r0, #10
 8001ac0:	f003 fe18 	bl	80056f4 <HD44780_SetCursor>
							 HD44780_PrintStr(snum2);
 8001ac4:	463b      	mov	r3, r7
 8001ac6:	4618      	mov	r0, r3
 8001ac8:	f003 fe85 	bl	80057d6 <HD44780_PrintStr>



							itoa((p2_tkrr), snum2, 10);
 8001acc:	4b4c      	ldr	r3, [pc, #304]	; (8001c00 <pompa2_ayar+0x2f8>)
 8001ace:	881b      	ldrh	r3, [r3, #0]
 8001ad0:	4618      	mov	r0, r3
 8001ad2:	463b      	mov	r3, r7
 8001ad4:	220a      	movs	r2, #10
 8001ad6:	4619      	mov	r1, r3
 8001ad8:	f007 f8e6 	bl	8008ca8 <itoa>
							HD44780_SetCursor(12,1);
 8001adc:	2101      	movs	r1, #1
 8001ade:	200c      	movs	r0, #12
 8001ae0:	f003 fe08 	bl	80056f4 <HD44780_SetCursor>
							HD44780_PrintStr(snum2);
 8001ae4:	463b      	mov	r3, r7
 8001ae6:	4618      	mov	r0, r3
 8001ae8:	f003 fe75 	bl	80057d6 <HD44780_PrintStr>

							if((p2_ml==10 ) &&  HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 ){LCD_Send_Cmd(LCD_CLEAR_DISPLAY);p2_ml=p2_ml-1;veri2[0]=p2_ml;Flash_Write2(0x08040000,veri2,12);}
 8001aec:	4b43      	ldr	r3, [pc, #268]	; (8001bfc <pompa2_ayar+0x2f4>)
 8001aee:	881b      	ldrh	r3, [r3, #0]
 8001af0:	2b0a      	cmp	r3, #10
 8001af2:	d119      	bne.n	8001b28 <pompa2_ayar+0x220>
 8001af4:	2120      	movs	r1, #32
 8001af6:	4847      	ldr	r0, [pc, #284]	; (8001c14 <pompa2_ayar+0x30c>)
 8001af8:	f005 fb22 	bl	8007140 <HAL_GPIO_ReadPin>
 8001afc:	4603      	mov	r3, r0
 8001afe:	2b01      	cmp	r3, #1
 8001b00:	d112      	bne.n	8001b28 <pompa2_ayar+0x220>
 8001b02:	2001      	movs	r0, #1
 8001b04:	f7fe fd64 	bl	80005d0 <LCD_Send_Cmd>
 8001b08:	4b3c      	ldr	r3, [pc, #240]	; (8001bfc <pompa2_ayar+0x2f4>)
 8001b0a:	881b      	ldrh	r3, [r3, #0]
 8001b0c:	3b01      	subs	r3, #1
 8001b0e:	b29a      	uxth	r2, r3
 8001b10:	4b3a      	ldr	r3, [pc, #232]	; (8001bfc <pompa2_ayar+0x2f4>)
 8001b12:	801a      	strh	r2, [r3, #0]
 8001b14:	4b39      	ldr	r3, [pc, #228]	; (8001bfc <pompa2_ayar+0x2f4>)
 8001b16:	881b      	ldrh	r3, [r3, #0]
 8001b18:	461a      	mov	r2, r3
 8001b1a:	4b3f      	ldr	r3, [pc, #252]	; (8001c18 <pompa2_ayar+0x310>)
 8001b1c:	601a      	str	r2, [r3, #0]
 8001b1e:	220c      	movs	r2, #12
 8001b20:	493d      	ldr	r1, [pc, #244]	; (8001c18 <pompa2_ayar+0x310>)
 8001b22:	4838      	ldr	r0, [pc, #224]	; (8001c04 <pompa2_ayar+0x2fc>)
 8001b24:	f003 fbf5 	bl	8005312 <Flash_Write2>

							 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==1){p2_tkrr=p2_tkrr+1;veri2[1]=p2_tkrr;Flash_Write2(0x08040000,veri2,12);}
 8001b28:	2110      	movs	r1, #16
 8001b2a:	483a      	ldr	r0, [pc, #232]	; (8001c14 <pompa2_ayar+0x30c>)
 8001b2c:	f005 fb08 	bl	8007140 <HAL_GPIO_ReadPin>
 8001b30:	4603      	mov	r3, r0
 8001b32:	2b01      	cmp	r3, #1
 8001b34:	d10f      	bne.n	8001b56 <pompa2_ayar+0x24e>
 8001b36:	4b32      	ldr	r3, [pc, #200]	; (8001c00 <pompa2_ayar+0x2f8>)
 8001b38:	881b      	ldrh	r3, [r3, #0]
 8001b3a:	3301      	adds	r3, #1
 8001b3c:	b29a      	uxth	r2, r3
 8001b3e:	4b30      	ldr	r3, [pc, #192]	; (8001c00 <pompa2_ayar+0x2f8>)
 8001b40:	801a      	strh	r2, [r3, #0]
 8001b42:	4b2f      	ldr	r3, [pc, #188]	; (8001c00 <pompa2_ayar+0x2f8>)
 8001b44:	881b      	ldrh	r3, [r3, #0]
 8001b46:	461a      	mov	r2, r3
 8001b48:	4b33      	ldr	r3, [pc, #204]	; (8001c18 <pompa2_ayar+0x310>)
 8001b4a:	605a      	str	r2, [r3, #4]
 8001b4c:	220c      	movs	r2, #12
 8001b4e:	4932      	ldr	r1, [pc, #200]	; (8001c18 <pompa2_ayar+0x310>)
 8001b50:	482c      	ldr	r0, [pc, #176]	; (8001c04 <pompa2_ayar+0x2fc>)
 8001b52:	f003 fbde 	bl	8005312 <Flash_Write2>
							 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 && p2_tkrr>0 ){p2_tkrr=p2_tkrr-1;veri2[1]=p2_tkrr;Flash_Write2(0x08040000,veri2,12);}
 8001b56:	2120      	movs	r1, #32
 8001b58:	482e      	ldr	r0, [pc, #184]	; (8001c14 <pompa2_ayar+0x30c>)
 8001b5a:	f005 faf1 	bl	8007140 <HAL_GPIO_ReadPin>
 8001b5e:	4603      	mov	r3, r0
 8001b60:	2b01      	cmp	r3, #1
 8001b62:	d113      	bne.n	8001b8c <pompa2_ayar+0x284>
 8001b64:	4b26      	ldr	r3, [pc, #152]	; (8001c00 <pompa2_ayar+0x2f8>)
 8001b66:	881b      	ldrh	r3, [r3, #0]
 8001b68:	2b00      	cmp	r3, #0
 8001b6a:	d00f      	beq.n	8001b8c <pompa2_ayar+0x284>
 8001b6c:	4b24      	ldr	r3, [pc, #144]	; (8001c00 <pompa2_ayar+0x2f8>)
 8001b6e:	881b      	ldrh	r3, [r3, #0]
 8001b70:	3b01      	subs	r3, #1
 8001b72:	b29a      	uxth	r2, r3
 8001b74:	4b22      	ldr	r3, [pc, #136]	; (8001c00 <pompa2_ayar+0x2f8>)
 8001b76:	801a      	strh	r2, [r3, #0]
 8001b78:	4b21      	ldr	r3, [pc, #132]	; (8001c00 <pompa2_ayar+0x2f8>)
 8001b7a:	881b      	ldrh	r3, [r3, #0]
 8001b7c:	461a      	mov	r2, r3
 8001b7e:	4b26      	ldr	r3, [pc, #152]	; (8001c18 <pompa2_ayar+0x310>)
 8001b80:	605a      	str	r2, [r3, #4]
 8001b82:	220c      	movs	r2, #12
 8001b84:	4924      	ldr	r1, [pc, #144]	; (8001c18 <pompa2_ayar+0x310>)
 8001b86:	481f      	ldr	r0, [pc, #124]	; (8001c04 <pompa2_ayar+0x2fc>)
 8001b88:	f003 fbc3 	bl	8005312 <Flash_Write2>

							 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8001b8c:	2180      	movs	r1, #128	; 0x80
 8001b8e:	4821      	ldr	r0, [pc, #132]	; (8001c14 <pompa2_ayar+0x30c>)
 8001b90:	f005 fad6 	bl	8007140 <HAL_GPIO_ReadPin>
 8001b94:	4603      	mov	r3, r0
 8001b96:	2b01      	cmp	r3, #1
 8001b98:	d105      	bne.n	8001ba6 <pompa2_ayar+0x29e>
								 degisken4=2;
 8001b9a:	4b1b      	ldr	r3, [pc, #108]	; (8001c08 <pompa2_ayar+0x300>)
 8001b9c:	2202      	movs	r2, #2
 8001b9e:	701a      	strb	r2, [r3, #0]
								 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001ba0:	2001      	movs	r0, #1
 8001ba2:	f7fe fd15 	bl	80005d0 <LCD_Send_Cmd>
							 }
							 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8001ba6:	2140      	movs	r1, #64	; 0x40
 8001ba8:	481a      	ldr	r0, [pc, #104]	; (8001c14 <pompa2_ayar+0x30c>)
 8001baa:	f005 fac9 	bl	8007140 <HAL_GPIO_ReadPin>
 8001bae:	4603      	mov	r3, r0
 8001bb0:	2b01      	cmp	r3, #1
 8001bb2:	d105      	bne.n	8001bc0 <pompa2_ayar+0x2b8>
							 								 degisken4=0;
 8001bb4:	4b14      	ldr	r3, [pc, #80]	; (8001c08 <pompa2_ayar+0x300>)
 8001bb6:	2200      	movs	r2, #0
 8001bb8:	701a      	strb	r2, [r3, #0]
							 								 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001bba:	2001      	movs	r0, #1
 8001bbc:	f7fe fd08 	bl	80005d0 <LCD_Send_Cmd>
							 							 }

							 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8001bc0:	2120      	movs	r1, #32
 8001bc2:	4816      	ldr	r0, [pc, #88]	; (8001c1c <pompa2_ayar+0x314>)
 8001bc4:	f005 fabc 	bl	8007140 <HAL_GPIO_ReadPin>
 8001bc8:	4603      	mov	r3, r0
 8001bca:	2b01      	cmp	r3, #1
 8001bcc:	d104      	bne.n	8001bd8 <pompa2_ayar+0x2d0>
												 		    	     	  	    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001bce:	2001      	movs	r0, #1
 8001bd0:	f7fe fcfe 	bl	80005d0 <LCD_Send_Cmd>
												 		    	     	  	    	 																				 					Ayar_Pompa();
 8001bd4:	f7ff fa28 	bl	8001028 <Ayar_Pompa>
												 		    	     	  	    	 																				 					                                          }

				}
		if(degisken4==2)
 8001bd8:	4b0b      	ldr	r3, [pc, #44]	; (8001c08 <pompa2_ayar+0x300>)
 8001bda:	781b      	ldrb	r3, [r3, #0]
 8001bdc:	2b02      	cmp	r3, #2
 8001bde:	d159      	bne.n	8001c94 <pompa2_ayar+0x38c>
						{
							         LCD_Send_String_On_Line1("Gun/Tkrr 1/");
 8001be0:	480b      	ldr	r0, [pc, #44]	; (8001c10 <pompa2_ayar+0x308>)
 8001be2:	f7fe fdc5 	bl	8000770 <LCD_Send_String_On_Line1>
									 LCD_Send_String_On_Line2("> Bsl/Saat 17.31");
 8001be6:	4810      	ldr	r0, [pc, #64]	; (8001c28 <pompa2_ayar+0x320>)
 8001be8:	f7fe fdd0 	bl	800078c <LCD_Send_String_On_Line2>

									 itoa((p2_tkrr), snum2, 10);
 8001bec:	4b04      	ldr	r3, [pc, #16]	; (8001c00 <pompa2_ayar+0x2f8>)
 8001bee:	881b      	ldrh	r3, [r3, #0]
 8001bf0:	e01c      	b.n	8001c2c <pompa2_ayar+0x324>
 8001bf2:	bf00      	nop
 8001bf4:	20000140 	.word	0x20000140
 8001bf8:	200001ec 	.word	0x200001ec
 8001bfc:	20000050 	.word	0x20000050
 8001c00:	20000052 	.word	0x20000052
 8001c04:	08040000 	.word	0x08040000
 8001c08:	2000003b 	.word	0x2000003b
 8001c0c:	08008fac 	.word	0x08008fac
 8001c10:	08008fb8 	.word	0x08008fb8
 8001c14:	40020000 	.word	0x40020000
 8001c18:	200002dc 	.word	0x200002dc
 8001c1c:	40020800 	.word	0x40020800
 8001c20:	08008fc4 	.word	0x08008fc4
 8001c24:	08008fd0 	.word	0x08008fd0
 8001c28:	08008fe0 	.word	0x08008fe0
 8001c2c:	4618      	mov	r0, r3
 8001c2e:	463b      	mov	r3, r7
 8001c30:	220a      	movs	r2, #10
 8001c32:	4619      	mov	r1, r3
 8001c34:	f007 f838 	bl	8008ca8 <itoa>
									 HD44780_SetCursor(11,0);
 8001c38:	2100      	movs	r1, #0
 8001c3a:	200b      	movs	r0, #11
 8001c3c:	f003 fd5a 	bl	80056f4 <HD44780_SetCursor>
									 HD44780_PrintStr(snum2);
 8001c40:	463b      	mov	r3, r7
 8001c42:	4618      	mov	r0, r3
 8001c44:	f003 fdc7 	bl	80057d6 <HD44780_PrintStr>
//									HD44780_PrintStr(snum);

//									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==1){p1_tkrr=p1_tkrr+1;veri2[1]=p1_tkrr;Flash_Write(0x080E0000,veri2,12);}
//									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1){p1_tkrr=p1_tkrr-1;veri2[1]=p1_tkrr;Flash_Write(0x080E0000,veri2,12);}

									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8001c48:	2180      	movs	r1, #128	; 0x80
 8001c4a:	485c      	ldr	r0, [pc, #368]	; (8001dbc <pompa2_ayar+0x4b4>)
 8001c4c:	f005 fa78 	bl	8007140 <HAL_GPIO_ReadPin>
 8001c50:	4603      	mov	r3, r0
 8001c52:	2b01      	cmp	r3, #1
 8001c54:	d105      	bne.n	8001c62 <pompa2_ayar+0x35a>
										 degisken4=0;
 8001c56:	4b5a      	ldr	r3, [pc, #360]	; (8001dc0 <pompa2_ayar+0x4b8>)
 8001c58:	2200      	movs	r2, #0
 8001c5a:	701a      	strb	r2, [r3, #0]
										 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001c5c:	2001      	movs	r0, #1
 8001c5e:	f7fe fcb7 	bl	80005d0 <LCD_Send_Cmd>
									 }
									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8001c62:	2140      	movs	r1, #64	; 0x40
 8001c64:	4855      	ldr	r0, [pc, #340]	; (8001dbc <pompa2_ayar+0x4b4>)
 8001c66:	f005 fa6b 	bl	8007140 <HAL_GPIO_ReadPin>
 8001c6a:	4603      	mov	r3, r0
 8001c6c:	2b01      	cmp	r3, #1
 8001c6e:	d105      	bne.n	8001c7c <pompa2_ayar+0x374>
									 								 degisken4=3;
 8001c70:	4b53      	ldr	r3, [pc, #332]	; (8001dc0 <pompa2_ayar+0x4b8>)
 8001c72:	2203      	movs	r2, #3
 8001c74:	701a      	strb	r2, [r3, #0]
									 								 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001c76:	2001      	movs	r0, #1
 8001c78:	f7fe fcaa 	bl	80005d0 <LCD_Send_Cmd>
									 							 }
									 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8001c7c:	2120      	movs	r1, #32
 8001c7e:	4851      	ldr	r0, [pc, #324]	; (8001dc4 <pompa2_ayar+0x4bc>)
 8001c80:	f005 fa5e 	bl	8007140 <HAL_GPIO_ReadPin>
 8001c84:	4603      	mov	r3, r0
 8001c86:	2b01      	cmp	r3, #1
 8001c88:	d104      	bne.n	8001c94 <pompa2_ayar+0x38c>
														 		    	     	  	    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001c8a:	2001      	movs	r0, #1
 8001c8c:	f7fe fca0 	bl	80005d0 <LCD_Send_Cmd>
														 		    	     	  	    	 																				 					Ayar_Pompa();
 8001c90:	f7ff f9ca 	bl	8001028 <Ayar_Pompa>
														 		    	     	  	    	 																				 					                                          }


						}

		if(degisken4==3)
 8001c94:	4b4a      	ldr	r3, [pc, #296]	; (8001dc0 <pompa2_ayar+0x4b8>)
 8001c96:	781b      	ldrb	r3, [r3, #0]
 8001c98:	2b03      	cmp	r3, #3
 8001c9a:	f47f ae64 	bne.w	8001966 <pompa2_ayar+0x5e>
						{
							         LCD_Send_String_On_Line1(">Gun/Tkrr 1/");
 8001c9e:	484a      	ldr	r0, [pc, #296]	; (8001dc8 <pompa2_ayar+0x4c0>)
 8001ca0:	f7fe fd66 	bl	8000770 <LCD_Send_String_On_Line1>
									 LCD_Send_String_On_Line2("Bsl/Saat 17.31");
 8001ca4:	4849      	ldr	r0, [pc, #292]	; (8001dcc <pompa2_ayar+0x4c4>)
 8001ca6:	f7fe fd71 	bl	800078c <LCD_Send_String_On_Line2>

									 itoa((p2_tkrr), snum2, 10);
 8001caa:	4b49      	ldr	r3, [pc, #292]	; (8001dd0 <pompa2_ayar+0x4c8>)
 8001cac:	881b      	ldrh	r3, [r3, #0]
 8001cae:	4618      	mov	r0, r3
 8001cb0:	463b      	mov	r3, r7
 8001cb2:	220a      	movs	r2, #10
 8001cb4:	4619      	mov	r1, r3
 8001cb6:	f006 fff7 	bl	8008ca8 <itoa>
									 HD44780_SetCursor(12,0);
 8001cba:	2100      	movs	r1, #0
 8001cbc:	200c      	movs	r0, #12
 8001cbe:	f003 fd19 	bl	80056f4 <HD44780_SetCursor>
									 HD44780_PrintStr(snum2);
 8001cc2:	463b      	mov	r3, r7
 8001cc4:	4618      	mov	r0, r3
 8001cc6:	f003 fd86 	bl	80057d6 <HD44780_PrintStr>


//									itoa((p1_tkrr), snum, 10);  saat eklenecek
//									HD44780_SetCursor(14,1);
//									HD44780_PrintStr(snum);
									 if((p2_ml==10 ) &&  HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 ){LCD_Send_Cmd(LCD_CLEAR_DISPLAY);p2_ml=p2_ml-1;veri2[0]=p2_ml;Flash_Write2(0x08040000,veri2,12);}
 8001cca:	4b42      	ldr	r3, [pc, #264]	; (8001dd4 <pompa2_ayar+0x4cc>)
 8001ccc:	881b      	ldrh	r3, [r3, #0]
 8001cce:	2b0a      	cmp	r3, #10
 8001cd0:	d119      	bne.n	8001d06 <pompa2_ayar+0x3fe>
 8001cd2:	2120      	movs	r1, #32
 8001cd4:	4839      	ldr	r0, [pc, #228]	; (8001dbc <pompa2_ayar+0x4b4>)
 8001cd6:	f005 fa33 	bl	8007140 <HAL_GPIO_ReadPin>
 8001cda:	4603      	mov	r3, r0
 8001cdc:	2b01      	cmp	r3, #1
 8001cde:	d112      	bne.n	8001d06 <pompa2_ayar+0x3fe>
 8001ce0:	2001      	movs	r0, #1
 8001ce2:	f7fe fc75 	bl	80005d0 <LCD_Send_Cmd>
 8001ce6:	4b3b      	ldr	r3, [pc, #236]	; (8001dd4 <pompa2_ayar+0x4cc>)
 8001ce8:	881b      	ldrh	r3, [r3, #0]
 8001cea:	3b01      	subs	r3, #1
 8001cec:	b29a      	uxth	r2, r3
 8001cee:	4b39      	ldr	r3, [pc, #228]	; (8001dd4 <pompa2_ayar+0x4cc>)
 8001cf0:	801a      	strh	r2, [r3, #0]
 8001cf2:	4b38      	ldr	r3, [pc, #224]	; (8001dd4 <pompa2_ayar+0x4cc>)
 8001cf4:	881b      	ldrh	r3, [r3, #0]
 8001cf6:	461a      	mov	r2, r3
 8001cf8:	4b37      	ldr	r3, [pc, #220]	; (8001dd8 <pompa2_ayar+0x4d0>)
 8001cfa:	601a      	str	r2, [r3, #0]
 8001cfc:	220c      	movs	r2, #12
 8001cfe:	4936      	ldr	r1, [pc, #216]	; (8001dd8 <pompa2_ayar+0x4d0>)
 8001d00:	4836      	ldr	r0, [pc, #216]	; (8001ddc <pompa2_ayar+0x4d4>)
 8001d02:	f003 fb06 	bl	8005312 <Flash_Write2>

									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==1){p2_tkrr=p2_tkrr+1;veri2[1]=p2_tkrr;Flash_Write2(0x08040000,veri2,12);}
 8001d06:	2110      	movs	r1, #16
 8001d08:	482c      	ldr	r0, [pc, #176]	; (8001dbc <pompa2_ayar+0x4b4>)
 8001d0a:	f005 fa19 	bl	8007140 <HAL_GPIO_ReadPin>
 8001d0e:	4603      	mov	r3, r0
 8001d10:	2b01      	cmp	r3, #1
 8001d12:	d10f      	bne.n	8001d34 <pompa2_ayar+0x42c>
 8001d14:	4b2e      	ldr	r3, [pc, #184]	; (8001dd0 <pompa2_ayar+0x4c8>)
 8001d16:	881b      	ldrh	r3, [r3, #0]
 8001d18:	3301      	adds	r3, #1
 8001d1a:	b29a      	uxth	r2, r3
 8001d1c:	4b2c      	ldr	r3, [pc, #176]	; (8001dd0 <pompa2_ayar+0x4c8>)
 8001d1e:	801a      	strh	r2, [r3, #0]
 8001d20:	4b2b      	ldr	r3, [pc, #172]	; (8001dd0 <pompa2_ayar+0x4c8>)
 8001d22:	881b      	ldrh	r3, [r3, #0]
 8001d24:	461a      	mov	r2, r3
 8001d26:	4b2c      	ldr	r3, [pc, #176]	; (8001dd8 <pompa2_ayar+0x4d0>)
 8001d28:	605a      	str	r2, [r3, #4]
 8001d2a:	220c      	movs	r2, #12
 8001d2c:	492a      	ldr	r1, [pc, #168]	; (8001dd8 <pompa2_ayar+0x4d0>)
 8001d2e:	482b      	ldr	r0, [pc, #172]	; (8001ddc <pompa2_ayar+0x4d4>)
 8001d30:	f003 faef 	bl	8005312 <Flash_Write2>
									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 && p2_tkrr>0){p2_tkrr=p2_tkrr-1;veri2[1]=p2_tkrr;Flash_Write2(0x08040000,veri2,12);}
 8001d34:	2120      	movs	r1, #32
 8001d36:	4821      	ldr	r0, [pc, #132]	; (8001dbc <pompa2_ayar+0x4b4>)
 8001d38:	f005 fa02 	bl	8007140 <HAL_GPIO_ReadPin>
 8001d3c:	4603      	mov	r3, r0
 8001d3e:	2b01      	cmp	r3, #1
 8001d40:	d113      	bne.n	8001d6a <pompa2_ayar+0x462>
 8001d42:	4b23      	ldr	r3, [pc, #140]	; (8001dd0 <pompa2_ayar+0x4c8>)
 8001d44:	881b      	ldrh	r3, [r3, #0]
 8001d46:	2b00      	cmp	r3, #0
 8001d48:	d00f      	beq.n	8001d6a <pompa2_ayar+0x462>
 8001d4a:	4b21      	ldr	r3, [pc, #132]	; (8001dd0 <pompa2_ayar+0x4c8>)
 8001d4c:	881b      	ldrh	r3, [r3, #0]
 8001d4e:	3b01      	subs	r3, #1
 8001d50:	b29a      	uxth	r2, r3
 8001d52:	4b1f      	ldr	r3, [pc, #124]	; (8001dd0 <pompa2_ayar+0x4c8>)
 8001d54:	801a      	strh	r2, [r3, #0]
 8001d56:	4b1e      	ldr	r3, [pc, #120]	; (8001dd0 <pompa2_ayar+0x4c8>)
 8001d58:	881b      	ldrh	r3, [r3, #0]
 8001d5a:	461a      	mov	r2, r3
 8001d5c:	4b1e      	ldr	r3, [pc, #120]	; (8001dd8 <pompa2_ayar+0x4d0>)
 8001d5e:	605a      	str	r2, [r3, #4]
 8001d60:	220c      	movs	r2, #12
 8001d62:	491d      	ldr	r1, [pc, #116]	; (8001dd8 <pompa2_ayar+0x4d0>)
 8001d64:	481d      	ldr	r0, [pc, #116]	; (8001ddc <pompa2_ayar+0x4d4>)
 8001d66:	f003 fad4 	bl	8005312 <Flash_Write2>

									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8001d6a:	2180      	movs	r1, #128	; 0x80
 8001d6c:	4813      	ldr	r0, [pc, #76]	; (8001dbc <pompa2_ayar+0x4b4>)
 8001d6e:	f005 f9e7 	bl	8007140 <HAL_GPIO_ReadPin>
 8001d72:	4603      	mov	r3, r0
 8001d74:	2b01      	cmp	r3, #1
 8001d76:	d105      	bne.n	8001d84 <pompa2_ayar+0x47c>
										 degisken4=2;
 8001d78:	4b11      	ldr	r3, [pc, #68]	; (8001dc0 <pompa2_ayar+0x4b8>)
 8001d7a:	2202      	movs	r2, #2
 8001d7c:	701a      	strb	r2, [r3, #0]
										 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001d7e:	2001      	movs	r0, #1
 8001d80:	f7fe fc26 	bl	80005d0 <LCD_Send_Cmd>
									 }

									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8001d84:	2140      	movs	r1, #64	; 0x40
 8001d86:	480d      	ldr	r0, [pc, #52]	; (8001dbc <pompa2_ayar+0x4b4>)
 8001d88:	f005 f9da 	bl	8007140 <HAL_GPIO_ReadPin>
 8001d8c:	4603      	mov	r3, r0
 8001d8e:	2b01      	cmp	r3, #1
 8001d90:	d105      	bne.n	8001d9e <pompa2_ayar+0x496>
									 								 degisken4=0;
 8001d92:	4b0b      	ldr	r3, [pc, #44]	; (8001dc0 <pompa2_ayar+0x4b8>)
 8001d94:	2200      	movs	r2, #0
 8001d96:	701a      	strb	r2, [r3, #0]
									 								 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001d98:	2001      	movs	r0, #1
 8001d9a:	f7fe fc19 	bl	80005d0 <LCD_Send_Cmd>
									 							 }

									 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8001d9e:	2120      	movs	r1, #32
 8001da0:	4808      	ldr	r0, [pc, #32]	; (8001dc4 <pompa2_ayar+0x4bc>)
 8001da2:	f005 f9cd 	bl	8007140 <HAL_GPIO_ReadPin>
 8001da6:	4603      	mov	r3, r0
 8001da8:	2b01      	cmp	r3, #1
 8001daa:	f47f addc 	bne.w	8001966 <pompa2_ayar+0x5e>
														 		    	     	  	    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001dae:	2001      	movs	r0, #1
 8001db0:	f7fe fc0e 	bl	80005d0 <LCD_Send_Cmd>
														 		    	     	  	    	 																				 					Ayar_Pompa();
 8001db4:	f7ff f938 	bl	8001028 <Ayar_Pompa>
		if(degisken4==0)
 8001db8:	e5d5      	b.n	8001966 <pompa2_ayar+0x5e>
 8001dba:	bf00      	nop
 8001dbc:	40020000 	.word	0x40020000
 8001dc0:	2000003b 	.word	0x2000003b
 8001dc4:	40020800 	.word	0x40020800
 8001dc8:	08008fd0 	.word	0x08008fd0
 8001dcc:	08008ff4 	.word	0x08008ff4
 8001dd0:	20000052 	.word	0x20000052
 8001dd4:	20000050 	.word	0x20000050
 8001dd8:	200002dc 	.word	0x200002dc
 8001ddc:	08040000 	.word	0x08040000

08001de0 <pompa3_ayar>:



}

 void pompa3_ayar(){
 8001de0:	b580      	push	{r7, lr}
 8001de2:	b08e      	sub	sp, #56	; 0x38
 8001de4:	af00      	add	r7, sp, #0
	 char snum3[50];
		 data3=Flash_Read3(0x08060000);
 8001de6:	4804      	ldr	r0, [pc, #16]	; (8001df8 <pompa3_ayar+0x18>)
 8001de8:	f003 fb8a 	bl	8005500 <Flash_Read3>
 8001dec:	4603      	mov	r3, r0
 8001dee:	4a03      	ldr	r2, [pc, #12]	; (8001dfc <pompa3_ayar+0x1c>)
 8001df0:	6013      	str	r3, [r2, #0]
		 		 	                         for(int i=0;i<=12;i++){
 8001df2:	2300      	movs	r3, #0
 8001df4:	637b      	str	r3, [r7, #52]	; 0x34
 8001df6:	e010      	b.n	8001e1a <pompa3_ayar+0x3a>
 8001df8:	08060000 	.word	0x08060000
 8001dfc:	20000464 	.word	0x20000464

		 		 	    	 								 		  read3[i]=data3[i];
 8001e00:	4bb2      	ldr	r3, [pc, #712]	; (80020cc <pompa3_ayar+0x2ec>)
 8001e02:	681a      	ldr	r2, [r3, #0]
 8001e04:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001e06:	009b      	lsls	r3, r3, #2
 8001e08:	4413      	add	r3, r2
 8001e0a:	681a      	ldr	r2, [r3, #0]
 8001e0c:	49b0      	ldr	r1, [pc, #704]	; (80020d0 <pompa3_ayar+0x2f0>)
 8001e0e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001e10:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		 		 	                         for(int i=0;i<=12;i++){
 8001e14:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001e16:	3301      	adds	r3, #1
 8001e18:	637b      	str	r3, [r7, #52]	; 0x34
 8001e1a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001e1c:	2b0c      	cmp	r3, #12
 8001e1e:	ddef      	ble.n	8001e00 <pompa3_ayar+0x20>
		 		 	    	 								 	  }


		 		 	    	 				p3_ml=read3[0];
 8001e20:	4bab      	ldr	r3, [pc, #684]	; (80020d0 <pompa3_ayar+0x2f0>)
 8001e22:	681b      	ldr	r3, [r3, #0]
 8001e24:	b29a      	uxth	r2, r3
 8001e26:	4bab      	ldr	r3, [pc, #684]	; (80020d4 <pompa3_ayar+0x2f4>)
 8001e28:	801a      	strh	r2, [r3, #0]
		 		 	    	 				 p3_tkrr=read3[1];
 8001e2a:	4ba9      	ldr	r3, [pc, #676]	; (80020d0 <pompa3_ayar+0x2f0>)
 8001e2c:	685b      	ldr	r3, [r3, #4]
 8001e2e:	b29a      	uxth	r2, r3
 8001e30:	4ba9      	ldr	r3, [pc, #676]	; (80020d8 <pompa3_ayar+0x2f8>)
 8001e32:	801a      	strh	r2, [r3, #0]
		 		 	    	 				 Flash_Write3(0x08060000,read3,12);
 8001e34:	220c      	movs	r2, #12
 8001e36:	49a6      	ldr	r1, [pc, #664]	; (80020d0 <pompa3_ayar+0x2f0>)
 8001e38:	48a8      	ldr	r0, [pc, #672]	; (80020dc <pompa3_ayar+0x2fc>)
 8001e3a:	f003 fa97 	bl	800536c <Flash_Write3>

	while(1){
		if(degisken5==0)
 8001e3e:	4ba8      	ldr	r3, [pc, #672]	; (80020e0 <pompa3_ayar+0x300>)
 8001e40:	781b      	ldrb	r3, [r3, #0]
 8001e42:	2b00      	cmp	r3, #0
 8001e44:	f040 8098 	bne.w	8001f78 <pompa3_ayar+0x198>
				{

					         LCD_Send_String_On_Line1(">Gun/Ml  1/");
 8001e48:	48a6      	ldr	r0, [pc, #664]	; (80020e4 <pompa3_ayar+0x304>)
 8001e4a:	f7fe fc91 	bl	8000770 <LCD_Send_String_On_Line1>
							 LCD_Send_String_On_Line2("Gun/Tkrr 1/");
 8001e4e:	48a6      	ldr	r0, [pc, #664]	; (80020e8 <pompa3_ayar+0x308>)
 8001e50:	f7fe fc9c 	bl	800078c <LCD_Send_String_On_Line2>

							 itoa((p3_ml), snum3, 10);
 8001e54:	4b9f      	ldr	r3, [pc, #636]	; (80020d4 <pompa3_ayar+0x2f4>)
 8001e56:	881b      	ldrh	r3, [r3, #0]
 8001e58:	4618      	mov	r0, r3
 8001e5a:	463b      	mov	r3, r7
 8001e5c:	220a      	movs	r2, #10
 8001e5e:	4619      	mov	r1, r3
 8001e60:	f006 ff22 	bl	8008ca8 <itoa>
							 HD44780_SetCursor(11,0);
 8001e64:	2100      	movs	r1, #0
 8001e66:	200b      	movs	r0, #11
 8001e68:	f003 fc44 	bl	80056f4 <HD44780_SetCursor>
							 HD44780_PrintStr(snum3);
 8001e6c:	463b      	mov	r3, r7
 8001e6e:	4618      	mov	r0, r3
 8001e70:	f003 fcb1 	bl	80057d6 <HD44780_PrintStr>



							itoa((p3_tkrr), snum3, 10);
 8001e74:	4b98      	ldr	r3, [pc, #608]	; (80020d8 <pompa3_ayar+0x2f8>)
 8001e76:	881b      	ldrh	r3, [r3, #0]
 8001e78:	4618      	mov	r0, r3
 8001e7a:	463b      	mov	r3, r7
 8001e7c:	220a      	movs	r2, #10
 8001e7e:	4619      	mov	r1, r3
 8001e80:	f006 ff12 	bl	8008ca8 <itoa>
							HD44780_SetCursor(11,1);
 8001e84:	2101      	movs	r1, #1
 8001e86:	200b      	movs	r0, #11
 8001e88:	f003 fc34 	bl	80056f4 <HD44780_SetCursor>
							HD44780_PrintStr(snum3);
 8001e8c:	463b      	mov	r3, r7
 8001e8e:	4618      	mov	r0, r3
 8001e90:	f003 fca1 	bl	80057d6 <HD44780_PrintStr>

							if((p3_ml==10 || p3_ml==100 || p3_ml==1000) &&  HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 ){LCD_Send_Cmd(LCD_CLEAR_DISPLAY);p3_ml=p3_ml-1;veri3[0]=p3_ml;Flash_Write3(0x08060000,veri3,12);}
 8001e94:	4b8f      	ldr	r3, [pc, #572]	; (80020d4 <pompa3_ayar+0x2f4>)
 8001e96:	881b      	ldrh	r3, [r3, #0]
 8001e98:	2b0a      	cmp	r3, #10
 8001e9a:	d008      	beq.n	8001eae <pompa3_ayar+0xce>
 8001e9c:	4b8d      	ldr	r3, [pc, #564]	; (80020d4 <pompa3_ayar+0x2f4>)
 8001e9e:	881b      	ldrh	r3, [r3, #0]
 8001ea0:	2b64      	cmp	r3, #100	; 0x64
 8001ea2:	d004      	beq.n	8001eae <pompa3_ayar+0xce>
 8001ea4:	4b8b      	ldr	r3, [pc, #556]	; (80020d4 <pompa3_ayar+0x2f4>)
 8001ea6:	881b      	ldrh	r3, [r3, #0]
 8001ea8:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8001eac:	d119      	bne.n	8001ee2 <pompa3_ayar+0x102>
 8001eae:	2120      	movs	r1, #32
 8001eb0:	488e      	ldr	r0, [pc, #568]	; (80020ec <pompa3_ayar+0x30c>)
 8001eb2:	f005 f945 	bl	8007140 <HAL_GPIO_ReadPin>
 8001eb6:	4603      	mov	r3, r0
 8001eb8:	2b01      	cmp	r3, #1
 8001eba:	d112      	bne.n	8001ee2 <pompa3_ayar+0x102>
 8001ebc:	2001      	movs	r0, #1
 8001ebe:	f7fe fb87 	bl	80005d0 <LCD_Send_Cmd>
 8001ec2:	4b84      	ldr	r3, [pc, #528]	; (80020d4 <pompa3_ayar+0x2f4>)
 8001ec4:	881b      	ldrh	r3, [r3, #0]
 8001ec6:	3b01      	subs	r3, #1
 8001ec8:	b29a      	uxth	r2, r3
 8001eca:	4b82      	ldr	r3, [pc, #520]	; (80020d4 <pompa3_ayar+0x2f4>)
 8001ecc:	801a      	strh	r2, [r3, #0]
 8001ece:	4b81      	ldr	r3, [pc, #516]	; (80020d4 <pompa3_ayar+0x2f4>)
 8001ed0:	881b      	ldrh	r3, [r3, #0]
 8001ed2:	461a      	mov	r2, r3
 8001ed4:	4b86      	ldr	r3, [pc, #536]	; (80020f0 <pompa3_ayar+0x310>)
 8001ed6:	601a      	str	r2, [r3, #0]
 8001ed8:	220c      	movs	r2, #12
 8001eda:	4985      	ldr	r1, [pc, #532]	; (80020f0 <pompa3_ayar+0x310>)
 8001edc:	487f      	ldr	r0, [pc, #508]	; (80020dc <pompa3_ayar+0x2fc>)
 8001ede:	f003 fa45 	bl	800536c <Flash_Write3>

							 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==1)
 8001ee2:	2110      	movs	r1, #16
 8001ee4:	4881      	ldr	r0, [pc, #516]	; (80020ec <pompa3_ayar+0x30c>)
 8001ee6:	f005 f92b 	bl	8007140 <HAL_GPIO_ReadPin>
 8001eea:	4603      	mov	r3, r0
 8001eec:	2b01      	cmp	r3, #1
 8001eee:	d10a      	bne.n	8001f06 <pompa3_ayar+0x126>
							 {p3_ml=p3_ml+1;
 8001ef0:	4b78      	ldr	r3, [pc, #480]	; (80020d4 <pompa3_ayar+0x2f4>)
 8001ef2:	881b      	ldrh	r3, [r3, #0]
 8001ef4:	3301      	adds	r3, #1
 8001ef6:	b29a      	uxth	r2, r3
 8001ef8:	4b76      	ldr	r3, [pc, #472]	; (80020d4 <pompa3_ayar+0x2f4>)
 8001efa:	801a      	strh	r2, [r3, #0]
							 veri3[0]=p3_ml;
 8001efc:	4b75      	ldr	r3, [pc, #468]	; (80020d4 <pompa3_ayar+0x2f4>)
 8001efe:	881b      	ldrh	r3, [r3, #0]
 8001f00:	461a      	mov	r2, r3
 8001f02:	4b7b      	ldr	r3, [pc, #492]	; (80020f0 <pompa3_ayar+0x310>)
 8001f04:	601a      	str	r2, [r3, #0]
							 }
							 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 && p3_ml>0 )
 8001f06:	2120      	movs	r1, #32
 8001f08:	4878      	ldr	r0, [pc, #480]	; (80020ec <pompa3_ayar+0x30c>)
 8001f0a:	f005 f919 	bl	8007140 <HAL_GPIO_ReadPin>
 8001f0e:	4603      	mov	r3, r0
 8001f10:	2b01      	cmp	r3, #1
 8001f12:	d10e      	bne.n	8001f32 <pompa3_ayar+0x152>
 8001f14:	4b6f      	ldr	r3, [pc, #444]	; (80020d4 <pompa3_ayar+0x2f4>)
 8001f16:	881b      	ldrh	r3, [r3, #0]
 8001f18:	2b00      	cmp	r3, #0
 8001f1a:	d00a      	beq.n	8001f32 <pompa3_ayar+0x152>
							 {p3_ml=p3_ml-1;
 8001f1c:	4b6d      	ldr	r3, [pc, #436]	; (80020d4 <pompa3_ayar+0x2f4>)
 8001f1e:	881b      	ldrh	r3, [r3, #0]
 8001f20:	3b01      	subs	r3, #1
 8001f22:	b29a      	uxth	r2, r3
 8001f24:	4b6b      	ldr	r3, [pc, #428]	; (80020d4 <pompa3_ayar+0x2f4>)
 8001f26:	801a      	strh	r2, [r3, #0]
							 veri3[0]=p3_ml;
 8001f28:	4b6a      	ldr	r3, [pc, #424]	; (80020d4 <pompa3_ayar+0x2f4>)
 8001f2a:	881b      	ldrh	r3, [r3, #0]
 8001f2c:	461a      	mov	r2, r3
 8001f2e:	4b70      	ldr	r3, [pc, #448]	; (80020f0 <pompa3_ayar+0x310>)
 8001f30:	601a      	str	r2, [r3, #0]
							 }

							 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8001f32:	2180      	movs	r1, #128	; 0x80
 8001f34:	486d      	ldr	r0, [pc, #436]	; (80020ec <pompa3_ayar+0x30c>)
 8001f36:	f005 f903 	bl	8007140 <HAL_GPIO_ReadPin>
 8001f3a:	4603      	mov	r3, r0
 8001f3c:	2b01      	cmp	r3, #1
 8001f3e:	d10a      	bne.n	8001f56 <pompa3_ayar+0x176>
								 Flash_Write3(0x08060000,veri3,12);
 8001f40:	220c      	movs	r2, #12
 8001f42:	496b      	ldr	r1, [pc, #428]	; (80020f0 <pompa3_ayar+0x310>)
 8001f44:	4865      	ldr	r0, [pc, #404]	; (80020dc <pompa3_ayar+0x2fc>)
 8001f46:	f003 fa11 	bl	800536c <Flash_Write3>
								 degisken5=1;
 8001f4a:	4b65      	ldr	r3, [pc, #404]	; (80020e0 <pompa3_ayar+0x300>)
 8001f4c:	2201      	movs	r2, #1
 8001f4e:	701a      	strb	r2, [r3, #0]
								 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001f50:	2001      	movs	r0, #1
 8001f52:	f7fe fb3d 	bl	80005d0 <LCD_Send_Cmd>
							 }
							 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8001f56:	2120      	movs	r1, #32
 8001f58:	4866      	ldr	r0, [pc, #408]	; (80020f4 <pompa3_ayar+0x314>)
 8001f5a:	f005 f8f1 	bl	8007140 <HAL_GPIO_ReadPin>
 8001f5e:	4603      	mov	r3, r0
 8001f60:	2b01      	cmp	r3, #1
 8001f62:	d109      	bne.n	8001f78 <pompa3_ayar+0x198>
								                    Flash_Write3(0x08060000,veri3,12);
 8001f64:	220c      	movs	r2, #12
 8001f66:	4962      	ldr	r1, [pc, #392]	; (80020f0 <pompa3_ayar+0x310>)
 8001f68:	485c      	ldr	r0, [pc, #368]	; (80020dc <pompa3_ayar+0x2fc>)
 8001f6a:	f003 f9ff 	bl	800536c <Flash_Write3>
							 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8001f6e:	2001      	movs	r0, #1
 8001f70:	f7fe fb2e 	bl	80005d0 <LCD_Send_Cmd>
							 					    Ayar_Pompa();
 8001f74:	f7ff f858 	bl	8001028 <Ayar_Pompa>



				}

				if(degisken5==1)
 8001f78:	4b59      	ldr	r3, [pc, #356]	; (80020e0 <pompa3_ayar+0x300>)
 8001f7a:	781b      	ldrb	r3, [r3, #0]
 8001f7c:	2b01      	cmp	r3, #1
 8001f7e:	f040 809c 	bne.w	80020ba <pompa3_ayar+0x2da>
						{
							         LCD_Send_String_On_Line1("Gun/Ml  1/");
 8001f82:	485d      	ldr	r0, [pc, #372]	; (80020f8 <pompa3_ayar+0x318>)
 8001f84:	f7fe fbf4 	bl	8000770 <LCD_Send_String_On_Line1>
									 LCD_Send_String_On_Line2(">Gun/Tkrr 1/");
 8001f88:	485c      	ldr	r0, [pc, #368]	; (80020fc <pompa3_ayar+0x31c>)
 8001f8a:	f7fe fbff 	bl	800078c <LCD_Send_String_On_Line2>

									 itoa((p3_ml), snum3, 10);
 8001f8e:	4b51      	ldr	r3, [pc, #324]	; (80020d4 <pompa3_ayar+0x2f4>)
 8001f90:	881b      	ldrh	r3, [r3, #0]
 8001f92:	4618      	mov	r0, r3
 8001f94:	463b      	mov	r3, r7
 8001f96:	220a      	movs	r2, #10
 8001f98:	4619      	mov	r1, r3
 8001f9a:	f006 fe85 	bl	8008ca8 <itoa>
									 HD44780_SetCursor(10,0);
 8001f9e:	2100      	movs	r1, #0
 8001fa0:	200a      	movs	r0, #10
 8001fa2:	f003 fba7 	bl	80056f4 <HD44780_SetCursor>
									 HD44780_PrintStr(snum3);
 8001fa6:	463b      	mov	r3, r7
 8001fa8:	4618      	mov	r0, r3
 8001faa:	f003 fc14 	bl	80057d6 <HD44780_PrintStr>



									itoa((p3_tkrr), snum3, 10);
 8001fae:	4b4a      	ldr	r3, [pc, #296]	; (80020d8 <pompa3_ayar+0x2f8>)
 8001fb0:	881b      	ldrh	r3, [r3, #0]
 8001fb2:	4618      	mov	r0, r3
 8001fb4:	463b      	mov	r3, r7
 8001fb6:	220a      	movs	r2, #10
 8001fb8:	4619      	mov	r1, r3
 8001fba:	f006 fe75 	bl	8008ca8 <itoa>
									HD44780_SetCursor(12,1);
 8001fbe:	2101      	movs	r1, #1
 8001fc0:	200c      	movs	r0, #12
 8001fc2:	f003 fb97 	bl	80056f4 <HD44780_SetCursor>
									HD44780_PrintStr(snum3);
 8001fc6:	463b      	mov	r3, r7
 8001fc8:	4618      	mov	r0, r3
 8001fca:	f003 fc04 	bl	80057d6 <HD44780_PrintStr>
									if((p3_ml==10 ) &&  HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 ){LCD_Send_Cmd(LCD_CLEAR_DISPLAY);p3_ml=p3_ml-1;veri3[1]=p3_ml;Flash_Write3(0x08060000,veri3,12);}
 8001fce:	4b41      	ldr	r3, [pc, #260]	; (80020d4 <pompa3_ayar+0x2f4>)
 8001fd0:	881b      	ldrh	r3, [r3, #0]
 8001fd2:	2b0a      	cmp	r3, #10
 8001fd4:	d119      	bne.n	800200a <pompa3_ayar+0x22a>
 8001fd6:	2120      	movs	r1, #32
 8001fd8:	4844      	ldr	r0, [pc, #272]	; (80020ec <pompa3_ayar+0x30c>)
 8001fda:	f005 f8b1 	bl	8007140 <HAL_GPIO_ReadPin>
 8001fde:	4603      	mov	r3, r0
 8001fe0:	2b01      	cmp	r3, #1
 8001fe2:	d112      	bne.n	800200a <pompa3_ayar+0x22a>
 8001fe4:	2001      	movs	r0, #1
 8001fe6:	f7fe faf3 	bl	80005d0 <LCD_Send_Cmd>
 8001fea:	4b3a      	ldr	r3, [pc, #232]	; (80020d4 <pompa3_ayar+0x2f4>)
 8001fec:	881b      	ldrh	r3, [r3, #0]
 8001fee:	3b01      	subs	r3, #1
 8001ff0:	b29a      	uxth	r2, r3
 8001ff2:	4b38      	ldr	r3, [pc, #224]	; (80020d4 <pompa3_ayar+0x2f4>)
 8001ff4:	801a      	strh	r2, [r3, #0]
 8001ff6:	4b37      	ldr	r3, [pc, #220]	; (80020d4 <pompa3_ayar+0x2f4>)
 8001ff8:	881b      	ldrh	r3, [r3, #0]
 8001ffa:	461a      	mov	r2, r3
 8001ffc:	4b3c      	ldr	r3, [pc, #240]	; (80020f0 <pompa3_ayar+0x310>)
 8001ffe:	605a      	str	r2, [r3, #4]
 8002000:	220c      	movs	r2, #12
 8002002:	493b      	ldr	r1, [pc, #236]	; (80020f0 <pompa3_ayar+0x310>)
 8002004:	4835      	ldr	r0, [pc, #212]	; (80020dc <pompa3_ayar+0x2fc>)
 8002006:	f003 f9b1 	bl	800536c <Flash_Write3>


									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==1){p3_tkrr=p3_tkrr+1;veri3[1]=p3_tkrr;Flash_Write3(0x08060000,veri3,12);}
 800200a:	2110      	movs	r1, #16
 800200c:	4837      	ldr	r0, [pc, #220]	; (80020ec <pompa3_ayar+0x30c>)
 800200e:	f005 f897 	bl	8007140 <HAL_GPIO_ReadPin>
 8002012:	4603      	mov	r3, r0
 8002014:	2b01      	cmp	r3, #1
 8002016:	d10f      	bne.n	8002038 <pompa3_ayar+0x258>
 8002018:	4b2f      	ldr	r3, [pc, #188]	; (80020d8 <pompa3_ayar+0x2f8>)
 800201a:	881b      	ldrh	r3, [r3, #0]
 800201c:	3301      	adds	r3, #1
 800201e:	b29a      	uxth	r2, r3
 8002020:	4b2d      	ldr	r3, [pc, #180]	; (80020d8 <pompa3_ayar+0x2f8>)
 8002022:	801a      	strh	r2, [r3, #0]
 8002024:	4b2c      	ldr	r3, [pc, #176]	; (80020d8 <pompa3_ayar+0x2f8>)
 8002026:	881b      	ldrh	r3, [r3, #0]
 8002028:	461a      	mov	r2, r3
 800202a:	4b31      	ldr	r3, [pc, #196]	; (80020f0 <pompa3_ayar+0x310>)
 800202c:	605a      	str	r2, [r3, #4]
 800202e:	220c      	movs	r2, #12
 8002030:	492f      	ldr	r1, [pc, #188]	; (80020f0 <pompa3_ayar+0x310>)
 8002032:	482a      	ldr	r0, [pc, #168]	; (80020dc <pompa3_ayar+0x2fc>)
 8002034:	f003 f99a 	bl	800536c <Flash_Write3>
									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 && p3_tkrr>0 ){p3_tkrr=p3_tkrr-1;veri3[1]=p3_tkrr;Flash_Write3(0x08060000,veri3,12);}
 8002038:	2120      	movs	r1, #32
 800203a:	482c      	ldr	r0, [pc, #176]	; (80020ec <pompa3_ayar+0x30c>)
 800203c:	f005 f880 	bl	8007140 <HAL_GPIO_ReadPin>
 8002040:	4603      	mov	r3, r0
 8002042:	2b01      	cmp	r3, #1
 8002044:	d113      	bne.n	800206e <pompa3_ayar+0x28e>
 8002046:	4b24      	ldr	r3, [pc, #144]	; (80020d8 <pompa3_ayar+0x2f8>)
 8002048:	881b      	ldrh	r3, [r3, #0]
 800204a:	2b00      	cmp	r3, #0
 800204c:	d00f      	beq.n	800206e <pompa3_ayar+0x28e>
 800204e:	4b22      	ldr	r3, [pc, #136]	; (80020d8 <pompa3_ayar+0x2f8>)
 8002050:	881b      	ldrh	r3, [r3, #0]
 8002052:	3b01      	subs	r3, #1
 8002054:	b29a      	uxth	r2, r3
 8002056:	4b20      	ldr	r3, [pc, #128]	; (80020d8 <pompa3_ayar+0x2f8>)
 8002058:	801a      	strh	r2, [r3, #0]
 800205a:	4b1f      	ldr	r3, [pc, #124]	; (80020d8 <pompa3_ayar+0x2f8>)
 800205c:	881b      	ldrh	r3, [r3, #0]
 800205e:	461a      	mov	r2, r3
 8002060:	4b23      	ldr	r3, [pc, #140]	; (80020f0 <pompa3_ayar+0x310>)
 8002062:	605a      	str	r2, [r3, #4]
 8002064:	220c      	movs	r2, #12
 8002066:	4922      	ldr	r1, [pc, #136]	; (80020f0 <pompa3_ayar+0x310>)
 8002068:	481c      	ldr	r0, [pc, #112]	; (80020dc <pompa3_ayar+0x2fc>)
 800206a:	f003 f97f 	bl	800536c <Flash_Write3>

									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 800206e:	2180      	movs	r1, #128	; 0x80
 8002070:	481e      	ldr	r0, [pc, #120]	; (80020ec <pompa3_ayar+0x30c>)
 8002072:	f005 f865 	bl	8007140 <HAL_GPIO_ReadPin>
 8002076:	4603      	mov	r3, r0
 8002078:	2b01      	cmp	r3, #1
 800207a:	d105      	bne.n	8002088 <pompa3_ayar+0x2a8>
										 degisken5=2;
 800207c:	4b18      	ldr	r3, [pc, #96]	; (80020e0 <pompa3_ayar+0x300>)
 800207e:	2202      	movs	r2, #2
 8002080:	701a      	strb	r2, [r3, #0]
										 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002082:	2001      	movs	r0, #1
 8002084:	f7fe faa4 	bl	80005d0 <LCD_Send_Cmd>
									 }
									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8002088:	2140      	movs	r1, #64	; 0x40
 800208a:	4818      	ldr	r0, [pc, #96]	; (80020ec <pompa3_ayar+0x30c>)
 800208c:	f005 f858 	bl	8007140 <HAL_GPIO_ReadPin>
 8002090:	4603      	mov	r3, r0
 8002092:	2b01      	cmp	r3, #1
 8002094:	d105      	bne.n	80020a2 <pompa3_ayar+0x2c2>
									 								 degisken5=0;
 8002096:	4b12      	ldr	r3, [pc, #72]	; (80020e0 <pompa3_ayar+0x300>)
 8002098:	2200      	movs	r2, #0
 800209a:	701a      	strb	r2, [r3, #0]
									 								 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800209c:	2001      	movs	r0, #1
 800209e:	f7fe fa97 	bl	80005d0 <LCD_Send_Cmd>
									 							 }
									 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 80020a2:	2120      	movs	r1, #32
 80020a4:	4813      	ldr	r0, [pc, #76]	; (80020f4 <pompa3_ayar+0x314>)
 80020a6:	f005 f84b 	bl	8007140 <HAL_GPIO_ReadPin>
 80020aa:	4603      	mov	r3, r0
 80020ac:	2b01      	cmp	r3, #1
 80020ae:	d104      	bne.n	80020ba <pompa3_ayar+0x2da>

														 		    	     	  	 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80020b0:	2001      	movs	r0, #1
 80020b2:	f7fe fa8d 	bl	80005d0 <LCD_Send_Cmd>
														 		    	     	  	  	Ayar_Pompa();
 80020b6:	f7fe ffb7 	bl	8001028 <Ayar_Pompa>
														 		    	     	  	    	 																				 					                                          }


						}
				if(degisken5==2)
 80020ba:	4b09      	ldr	r3, [pc, #36]	; (80020e0 <pompa3_ayar+0x300>)
 80020bc:	781b      	ldrb	r3, [r3, #0]
 80020be:	2b02      	cmp	r3, #2
 80020c0:	d14b      	bne.n	800215a <pompa3_ayar+0x37a>
								{
									         LCD_Send_String_On_Line1("Gun/Tkrr 1/");
 80020c2:	4809      	ldr	r0, [pc, #36]	; (80020e8 <pompa3_ayar+0x308>)
 80020c4:	f7fe fb54 	bl	8000770 <LCD_Send_String_On_Line1>
 80020c8:	e01a      	b.n	8002100 <pompa3_ayar+0x320>
 80020ca:	bf00      	nop
 80020cc:	20000464 	.word	0x20000464
 80020d0:	20000314 	.word	0x20000314
 80020d4:	20000054 	.word	0x20000054
 80020d8:	20000056 	.word	0x20000056
 80020dc:	08060000 	.word	0x08060000
 80020e0:	2000003c 	.word	0x2000003c
 80020e4:	08008fac 	.word	0x08008fac
 80020e8:	08008fb8 	.word	0x08008fb8
 80020ec:	40020000 	.word	0x40020000
 80020f0:	200002a8 	.word	0x200002a8
 80020f4:	40020800 	.word	0x40020800
 80020f8:	08008fc4 	.word	0x08008fc4
 80020fc:	08008fd0 	.word	0x08008fd0
											 LCD_Send_String_On_Line2("> Bsl/Saat 17.31");
 8002100:	481d      	ldr	r0, [pc, #116]	; (8002178 <pompa3_ayar+0x398>)
 8002102:	f7fe fb43 	bl	800078c <LCD_Send_String_On_Line2>

											 itoa((p3_tkrr), snum3, 10);
 8002106:	4b1d      	ldr	r3, [pc, #116]	; (800217c <pompa3_ayar+0x39c>)
 8002108:	881b      	ldrh	r3, [r3, #0]
 800210a:	4618      	mov	r0, r3
 800210c:	463b      	mov	r3, r7
 800210e:	220a      	movs	r2, #10
 8002110:	4619      	mov	r1, r3
 8002112:	f006 fdc9 	bl	8008ca8 <itoa>
											 HD44780_SetCursor(11,0);
 8002116:	2100      	movs	r1, #0
 8002118:	200b      	movs	r0, #11
 800211a:	f003 faeb 	bl	80056f4 <HD44780_SetCursor>
											 HD44780_PrintStr(snum3);
 800211e:	463b      	mov	r3, r7
 8002120:	4618      	mov	r0, r3
 8002122:	f003 fb58 	bl	80057d6 <HD44780_PrintStr>
		//									HD44780_PrintStr(snum);

		//									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==1){p1_tkrr=p1_tkrr+1;veri2[1]=p1_tkrr;Flash_Write(0x080E0000,veri2,12);}
		//									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1){p1_tkrr=p1_tkrr-1;veri2[1]=p1_tkrr;Flash_Write(0x080E0000,veri2,12);}

											 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8002126:	2180      	movs	r1, #128	; 0x80
 8002128:	4815      	ldr	r0, [pc, #84]	; (8002180 <pompa3_ayar+0x3a0>)
 800212a:	f005 f809 	bl	8007140 <HAL_GPIO_ReadPin>
 800212e:	4603      	mov	r3, r0
 8002130:	2b01      	cmp	r3, #1
 8002132:	d105      	bne.n	8002140 <pompa3_ayar+0x360>
												 degisken5=0;
 8002134:	4b13      	ldr	r3, [pc, #76]	; (8002184 <pompa3_ayar+0x3a4>)
 8002136:	2200      	movs	r2, #0
 8002138:	701a      	strb	r2, [r3, #0]
												 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800213a:	2001      	movs	r0, #1
 800213c:	f7fe fa48 	bl	80005d0 <LCD_Send_Cmd>
											 }
											 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8002140:	2140      	movs	r1, #64	; 0x40
 8002142:	480f      	ldr	r0, [pc, #60]	; (8002180 <pompa3_ayar+0x3a0>)
 8002144:	f004 fffc 	bl	8007140 <HAL_GPIO_ReadPin>
 8002148:	4603      	mov	r3, r0
 800214a:	2b01      	cmp	r3, #1
 800214c:	d105      	bne.n	800215a <pompa3_ayar+0x37a>
											 								 degisken5=3;
 800214e:	4b0d      	ldr	r3, [pc, #52]	; (8002184 <pompa3_ayar+0x3a4>)
 8002150:	2203      	movs	r2, #3
 8002152:	701a      	strb	r2, [r3, #0]
											 								 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002154:	2001      	movs	r0, #1
 8002156:	f7fe fa3b 	bl	80005d0 <LCD_Send_Cmd>
											 							 }
										}

				 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 800215a:	2120      	movs	r1, #32
 800215c:	480a      	ldr	r0, [pc, #40]	; (8002188 <pompa3_ayar+0x3a8>)
 800215e:	f004 ffef 	bl	8007140 <HAL_GPIO_ReadPin>
 8002162:	4603      	mov	r3, r0
 8002164:	2b01      	cmp	r3, #1
 8002166:	f47f ae6a 	bne.w	8001e3e <pompa3_ayar+0x5e>

									 		    	     	  	    	 									LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800216a:	2001      	movs	r0, #1
 800216c:	f7fe fa30 	bl	80005d0 <LCD_Send_Cmd>
									 		    	     	  	    	 									Ayar_Pompa();
 8002170:	f7fe ff5a 	bl	8001028 <Ayar_Pompa>
		if(degisken5==0)
 8002174:	e663      	b.n	8001e3e <pompa3_ayar+0x5e>
 8002176:	bf00      	nop
 8002178:	08008fe0 	.word	0x08008fe0
 800217c:	20000056 	.word	0x20000056
 8002180:	40020000 	.word	0x40020000
 8002184:	2000003c 	.word	0x2000003c
 8002188:	40020800 	.word	0x40020800

0800218c <pompa4_ayar>:


	}
 }

 void pompa4_ayar(){
 800218c:	b580      	push	{r7, lr}
 800218e:	b08e      	sub	sp, #56	; 0x38
 8002190:	af00      	add	r7, sp, #0
 	 char snum4[50];
 		 data4=Flash_Read4(0x08080000);
 8002192:	4804      	ldr	r0, [pc, #16]	; (80021a4 <pompa4_ayar+0x18>)
 8002194:	f003 f9d4 	bl	8005540 <Flash_Read4>
 8002198:	4603      	mov	r3, r0
 800219a:	4a03      	ldr	r2, [pc, #12]	; (80021a8 <pompa4_ayar+0x1c>)
 800219c:	6013      	str	r3, [r2, #0]
 		 		 	                         for(int i=0;i<=12;i++){
 800219e:	2300      	movs	r3, #0
 80021a0:	637b      	str	r3, [r7, #52]	; 0x34
 80021a2:	e010      	b.n	80021c6 <pompa4_ayar+0x3a>
 80021a4:	08080000 	.word	0x08080000
 80021a8:	200001e8 	.word	0x200001e8

 		 		 	    	 								 		  read4[i]=data4[i];
 80021ac:	4bb2      	ldr	r3, [pc, #712]	; (8002478 <pompa4_ayar+0x2ec>)
 80021ae:	681a      	ldr	r2, [r3, #0]
 80021b0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80021b2:	009b      	lsls	r3, r3, #2
 80021b4:	4413      	add	r3, r2
 80021b6:	681a      	ldr	r2, [r3, #0]
 80021b8:	49b0      	ldr	r1, [pc, #704]	; (800247c <pompa4_ayar+0x2f0>)
 80021ba:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80021bc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 		 		 	                         for(int i=0;i<=12;i++){
 80021c0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80021c2:	3301      	adds	r3, #1
 80021c4:	637b      	str	r3, [r7, #52]	; 0x34
 80021c6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80021c8:	2b0c      	cmp	r3, #12
 80021ca:	ddef      	ble.n	80021ac <pompa4_ayar+0x20>
 		 		 	    	 								 	  }


 		 		 	    	 				p4_ml=read4[0];
 80021cc:	4bab      	ldr	r3, [pc, #684]	; (800247c <pompa4_ayar+0x2f0>)
 80021ce:	681b      	ldr	r3, [r3, #0]
 80021d0:	b29a      	uxth	r2, r3
 80021d2:	4bab      	ldr	r3, [pc, #684]	; (8002480 <pompa4_ayar+0x2f4>)
 80021d4:	801a      	strh	r2, [r3, #0]
 		 		 	    	 				 p4_tkrr=read4[1];
 80021d6:	4ba9      	ldr	r3, [pc, #676]	; (800247c <pompa4_ayar+0x2f0>)
 80021d8:	685b      	ldr	r3, [r3, #4]
 80021da:	b29a      	uxth	r2, r3
 80021dc:	4ba9      	ldr	r3, [pc, #676]	; (8002484 <pompa4_ayar+0x2f8>)
 80021de:	801a      	strh	r2, [r3, #0]
 		 		 	    	 				 Flash_Write4(0x08080000,read4,12);
 80021e0:	220c      	movs	r2, #12
 80021e2:	49a6      	ldr	r1, [pc, #664]	; (800247c <pompa4_ayar+0x2f0>)
 80021e4:	48a8      	ldr	r0, [pc, #672]	; (8002488 <pompa4_ayar+0x2fc>)
 80021e6:	f003 f8ee 	bl	80053c6 <Flash_Write4>

 	while(1){
 		if(degisken6==0)
 80021ea:	4ba8      	ldr	r3, [pc, #672]	; (800248c <pompa4_ayar+0x300>)
 80021ec:	781b      	ldrb	r3, [r3, #0]
 80021ee:	2b00      	cmp	r3, #0
 80021f0:	f040 8098 	bne.w	8002324 <pompa4_ayar+0x198>
 				{

 					         LCD_Send_String_On_Line1(">Gun/Ml  1/");
 80021f4:	48a6      	ldr	r0, [pc, #664]	; (8002490 <pompa4_ayar+0x304>)
 80021f6:	f7fe fabb 	bl	8000770 <LCD_Send_String_On_Line1>
 							 LCD_Send_String_On_Line2("Gun/Tkrr 1/");
 80021fa:	48a6      	ldr	r0, [pc, #664]	; (8002494 <pompa4_ayar+0x308>)
 80021fc:	f7fe fac6 	bl	800078c <LCD_Send_String_On_Line2>

 							 itoa((p4_ml), snum4, 10);
 8002200:	4b9f      	ldr	r3, [pc, #636]	; (8002480 <pompa4_ayar+0x2f4>)
 8002202:	881b      	ldrh	r3, [r3, #0]
 8002204:	4618      	mov	r0, r3
 8002206:	463b      	mov	r3, r7
 8002208:	220a      	movs	r2, #10
 800220a:	4619      	mov	r1, r3
 800220c:	f006 fd4c 	bl	8008ca8 <itoa>
 							 HD44780_SetCursor(11,0);
 8002210:	2100      	movs	r1, #0
 8002212:	200b      	movs	r0, #11
 8002214:	f003 fa6e 	bl	80056f4 <HD44780_SetCursor>
 							 HD44780_PrintStr(snum4);
 8002218:	463b      	mov	r3, r7
 800221a:	4618      	mov	r0, r3
 800221c:	f003 fadb 	bl	80057d6 <HD44780_PrintStr>



 							itoa((p4_tkrr), snum4, 10);
 8002220:	4b98      	ldr	r3, [pc, #608]	; (8002484 <pompa4_ayar+0x2f8>)
 8002222:	881b      	ldrh	r3, [r3, #0]
 8002224:	4618      	mov	r0, r3
 8002226:	463b      	mov	r3, r7
 8002228:	220a      	movs	r2, #10
 800222a:	4619      	mov	r1, r3
 800222c:	f006 fd3c 	bl	8008ca8 <itoa>
 							HD44780_SetCursor(11,1);
 8002230:	2101      	movs	r1, #1
 8002232:	200b      	movs	r0, #11
 8002234:	f003 fa5e 	bl	80056f4 <HD44780_SetCursor>
 							HD44780_PrintStr(snum4);
 8002238:	463b      	mov	r3, r7
 800223a:	4618      	mov	r0, r3
 800223c:	f003 facb 	bl	80057d6 <HD44780_PrintStr>

 							if((p4_ml==10 || p4_ml==100 || p4_ml==1000) &&  HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 ){LCD_Send_Cmd(LCD_CLEAR_DISPLAY);p4_ml=p4_ml-1;veri4[0]=p4_ml;Flash_Write4(0x08080000,veri4,12);}
 8002240:	4b8f      	ldr	r3, [pc, #572]	; (8002480 <pompa4_ayar+0x2f4>)
 8002242:	881b      	ldrh	r3, [r3, #0]
 8002244:	2b0a      	cmp	r3, #10
 8002246:	d008      	beq.n	800225a <pompa4_ayar+0xce>
 8002248:	4b8d      	ldr	r3, [pc, #564]	; (8002480 <pompa4_ayar+0x2f4>)
 800224a:	881b      	ldrh	r3, [r3, #0]
 800224c:	2b64      	cmp	r3, #100	; 0x64
 800224e:	d004      	beq.n	800225a <pompa4_ayar+0xce>
 8002250:	4b8b      	ldr	r3, [pc, #556]	; (8002480 <pompa4_ayar+0x2f4>)
 8002252:	881b      	ldrh	r3, [r3, #0]
 8002254:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8002258:	d119      	bne.n	800228e <pompa4_ayar+0x102>
 800225a:	2120      	movs	r1, #32
 800225c:	488e      	ldr	r0, [pc, #568]	; (8002498 <pompa4_ayar+0x30c>)
 800225e:	f004 ff6f 	bl	8007140 <HAL_GPIO_ReadPin>
 8002262:	4603      	mov	r3, r0
 8002264:	2b01      	cmp	r3, #1
 8002266:	d112      	bne.n	800228e <pompa4_ayar+0x102>
 8002268:	2001      	movs	r0, #1
 800226a:	f7fe f9b1 	bl	80005d0 <LCD_Send_Cmd>
 800226e:	4b84      	ldr	r3, [pc, #528]	; (8002480 <pompa4_ayar+0x2f4>)
 8002270:	881b      	ldrh	r3, [r3, #0]
 8002272:	3b01      	subs	r3, #1
 8002274:	b29a      	uxth	r2, r3
 8002276:	4b82      	ldr	r3, [pc, #520]	; (8002480 <pompa4_ayar+0x2f4>)
 8002278:	801a      	strh	r2, [r3, #0]
 800227a:	4b81      	ldr	r3, [pc, #516]	; (8002480 <pompa4_ayar+0x2f4>)
 800227c:	881b      	ldrh	r3, [r3, #0]
 800227e:	461a      	mov	r2, r3
 8002280:	4b86      	ldr	r3, [pc, #536]	; (800249c <pompa4_ayar+0x310>)
 8002282:	601a      	str	r2, [r3, #0]
 8002284:	220c      	movs	r2, #12
 8002286:	4985      	ldr	r1, [pc, #532]	; (800249c <pompa4_ayar+0x310>)
 8002288:	487f      	ldr	r0, [pc, #508]	; (8002488 <pompa4_ayar+0x2fc>)
 800228a:	f003 f89c 	bl	80053c6 <Flash_Write4>

 							 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==1)
 800228e:	2110      	movs	r1, #16
 8002290:	4881      	ldr	r0, [pc, #516]	; (8002498 <pompa4_ayar+0x30c>)
 8002292:	f004 ff55 	bl	8007140 <HAL_GPIO_ReadPin>
 8002296:	4603      	mov	r3, r0
 8002298:	2b01      	cmp	r3, #1
 800229a:	d10a      	bne.n	80022b2 <pompa4_ayar+0x126>
 							 {
 							 p4_ml=p4_ml+1;
 800229c:	4b78      	ldr	r3, [pc, #480]	; (8002480 <pompa4_ayar+0x2f4>)
 800229e:	881b      	ldrh	r3, [r3, #0]
 80022a0:	3301      	adds	r3, #1
 80022a2:	b29a      	uxth	r2, r3
 80022a4:	4b76      	ldr	r3, [pc, #472]	; (8002480 <pompa4_ayar+0x2f4>)
 80022a6:	801a      	strh	r2, [r3, #0]
 							 veri4[0]=p4_ml;
 80022a8:	4b75      	ldr	r3, [pc, #468]	; (8002480 <pompa4_ayar+0x2f4>)
 80022aa:	881b      	ldrh	r3, [r3, #0]
 80022ac:	461a      	mov	r2, r3
 80022ae:	4b7b      	ldr	r3, [pc, #492]	; (800249c <pompa4_ayar+0x310>)
 80022b0:	601a      	str	r2, [r3, #0]

 							 }
 							 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 && p4_ml>0 )
 80022b2:	2120      	movs	r1, #32
 80022b4:	4878      	ldr	r0, [pc, #480]	; (8002498 <pompa4_ayar+0x30c>)
 80022b6:	f004 ff43 	bl	8007140 <HAL_GPIO_ReadPin>
 80022ba:	4603      	mov	r3, r0
 80022bc:	2b01      	cmp	r3, #1
 80022be:	d10e      	bne.n	80022de <pompa4_ayar+0x152>
 80022c0:	4b6f      	ldr	r3, [pc, #444]	; (8002480 <pompa4_ayar+0x2f4>)
 80022c2:	881b      	ldrh	r3, [r3, #0]
 80022c4:	2b00      	cmp	r3, #0
 80022c6:	d00a      	beq.n	80022de <pompa4_ayar+0x152>
 							 {
 								 p4_ml=p4_ml-1;
 80022c8:	4b6d      	ldr	r3, [pc, #436]	; (8002480 <pompa4_ayar+0x2f4>)
 80022ca:	881b      	ldrh	r3, [r3, #0]
 80022cc:	3b01      	subs	r3, #1
 80022ce:	b29a      	uxth	r2, r3
 80022d0:	4b6b      	ldr	r3, [pc, #428]	; (8002480 <pompa4_ayar+0x2f4>)
 80022d2:	801a      	strh	r2, [r3, #0]
 								 veri4[0]=p4_ml;
 80022d4:	4b6a      	ldr	r3, [pc, #424]	; (8002480 <pompa4_ayar+0x2f4>)
 80022d6:	881b      	ldrh	r3, [r3, #0]
 80022d8:	461a      	mov	r2, r3
 80022da:	4b70      	ldr	r3, [pc, #448]	; (800249c <pompa4_ayar+0x310>)
 80022dc:	601a      	str	r2, [r3, #0]

 								}

 							 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 80022de:	2180      	movs	r1, #128	; 0x80
 80022e0:	486d      	ldr	r0, [pc, #436]	; (8002498 <pompa4_ayar+0x30c>)
 80022e2:	f004 ff2d 	bl	8007140 <HAL_GPIO_ReadPin>
 80022e6:	4603      	mov	r3, r0
 80022e8:	2b01      	cmp	r3, #1
 80022ea:	d10a      	bne.n	8002302 <pompa4_ayar+0x176>
 								Flash_Write4(0x08080000,veri4,12);
 80022ec:	220c      	movs	r2, #12
 80022ee:	496b      	ldr	r1, [pc, #428]	; (800249c <pompa4_ayar+0x310>)
 80022f0:	4865      	ldr	r0, [pc, #404]	; (8002488 <pompa4_ayar+0x2fc>)
 80022f2:	f003 f868 	bl	80053c6 <Flash_Write4>
 								 degisken6=1;
 80022f6:	4b65      	ldr	r3, [pc, #404]	; (800248c <pompa4_ayar+0x300>)
 80022f8:	2201      	movs	r2, #1
 80022fa:	701a      	strb	r2, [r3, #0]
 								 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80022fc:	2001      	movs	r0, #1
 80022fe:	f7fe f967 	bl	80005d0 <LCD_Send_Cmd>
 							 }

 							 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8002302:	2120      	movs	r1, #32
 8002304:	4866      	ldr	r0, [pc, #408]	; (80024a0 <pompa4_ayar+0x314>)
 8002306:	f004 ff1b 	bl	8007140 <HAL_GPIO_ReadPin>
 800230a:	4603      	mov	r3, r0
 800230c:	2b01      	cmp	r3, #1
 800230e:	d109      	bne.n	8002324 <pompa4_ayar+0x198>
 								                                                    Flash_Write4(0x08080000,veri4,12);
 8002310:	220c      	movs	r2, #12
 8002312:	4962      	ldr	r1, [pc, #392]	; (800249c <pompa4_ayar+0x310>)
 8002314:	485c      	ldr	r0, [pc, #368]	; (8002488 <pompa4_ayar+0x2fc>)
 8002316:	f003 f856 	bl	80053c6 <Flash_Write4>
 												 		    	   				 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800231a:	2001      	movs	r0, #1
 800231c:	f7fe f958 	bl	80005d0 <LCD_Send_Cmd>
 												 		    	     	  	    	Ayar_Pompa();
 8002320:	f7fe fe82 	bl	8001028 <Ayar_Pompa>
 												 		     					             }

 				}

 				if(degisken6==1)
 8002324:	4b59      	ldr	r3, [pc, #356]	; (800248c <pompa4_ayar+0x300>)
 8002326:	781b      	ldrb	r3, [r3, #0]
 8002328:	2b01      	cmp	r3, #1
 800232a:	f040 809c 	bne.w	8002466 <pompa4_ayar+0x2da>
 						{
 							         LCD_Send_String_On_Line1("Gun/Ml  1/");
 800232e:	485d      	ldr	r0, [pc, #372]	; (80024a4 <pompa4_ayar+0x318>)
 8002330:	f7fe fa1e 	bl	8000770 <LCD_Send_String_On_Line1>
 									 LCD_Send_String_On_Line2(">Gun/Tkrr 1/");
 8002334:	485c      	ldr	r0, [pc, #368]	; (80024a8 <pompa4_ayar+0x31c>)
 8002336:	f7fe fa29 	bl	800078c <LCD_Send_String_On_Line2>

 									 itoa((p4_ml), snum4, 10);
 800233a:	4b51      	ldr	r3, [pc, #324]	; (8002480 <pompa4_ayar+0x2f4>)
 800233c:	881b      	ldrh	r3, [r3, #0]
 800233e:	4618      	mov	r0, r3
 8002340:	463b      	mov	r3, r7
 8002342:	220a      	movs	r2, #10
 8002344:	4619      	mov	r1, r3
 8002346:	f006 fcaf 	bl	8008ca8 <itoa>
 									 HD44780_SetCursor(10,0);
 800234a:	2100      	movs	r1, #0
 800234c:	200a      	movs	r0, #10
 800234e:	f003 f9d1 	bl	80056f4 <HD44780_SetCursor>
 									 HD44780_PrintStr(snum4);
 8002352:	463b      	mov	r3, r7
 8002354:	4618      	mov	r0, r3
 8002356:	f003 fa3e 	bl	80057d6 <HD44780_PrintStr>



 									itoa((p4_tkrr), snum4, 10);
 800235a:	4b4a      	ldr	r3, [pc, #296]	; (8002484 <pompa4_ayar+0x2f8>)
 800235c:	881b      	ldrh	r3, [r3, #0]
 800235e:	4618      	mov	r0, r3
 8002360:	463b      	mov	r3, r7
 8002362:	220a      	movs	r2, #10
 8002364:	4619      	mov	r1, r3
 8002366:	f006 fc9f 	bl	8008ca8 <itoa>
 									HD44780_SetCursor(12,1);
 800236a:	2101      	movs	r1, #1
 800236c:	200c      	movs	r0, #12
 800236e:	f003 f9c1 	bl	80056f4 <HD44780_SetCursor>
 									HD44780_PrintStr(snum4);
 8002372:	463b      	mov	r3, r7
 8002374:	4618      	mov	r0, r3
 8002376:	f003 fa2e 	bl	80057d6 <HD44780_PrintStr>

 									if((p3_ml==10 ) &&  HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 ){LCD_Send_Cmd(LCD_CLEAR_DISPLAY);p4_ml=p4_ml-1;veri4[1]=p4_ml;Flash_Write4(0x08080000,veri4,12);}
 800237a:	4b4c      	ldr	r3, [pc, #304]	; (80024ac <pompa4_ayar+0x320>)
 800237c:	881b      	ldrh	r3, [r3, #0]
 800237e:	2b0a      	cmp	r3, #10
 8002380:	d119      	bne.n	80023b6 <pompa4_ayar+0x22a>
 8002382:	2120      	movs	r1, #32
 8002384:	4844      	ldr	r0, [pc, #272]	; (8002498 <pompa4_ayar+0x30c>)
 8002386:	f004 fedb 	bl	8007140 <HAL_GPIO_ReadPin>
 800238a:	4603      	mov	r3, r0
 800238c:	2b01      	cmp	r3, #1
 800238e:	d112      	bne.n	80023b6 <pompa4_ayar+0x22a>
 8002390:	2001      	movs	r0, #1
 8002392:	f7fe f91d 	bl	80005d0 <LCD_Send_Cmd>
 8002396:	4b3a      	ldr	r3, [pc, #232]	; (8002480 <pompa4_ayar+0x2f4>)
 8002398:	881b      	ldrh	r3, [r3, #0]
 800239a:	3b01      	subs	r3, #1
 800239c:	b29a      	uxth	r2, r3
 800239e:	4b38      	ldr	r3, [pc, #224]	; (8002480 <pompa4_ayar+0x2f4>)
 80023a0:	801a      	strh	r2, [r3, #0]
 80023a2:	4b37      	ldr	r3, [pc, #220]	; (8002480 <pompa4_ayar+0x2f4>)
 80023a4:	881b      	ldrh	r3, [r3, #0]
 80023a6:	461a      	mov	r2, r3
 80023a8:	4b3c      	ldr	r3, [pc, #240]	; (800249c <pompa4_ayar+0x310>)
 80023aa:	605a      	str	r2, [r3, #4]
 80023ac:	220c      	movs	r2, #12
 80023ae:	493b      	ldr	r1, [pc, #236]	; (800249c <pompa4_ayar+0x310>)
 80023b0:	4835      	ldr	r0, [pc, #212]	; (8002488 <pompa4_ayar+0x2fc>)
 80023b2:	f003 f808 	bl	80053c6 <Flash_Write4>

 									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==1)
 80023b6:	2110      	movs	r1, #16
 80023b8:	4837      	ldr	r0, [pc, #220]	; (8002498 <pompa4_ayar+0x30c>)
 80023ba:	f004 fec1 	bl	8007140 <HAL_GPIO_ReadPin>
 80023be:	4603      	mov	r3, r0
 80023c0:	2b01      	cmp	r3, #1
 80023c2:	d10f      	bne.n	80023e4 <pompa4_ayar+0x258>
 									 {
 										 p4_tkrr=p4_tkrr+1;
 80023c4:	4b2f      	ldr	r3, [pc, #188]	; (8002484 <pompa4_ayar+0x2f8>)
 80023c6:	881b      	ldrh	r3, [r3, #0]
 80023c8:	3301      	adds	r3, #1
 80023ca:	b29a      	uxth	r2, r3
 80023cc:	4b2d      	ldr	r3, [pc, #180]	; (8002484 <pompa4_ayar+0x2f8>)
 80023ce:	801a      	strh	r2, [r3, #0]
 									     veri4[1]=p4_tkrr;
 80023d0:	4b2c      	ldr	r3, [pc, #176]	; (8002484 <pompa4_ayar+0x2f8>)
 80023d2:	881b      	ldrh	r3, [r3, #0]
 80023d4:	461a      	mov	r2, r3
 80023d6:	4b31      	ldr	r3, [pc, #196]	; (800249c <pompa4_ayar+0x310>)
 80023d8:	605a      	str	r2, [r3, #4]
 									    Flash_Write4(0x08080000,veri4,12);
 80023da:	220c      	movs	r2, #12
 80023dc:	492f      	ldr	r1, [pc, #188]	; (800249c <pompa4_ayar+0x310>)
 80023de:	482a      	ldr	r0, [pc, #168]	; (8002488 <pompa4_ayar+0x2fc>)
 80023e0:	f002 fff1 	bl	80053c6 <Flash_Write4>
 									     }
 									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 && p4_tkrr>0 )
 80023e4:	2120      	movs	r1, #32
 80023e6:	482c      	ldr	r0, [pc, #176]	; (8002498 <pompa4_ayar+0x30c>)
 80023e8:	f004 feaa 	bl	8007140 <HAL_GPIO_ReadPin>
 80023ec:	4603      	mov	r3, r0
 80023ee:	2b01      	cmp	r3, #1
 80023f0:	d113      	bne.n	800241a <pompa4_ayar+0x28e>
 80023f2:	4b24      	ldr	r3, [pc, #144]	; (8002484 <pompa4_ayar+0x2f8>)
 80023f4:	881b      	ldrh	r3, [r3, #0]
 80023f6:	2b00      	cmp	r3, #0
 80023f8:	d00f      	beq.n	800241a <pompa4_ayar+0x28e>
 									 {
 										 p4_tkrr=p4_tkrr-1;
 80023fa:	4b22      	ldr	r3, [pc, #136]	; (8002484 <pompa4_ayar+0x2f8>)
 80023fc:	881b      	ldrh	r3, [r3, #0]
 80023fe:	3b01      	subs	r3, #1
 8002400:	b29a      	uxth	r2, r3
 8002402:	4b20      	ldr	r3, [pc, #128]	; (8002484 <pompa4_ayar+0x2f8>)
 8002404:	801a      	strh	r2, [r3, #0]
 										 veri4[1]=p4_tkrr;
 8002406:	4b1f      	ldr	r3, [pc, #124]	; (8002484 <pompa4_ayar+0x2f8>)
 8002408:	881b      	ldrh	r3, [r3, #0]
 800240a:	461a      	mov	r2, r3
 800240c:	4b23      	ldr	r3, [pc, #140]	; (800249c <pompa4_ayar+0x310>)
 800240e:	605a      	str	r2, [r3, #4]
 										Flash_Write4(0x08080000,veri4,12);
 8002410:	220c      	movs	r2, #12
 8002412:	4922      	ldr	r1, [pc, #136]	; (800249c <pompa4_ayar+0x310>)
 8002414:	481c      	ldr	r0, [pc, #112]	; (8002488 <pompa4_ayar+0x2fc>)
 8002416:	f002 ffd6 	bl	80053c6 <Flash_Write4>
 								     }

 									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 800241a:	2180      	movs	r1, #128	; 0x80
 800241c:	481e      	ldr	r0, [pc, #120]	; (8002498 <pompa4_ayar+0x30c>)
 800241e:	f004 fe8f 	bl	8007140 <HAL_GPIO_ReadPin>
 8002422:	4603      	mov	r3, r0
 8002424:	2b01      	cmp	r3, #1
 8002426:	d105      	bne.n	8002434 <pompa4_ayar+0x2a8>
 										 degisken6=2;
 8002428:	4b18      	ldr	r3, [pc, #96]	; (800248c <pompa4_ayar+0x300>)
 800242a:	2202      	movs	r2, #2
 800242c:	701a      	strb	r2, [r3, #0]
 										 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800242e:	2001      	movs	r0, #1
 8002430:	f7fe f8ce 	bl	80005d0 <LCD_Send_Cmd>
 									 }
 									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8002434:	2140      	movs	r1, #64	; 0x40
 8002436:	4818      	ldr	r0, [pc, #96]	; (8002498 <pompa4_ayar+0x30c>)
 8002438:	f004 fe82 	bl	8007140 <HAL_GPIO_ReadPin>
 800243c:	4603      	mov	r3, r0
 800243e:	2b01      	cmp	r3, #1
 8002440:	d105      	bne.n	800244e <pompa4_ayar+0x2c2>

 									 								 degisken6=0;
 8002442:	4b12      	ldr	r3, [pc, #72]	; (800248c <pompa4_ayar+0x300>)
 8002444:	2200      	movs	r2, #0
 8002446:	701a      	strb	r2, [r3, #0]
 									 								 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002448:	2001      	movs	r0, #1
 800244a:	f7fe f8c1 	bl	80005d0 <LCD_Send_Cmd>
 									 							 }

 									 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 800244e:	2120      	movs	r1, #32
 8002450:	4813      	ldr	r0, [pc, #76]	; (80024a0 <pompa4_ayar+0x314>)
 8002452:	f004 fe75 	bl	8007140 <HAL_GPIO_ReadPin>
 8002456:	4603      	mov	r3, r0
 8002458:	2b01      	cmp	r3, #1
 800245a:	d104      	bne.n	8002466 <pompa4_ayar+0x2da>

 																		 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800245c:	2001      	movs	r0, #1
 800245e:	f7fe f8b7 	bl	80005d0 <LCD_Send_Cmd>
 																			Ayar_Pompa();
 8002462:	f7fe fde1 	bl	8001028 <Ayar_Pompa>
 														 		    	         }

 						}
 				if(degisken6==2)
 8002466:	4b09      	ldr	r3, [pc, #36]	; (800248c <pompa4_ayar+0x300>)
 8002468:	781b      	ldrb	r3, [r3, #0]
 800246a:	2b02      	cmp	r3, #2
 800246c:	d159      	bne.n	8002522 <pompa4_ayar+0x396>
 								{
 									         LCD_Send_String_On_Line1("Gun/Tkrr 1/");
 800246e:	4809      	ldr	r0, [pc, #36]	; (8002494 <pompa4_ayar+0x308>)
 8002470:	f7fe f97e 	bl	8000770 <LCD_Send_String_On_Line1>
 8002474:	e01c      	b.n	80024b0 <pompa4_ayar+0x324>
 8002476:	bf00      	nop
 8002478:	200001e8 	.word	0x200001e8
 800247c:	2000042c 	.word	0x2000042c
 8002480:	20000058 	.word	0x20000058
 8002484:	2000005a 	.word	0x2000005a
 8002488:	08080000 	.word	0x08080000
 800248c:	2000003d 	.word	0x2000003d
 8002490:	08008fac 	.word	0x08008fac
 8002494:	08008fb8 	.word	0x08008fb8
 8002498:	40020000 	.word	0x40020000
 800249c:	200001b8 	.word	0x200001b8
 80024a0:	40020800 	.word	0x40020800
 80024a4:	08008fc4 	.word	0x08008fc4
 80024a8:	08008fd0 	.word	0x08008fd0
 80024ac:	20000054 	.word	0x20000054
 											 LCD_Send_String_On_Line2("> Bsl/Saat 17.31");
 80024b0:	4865      	ldr	r0, [pc, #404]	; (8002648 <pompa4_ayar+0x4bc>)
 80024b2:	f7fe f96b 	bl	800078c <LCD_Send_String_On_Line2>

 											 itoa((p4_tkrr), snum4, 10);
 80024b6:	4b65      	ldr	r3, [pc, #404]	; (800264c <pompa4_ayar+0x4c0>)
 80024b8:	881b      	ldrh	r3, [r3, #0]
 80024ba:	4618      	mov	r0, r3
 80024bc:	463b      	mov	r3, r7
 80024be:	220a      	movs	r2, #10
 80024c0:	4619      	mov	r1, r3
 80024c2:	f006 fbf1 	bl	8008ca8 <itoa>
 											 HD44780_SetCursor(11,0);
 80024c6:	2100      	movs	r1, #0
 80024c8:	200b      	movs	r0, #11
 80024ca:	f003 f913 	bl	80056f4 <HD44780_SetCursor>
 											 HD44780_PrintStr(snum4);
 80024ce:	463b      	mov	r3, r7
 80024d0:	4618      	mov	r0, r3
 80024d2:	f003 f980 	bl	80057d6 <HD44780_PrintStr>
 		//									HD44780_PrintStr(snum);

 		//									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==1){p1_tkrr=p1_tkrr+1;veri2[1]=p1_tkrr;Flash_Write(0x080E0000,veri2,12);}
 		//									 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1){p1_tkrr=p1_tkrr-1;veri2[1]=p1_tkrr;Flash_Write(0x080E0000,veri2,12);}

 											 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 80024d6:	2180      	movs	r1, #128	; 0x80
 80024d8:	485d      	ldr	r0, [pc, #372]	; (8002650 <pompa4_ayar+0x4c4>)
 80024da:	f004 fe31 	bl	8007140 <HAL_GPIO_ReadPin>
 80024de:	4603      	mov	r3, r0
 80024e0:	2b01      	cmp	r3, #1
 80024e2:	d105      	bne.n	80024f0 <pompa4_ayar+0x364>
 												 degisken6=0;
 80024e4:	4b5b      	ldr	r3, [pc, #364]	; (8002654 <pompa4_ayar+0x4c8>)
 80024e6:	2200      	movs	r2, #0
 80024e8:	701a      	strb	r2, [r3, #0]
 												 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80024ea:	2001      	movs	r0, #1
 80024ec:	f7fe f870 	bl	80005d0 <LCD_Send_Cmd>
 											 }
 											 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 80024f0:	2140      	movs	r1, #64	; 0x40
 80024f2:	4857      	ldr	r0, [pc, #348]	; (8002650 <pompa4_ayar+0x4c4>)
 80024f4:	f004 fe24 	bl	8007140 <HAL_GPIO_ReadPin>
 80024f8:	4603      	mov	r3, r0
 80024fa:	2b01      	cmp	r3, #1
 80024fc:	d105      	bne.n	800250a <pompa4_ayar+0x37e>
 											 								 degisken6=3;
 80024fe:	4b55      	ldr	r3, [pc, #340]	; (8002654 <pompa4_ayar+0x4c8>)
 8002500:	2203      	movs	r2, #3
 8002502:	701a      	strb	r2, [r3, #0]
 											 								 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002504:	2001      	movs	r0, #1
 8002506:	f7fe f863 	bl	80005d0 <LCD_Send_Cmd>
 											 							 }


 											 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 800250a:	2120      	movs	r1, #32
 800250c:	4852      	ldr	r0, [pc, #328]	; (8002658 <pompa4_ayar+0x4cc>)
 800250e:	f004 fe17 	bl	8007140 <HAL_GPIO_ReadPin>
 8002512:	4603      	mov	r3, r0
 8002514:	2b01      	cmp	r3, #1
 8002516:	d104      	bne.n	8002522 <pompa4_ayar+0x396>
 																 		    	     	  	    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002518:	2001      	movs	r0, #1
 800251a:	f7fe f859 	bl	80005d0 <LCD_Send_Cmd>
 																 		    	     	  	    	 																				 					Ayar_Pompa();
 800251e:	f7fe fd83 	bl	8001028 <Ayar_Pompa>
 																 		    	     	  	    	 																				 					                                          }
 								}

 				if(degisken6==3)
 8002522:	4b4c      	ldr	r3, [pc, #304]	; (8002654 <pompa4_ayar+0x4c8>)
 8002524:	781b      	ldrb	r3, [r3, #0]
 8002526:	2b03      	cmp	r3, #3
 8002528:	f47f ae5f 	bne.w	80021ea <pompa4_ayar+0x5e>
 								{
 									         LCD_Send_String_On_Line1(">Gun/Tkrr 1/");
 800252c:	484b      	ldr	r0, [pc, #300]	; (800265c <pompa4_ayar+0x4d0>)
 800252e:	f7fe f91f 	bl	8000770 <LCD_Send_String_On_Line1>
 											 LCD_Send_String_On_Line2("Bsl/Saat 17.31");
 8002532:	484b      	ldr	r0, [pc, #300]	; (8002660 <pompa4_ayar+0x4d4>)
 8002534:	f7fe f92a 	bl	800078c <LCD_Send_String_On_Line2>

 											 itoa((p4_tkrr), snum4, 10);
 8002538:	4b44      	ldr	r3, [pc, #272]	; (800264c <pompa4_ayar+0x4c0>)
 800253a:	881b      	ldrh	r3, [r3, #0]
 800253c:	4618      	mov	r0, r3
 800253e:	463b      	mov	r3, r7
 8002540:	220a      	movs	r2, #10
 8002542:	4619      	mov	r1, r3
 8002544:	f006 fbb0 	bl	8008ca8 <itoa>
 											 HD44780_SetCursor(12,0);
 8002548:	2100      	movs	r1, #0
 800254a:	200c      	movs	r0, #12
 800254c:	f003 f8d2 	bl	80056f4 <HD44780_SetCursor>
 											 HD44780_PrintStr(snum4);
 8002550:	463b      	mov	r3, r7
 8002552:	4618      	mov	r0, r3
 8002554:	f003 f93f 	bl	80057d6 <HD44780_PrintStr>

 		//									itoa((p1_tkrr), snum, 10);  saat eklenecek
 		//									HD44780_SetCursor(14,1);
 		//									HD44780_PrintStr(snum);

 											if((p4_ml==10 ) &&  HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 ){LCD_Send_Cmd(LCD_CLEAR_DISPLAY);p4_ml=p4_ml-1;veri4[1]=p4_ml;Flash_Write4(0x08080000,veri4,12);}
 8002558:	4b42      	ldr	r3, [pc, #264]	; (8002664 <pompa4_ayar+0x4d8>)
 800255a:	881b      	ldrh	r3, [r3, #0]
 800255c:	2b0a      	cmp	r3, #10
 800255e:	d119      	bne.n	8002594 <pompa4_ayar+0x408>
 8002560:	2120      	movs	r1, #32
 8002562:	483b      	ldr	r0, [pc, #236]	; (8002650 <pompa4_ayar+0x4c4>)
 8002564:	f004 fdec 	bl	8007140 <HAL_GPIO_ReadPin>
 8002568:	4603      	mov	r3, r0
 800256a:	2b01      	cmp	r3, #1
 800256c:	d112      	bne.n	8002594 <pompa4_ayar+0x408>
 800256e:	2001      	movs	r0, #1
 8002570:	f7fe f82e 	bl	80005d0 <LCD_Send_Cmd>
 8002574:	4b3b      	ldr	r3, [pc, #236]	; (8002664 <pompa4_ayar+0x4d8>)
 8002576:	881b      	ldrh	r3, [r3, #0]
 8002578:	3b01      	subs	r3, #1
 800257a:	b29a      	uxth	r2, r3
 800257c:	4b39      	ldr	r3, [pc, #228]	; (8002664 <pompa4_ayar+0x4d8>)
 800257e:	801a      	strh	r2, [r3, #0]
 8002580:	4b38      	ldr	r3, [pc, #224]	; (8002664 <pompa4_ayar+0x4d8>)
 8002582:	881b      	ldrh	r3, [r3, #0]
 8002584:	461a      	mov	r2, r3
 8002586:	4b38      	ldr	r3, [pc, #224]	; (8002668 <pompa4_ayar+0x4dc>)
 8002588:	605a      	str	r2, [r3, #4]
 800258a:	220c      	movs	r2, #12
 800258c:	4936      	ldr	r1, [pc, #216]	; (8002668 <pompa4_ayar+0x4dc>)
 800258e:	4837      	ldr	r0, [pc, #220]	; (800266c <pompa4_ayar+0x4e0>)
 8002590:	f002 ff19 	bl	80053c6 <Flash_Write4>

 											 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==1){p4_tkrr=p4_tkrr+1;veri4[1]=p4_tkrr;Flash_Write4(0x08080000,veri4,12);}
 8002594:	2110      	movs	r1, #16
 8002596:	482e      	ldr	r0, [pc, #184]	; (8002650 <pompa4_ayar+0x4c4>)
 8002598:	f004 fdd2 	bl	8007140 <HAL_GPIO_ReadPin>
 800259c:	4603      	mov	r3, r0
 800259e:	2b01      	cmp	r3, #1
 80025a0:	d10f      	bne.n	80025c2 <pompa4_ayar+0x436>
 80025a2:	4b2a      	ldr	r3, [pc, #168]	; (800264c <pompa4_ayar+0x4c0>)
 80025a4:	881b      	ldrh	r3, [r3, #0]
 80025a6:	3301      	adds	r3, #1
 80025a8:	b29a      	uxth	r2, r3
 80025aa:	4b28      	ldr	r3, [pc, #160]	; (800264c <pompa4_ayar+0x4c0>)
 80025ac:	801a      	strh	r2, [r3, #0]
 80025ae:	4b27      	ldr	r3, [pc, #156]	; (800264c <pompa4_ayar+0x4c0>)
 80025b0:	881b      	ldrh	r3, [r3, #0]
 80025b2:	461a      	mov	r2, r3
 80025b4:	4b2c      	ldr	r3, [pc, #176]	; (8002668 <pompa4_ayar+0x4dc>)
 80025b6:	605a      	str	r2, [r3, #4]
 80025b8:	220c      	movs	r2, #12
 80025ba:	492b      	ldr	r1, [pc, #172]	; (8002668 <pompa4_ayar+0x4dc>)
 80025bc:	482b      	ldr	r0, [pc, #172]	; (800266c <pompa4_ayar+0x4e0>)
 80025be:	f002 ff02 	bl	80053c6 <Flash_Write4>
 											 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 && p4_tkrr>0){p4_tkrr=p4_tkrr-1;veri4[1]=p4_tkrr;Flash_Write4(0x08080000,veri4,12);}
 80025c2:	2120      	movs	r1, #32
 80025c4:	4822      	ldr	r0, [pc, #136]	; (8002650 <pompa4_ayar+0x4c4>)
 80025c6:	f004 fdbb 	bl	8007140 <HAL_GPIO_ReadPin>
 80025ca:	4603      	mov	r3, r0
 80025cc:	2b01      	cmp	r3, #1
 80025ce:	d113      	bne.n	80025f8 <pompa4_ayar+0x46c>
 80025d0:	4b1e      	ldr	r3, [pc, #120]	; (800264c <pompa4_ayar+0x4c0>)
 80025d2:	881b      	ldrh	r3, [r3, #0]
 80025d4:	2b00      	cmp	r3, #0
 80025d6:	d00f      	beq.n	80025f8 <pompa4_ayar+0x46c>
 80025d8:	4b1c      	ldr	r3, [pc, #112]	; (800264c <pompa4_ayar+0x4c0>)
 80025da:	881b      	ldrh	r3, [r3, #0]
 80025dc:	3b01      	subs	r3, #1
 80025de:	b29a      	uxth	r2, r3
 80025e0:	4b1a      	ldr	r3, [pc, #104]	; (800264c <pompa4_ayar+0x4c0>)
 80025e2:	801a      	strh	r2, [r3, #0]
 80025e4:	4b19      	ldr	r3, [pc, #100]	; (800264c <pompa4_ayar+0x4c0>)
 80025e6:	881b      	ldrh	r3, [r3, #0]
 80025e8:	461a      	mov	r2, r3
 80025ea:	4b1f      	ldr	r3, [pc, #124]	; (8002668 <pompa4_ayar+0x4dc>)
 80025ec:	605a      	str	r2, [r3, #4]
 80025ee:	220c      	movs	r2, #12
 80025f0:	491d      	ldr	r1, [pc, #116]	; (8002668 <pompa4_ayar+0x4dc>)
 80025f2:	481e      	ldr	r0, [pc, #120]	; (800266c <pompa4_ayar+0x4e0>)
 80025f4:	f002 fee7 	bl	80053c6 <Flash_Write4>

 											 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 80025f8:	2180      	movs	r1, #128	; 0x80
 80025fa:	4815      	ldr	r0, [pc, #84]	; (8002650 <pompa4_ayar+0x4c4>)
 80025fc:	f004 fda0 	bl	8007140 <HAL_GPIO_ReadPin>
 8002600:	4603      	mov	r3, r0
 8002602:	2b01      	cmp	r3, #1
 8002604:	d105      	bne.n	8002612 <pompa4_ayar+0x486>
 												 degisken6=2;
 8002606:	4b13      	ldr	r3, [pc, #76]	; (8002654 <pompa4_ayar+0x4c8>)
 8002608:	2202      	movs	r2, #2
 800260a:	701a      	strb	r2, [r3, #0]
 												 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800260c:	2001      	movs	r0, #1
 800260e:	f7fd ffdf 	bl	80005d0 <LCD_Send_Cmd>
 											 }

 											 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8002612:	2140      	movs	r1, #64	; 0x40
 8002614:	480e      	ldr	r0, [pc, #56]	; (8002650 <pompa4_ayar+0x4c4>)
 8002616:	f004 fd93 	bl	8007140 <HAL_GPIO_ReadPin>
 800261a:	4603      	mov	r3, r0
 800261c:	2b01      	cmp	r3, #1
 800261e:	d105      	bne.n	800262c <pompa4_ayar+0x4a0>
 											 								 degisken6=0;
 8002620:	4b0c      	ldr	r3, [pc, #48]	; (8002654 <pompa4_ayar+0x4c8>)
 8002622:	2200      	movs	r2, #0
 8002624:	701a      	strb	r2, [r3, #0]
 											 								 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002626:	2001      	movs	r0, #1
 8002628:	f7fd ffd2 	bl	80005d0 <LCD_Send_Cmd>
 											 							 }


 											 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 800262c:	2120      	movs	r1, #32
 800262e:	480a      	ldr	r0, [pc, #40]	; (8002658 <pompa4_ayar+0x4cc>)
 8002630:	f004 fd86 	bl	8007140 <HAL_GPIO_ReadPin>
 8002634:	4603      	mov	r3, r0
 8002636:	2b01      	cmp	r3, #1
 8002638:	f47f add7 	bne.w	80021ea <pompa4_ayar+0x5e>
 																 		    	     	  	    	 																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800263c:	2001      	movs	r0, #1
 800263e:	f7fd ffc7 	bl	80005d0 <LCD_Send_Cmd>
 																 		    	     	  	    	 																				 					Ayar_Pompa();
 8002642:	f7fe fcf1 	bl	8001028 <Ayar_Pompa>
 		if(degisken6==0)
 8002646:	e5d0      	b.n	80021ea <pompa4_ayar+0x5e>
 8002648:	08008fe0 	.word	0x08008fe0
 800264c:	2000005a 	.word	0x2000005a
 8002650:	40020000 	.word	0x40020000
 8002654:	2000003d 	.word	0x2000003d
 8002658:	40020800 	.word	0x40020800
 800265c:	08008fd0 	.word	0x08008fd0
 8002660:	08008ff4 	.word	0x08008ff4
 8002664:	20000058 	.word	0x20000058
 8002668:	200001b8 	.word	0x200001b8
 800266c:	08080000 	.word	0x08080000

08002670 <pazartesi>:
 	}
  }



void pazartesi(){
 8002670:	b580      	push	{r7, lr}
 8002672:	b082      	sub	sp, #8
 8002674:	af00      	add	r7, sp, #0
// BURAYA SETLEYİP SIFIR YAPMAMIZ GEREK PAZARTESİ POMPA 1 DEĞERİ İÇİN


	 data5=Flash_Read5(0x080E0000);
 8002676:	481e      	ldr	r0, [pc, #120]	; (80026f0 <pazartesi+0x80>)
 8002678:	f002 ff82 	bl	8005580 <Flash_Read5>
 800267c:	4603      	mov	r3, r0
 800267e:	4a1d      	ldr	r2, [pc, #116]	; (80026f4 <pazartesi+0x84>)
 8002680:	6013      	str	r3, [r2, #0]

			 		 	                         for(int i=0;i<30;i++){
 8002682:	2300      	movs	r3, #0
 8002684:	607b      	str	r3, [r7, #4]
 8002686:	e00c      	b.n	80026a2 <pazartesi+0x32>

			 		 	    	 								 		  read5[i]=data5[i];
 8002688:	4b1a      	ldr	r3, [pc, #104]	; (80026f4 <pazartesi+0x84>)
 800268a:	681a      	ldr	r2, [r3, #0]
 800268c:	687b      	ldr	r3, [r7, #4]
 800268e:	009b      	lsls	r3, r3, #2
 8002690:	4413      	add	r3, r2
 8002692:	681a      	ldr	r2, [r3, #0]
 8002694:	4918      	ldr	r1, [pc, #96]	; (80026f8 <pazartesi+0x88>)
 8002696:	687b      	ldr	r3, [r7, #4]
 8002698:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
			 		 	                         for(int i=0;i<30;i++){
 800269c:	687b      	ldr	r3, [r7, #4]
 800269e:	3301      	adds	r3, #1
 80026a0:	607b      	str	r3, [r7, #4]
 80026a2:	687b      	ldr	r3, [r7, #4]
 80026a4:	2b1d      	cmp	r3, #29
 80026a6:	ddef      	ble.n	8002688 <pazartesi+0x18>
			 		 	    	 								 	   }


			 		 	                       pazartesi_pompa1=read5[0];
 80026a8:	4b13      	ldr	r3, [pc, #76]	; (80026f8 <pazartesi+0x88>)
 80026aa:	681b      	ldr	r3, [r3, #0]
 80026ac:	4a13      	ldr	r2, [pc, #76]	; (80026fc <pazartesi+0x8c>)
 80026ae:	6013      	str	r3, [r2, #0]
			 		 	                       pazartesi_pompa2=read5[1];
 80026b0:	4b11      	ldr	r3, [pc, #68]	; (80026f8 <pazartesi+0x88>)
 80026b2:	685b      	ldr	r3, [r3, #4]
 80026b4:	4a12      	ldr	r2, [pc, #72]	; (8002700 <pazartesi+0x90>)
 80026b6:	6013      	str	r3, [r2, #0]
			 		 	                       pazartesi_pompa3=read5[2];
 80026b8:	4b0f      	ldr	r3, [pc, #60]	; (80026f8 <pazartesi+0x88>)
 80026ba:	689b      	ldr	r3, [r3, #8]
 80026bc:	4a11      	ldr	r2, [pc, #68]	; (8002704 <pazartesi+0x94>)
 80026be:	6013      	str	r3, [r2, #0]
			 		 	                       pazartesi_pompa4=read5[3];
 80026c0:	4b0d      	ldr	r3, [pc, #52]	; (80026f8 <pazartesi+0x88>)
 80026c2:	68db      	ldr	r3, [r3, #12]
 80026c4:	4a10      	ldr	r2, [pc, #64]	; (8002708 <pazartesi+0x98>)
 80026c6:	6013      	str	r3, [r2, #0]


		 		 	                       Flash_Write5(0x080E0000,read5,30);
 80026c8:	221e      	movs	r2, #30
 80026ca:	490b      	ldr	r1, [pc, #44]	; (80026f8 <pazartesi+0x88>)
 80026cc:	4808      	ldr	r0, [pc, #32]	; (80026f0 <pazartesi+0x80>)
 80026ce:	f002 fea7 	bl	8005420 <Flash_Write5>



while(1){
	if(degisken9==0)
 80026d2:	4b0e      	ldr	r3, [pc, #56]	; (800270c <pazartesi+0x9c>)
 80026d4:	781b      	ldrb	r3, [r3, #0]
 80026d6:	2b00      	cmp	r3, #0
 80026d8:	f040 809c 	bne.w	8002814 <pazartesi+0x1a4>
			{


		                                                                    data5=Flash_Read5(0x080E0000);
 80026dc:	4804      	ldr	r0, [pc, #16]	; (80026f0 <pazartesi+0x80>)
 80026de:	f002 ff4f 	bl	8005580 <Flash_Read5>
 80026e2:	4603      	mov	r3, r0
 80026e4:	4a03      	ldr	r2, [pc, #12]	; (80026f4 <pazartesi+0x84>)
 80026e6:	6013      	str	r3, [r2, #0]
															 					for(int i=0;i<29;i++)
 80026e8:	2300      	movs	r3, #0
 80026ea:	603b      	str	r3, [r7, #0]
 80026ec:	e01d      	b.n	800272a <pazartesi+0xba>
 80026ee:	bf00      	nop
 80026f0:	080e0000 	.word	0x080e0000
 80026f4:	20000480 	.word	0x20000480
 80026f8:	20000344 	.word	0x20000344
 80026fc:	2000005c 	.word	0x2000005c
 8002700:	20000060 	.word	0x20000060
 8002704:	20000064 	.word	0x20000064
 8002708:	20000068 	.word	0x20000068
 800270c:	2000003f 	.word	0x2000003f
															 							 	{
															 							 	veri5[i]=data5[i];
 8002710:	4bbc      	ldr	r3, [pc, #752]	; (8002a04 <pazartesi+0x394>)
 8002712:	681a      	ldr	r2, [r3, #0]
 8002714:	683b      	ldr	r3, [r7, #0]
 8002716:	009b      	lsls	r3, r3, #2
 8002718:	4413      	add	r3, r2
 800271a:	681a      	ldr	r2, [r3, #0]
 800271c:	49ba      	ldr	r1, [pc, #744]	; (8002a08 <pazartesi+0x398>)
 800271e:	683b      	ldr	r3, [r7, #0]
 8002720:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
															 					for(int i=0;i<29;i++)
 8002724:	683b      	ldr	r3, [r7, #0]
 8002726:	3301      	adds	r3, #1
 8002728:	603b      	str	r3, [r7, #0]
 800272a:	683b      	ldr	r3, [r7, #0]
 800272c:	2b1c      	cmp	r3, #28
 800272e:	ddef      	ble.n	8002710 <pazartesi+0xa0>
															 							 	}



			if(pazartesi_pompa1==0 ){
 8002730:	4bb6      	ldr	r3, [pc, #728]	; (8002a0c <pazartesi+0x39c>)
 8002732:	681b      	ldr	r3, [r3, #0]
 8002734:	2b00      	cmp	r3, #0
 8002736:	d134      	bne.n	80027a2 <pazartesi+0x132>

				LCD_Send_String_On_Line1(">>Pmp1 Pasif");
 8002738:	48b5      	ldr	r0, [pc, #724]	; (8002a10 <pazartesi+0x3a0>)
 800273a:	f7fe f819 	bl	8000770 <LCD_Send_String_On_Line1>
				LCD_Send_String_On_Line2("Pmp2");
 800273e:	48b5      	ldr	r0, [pc, #724]	; (8002a14 <pazartesi+0x3a4>)
 8002740:	f7fe f824 	bl	800078c <LCD_Send_String_On_Line2>



										 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){pazartesi_pompa1=1;veri5[0]=pazartesi_pompa1;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8002744:	2110      	movs	r1, #16
 8002746:	48b4      	ldr	r0, [pc, #720]	; (8002a18 <pazartesi+0x3a8>)
 8002748:	f004 fcfa 	bl	8007140 <HAL_GPIO_ReadPin>
 800274c:	4603      	mov	r3, r0
 800274e:	2b01      	cmp	r3, #1
 8002750:	d10e      	bne.n	8002770 <pazartesi+0x100>
 8002752:	4bae      	ldr	r3, [pc, #696]	; (8002a0c <pazartesi+0x39c>)
 8002754:	2201      	movs	r2, #1
 8002756:	601a      	str	r2, [r3, #0]
 8002758:	4bac      	ldr	r3, [pc, #688]	; (8002a0c <pazartesi+0x39c>)
 800275a:	681b      	ldr	r3, [r3, #0]
 800275c:	4aaa      	ldr	r2, [pc, #680]	; (8002a08 <pazartesi+0x398>)
 800275e:	6013      	str	r3, [r2, #0]
 8002760:	221c      	movs	r2, #28
 8002762:	49a9      	ldr	r1, [pc, #676]	; (8002a08 <pazartesi+0x398>)
 8002764:	48ad      	ldr	r0, [pc, #692]	; (8002a1c <pazartesi+0x3ac>)
 8002766:	f002 fe5b 	bl	8005420 <Flash_Write5>
 800276a:	2001      	movs	r0, #1
 800276c:	f7fd ff30 	bl	80005d0 <LCD_Send_Cmd>

										 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8002770:	2180      	movs	r1, #128	; 0x80
 8002772:	48ab      	ldr	r0, [pc, #684]	; (8002a20 <pazartesi+0x3b0>)
 8002774:	f004 fce4 	bl	8007140 <HAL_GPIO_ReadPin>
 8002778:	4603      	mov	r3, r0
 800277a:	2b01      	cmp	r3, #1
 800277c:	d105      	bne.n	800278a <pazartesi+0x11a>
											 degisken9=1;
 800277e:	4ba9      	ldr	r3, [pc, #676]	; (8002a24 <pazartesi+0x3b4>)
 8002780:	2201      	movs	r2, #1
 8002782:	701a      	strb	r2, [r3, #0]
											 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002784:	2001      	movs	r0, #1
 8002786:	f7fd ff23 	bl	80005d0 <LCD_Send_Cmd>

										 }
										 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 800278a:	2120      	movs	r1, #32
 800278c:	48a2      	ldr	r0, [pc, #648]	; (8002a18 <pazartesi+0x3a8>)
 800278e:	f004 fcd7 	bl	8007140 <HAL_GPIO_ReadPin>
 8002792:	4603      	mov	r3, r0
 8002794:	2b01      	cmp	r3, #1
 8002796:	d104      	bne.n	80027a2 <pazartesi+0x132>
																														 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002798:	2001      	movs	r0, #1
 800279a:	f7fd ff19 	bl	80005d0 <LCD_Send_Cmd>
																														 					 	 Ayar_Gun();
 800279e:	f7fe f90d 	bl	80009bc <Ayar_Gun>
																														 					                                          }


			}
			if(pazartesi_pompa1==1 ){
 80027a2:	4b9a      	ldr	r3, [pc, #616]	; (8002a0c <pazartesi+0x39c>)
 80027a4:	681b      	ldr	r3, [r3, #0]
 80027a6:	2b01      	cmp	r3, #1
 80027a8:	d134      	bne.n	8002814 <pazartesi+0x1a4>
							LCD_Send_String_On_Line1(">>Pmp1 Aktif");
 80027aa:	489f      	ldr	r0, [pc, #636]	; (8002a28 <pazartesi+0x3b8>)
 80027ac:	f7fd ffe0 	bl	8000770 <LCD_Send_String_On_Line1>
							LCD_Send_String_On_Line2("Pmp2");
 80027b0:	4898      	ldr	r0, [pc, #608]	; (8002a14 <pazartesi+0x3a4>)
 80027b2:	f7fd ffeb 	bl	800078c <LCD_Send_String_On_Line2>



													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){pazartesi_pompa1=0;veri5[0]=pazartesi_pompa1;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 80027b6:	2110      	movs	r1, #16
 80027b8:	4897      	ldr	r0, [pc, #604]	; (8002a18 <pazartesi+0x3a8>)
 80027ba:	f004 fcc1 	bl	8007140 <HAL_GPIO_ReadPin>
 80027be:	4603      	mov	r3, r0
 80027c0:	2b01      	cmp	r3, #1
 80027c2:	d10e      	bne.n	80027e2 <pazartesi+0x172>
 80027c4:	4b91      	ldr	r3, [pc, #580]	; (8002a0c <pazartesi+0x39c>)
 80027c6:	2200      	movs	r2, #0
 80027c8:	601a      	str	r2, [r3, #0]
 80027ca:	4b90      	ldr	r3, [pc, #576]	; (8002a0c <pazartesi+0x39c>)
 80027cc:	681b      	ldr	r3, [r3, #0]
 80027ce:	4a8e      	ldr	r2, [pc, #568]	; (8002a08 <pazartesi+0x398>)
 80027d0:	6013      	str	r3, [r2, #0]
 80027d2:	221c      	movs	r2, #28
 80027d4:	498c      	ldr	r1, [pc, #560]	; (8002a08 <pazartesi+0x398>)
 80027d6:	4891      	ldr	r0, [pc, #580]	; (8002a1c <pazartesi+0x3ac>)
 80027d8:	f002 fe22 	bl	8005420 <Flash_Write5>
 80027dc:	2001      	movs	r0, #1
 80027de:	f7fd fef7 	bl	80005d0 <LCD_Send_Cmd>

													 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 80027e2:	2180      	movs	r1, #128	; 0x80
 80027e4:	488e      	ldr	r0, [pc, #568]	; (8002a20 <pazartesi+0x3b0>)
 80027e6:	f004 fcab 	bl	8007140 <HAL_GPIO_ReadPin>
 80027ea:	4603      	mov	r3, r0
 80027ec:	2b01      	cmp	r3, #1
 80027ee:	d105      	bne.n	80027fc <pazartesi+0x18c>
														 degisken9=1;
 80027f0:	4b8c      	ldr	r3, [pc, #560]	; (8002a24 <pazartesi+0x3b4>)
 80027f2:	2201      	movs	r2, #1
 80027f4:	701a      	strb	r2, [r3, #0]
														 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80027f6:	2001      	movs	r0, #1
 80027f8:	f7fd feea 	bl	80005d0 <LCD_Send_Cmd>

													 }
													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 80027fc:	2120      	movs	r1, #32
 80027fe:	4886      	ldr	r0, [pc, #536]	; (8002a18 <pazartesi+0x3a8>)
 8002800:	f004 fc9e 	bl	8007140 <HAL_GPIO_ReadPin>
 8002804:	4603      	mov	r3, r0
 8002806:	2b01      	cmp	r3, #1
 8002808:	d104      	bne.n	8002814 <pazartesi+0x1a4>
																																	 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800280a:	2001      	movs	r0, #1
 800280c:	f7fd fee0 	bl	80005d0 <LCD_Send_Cmd>
																																	 					 	 Ayar_Gun();
 8002810:	f7fe f8d4 	bl	80009bc <Ayar_Gun>
						}


			}

	if(degisken9==1)
 8002814:	4b83      	ldr	r3, [pc, #524]	; (8002a24 <pazartesi+0x3b4>)
 8002816:	781b      	ldrb	r3, [r3, #0]
 8002818:	2b01      	cmp	r3, #1
 800281a:	f040 808c 	bne.w	8002936 <pazartesi+0x2c6>
				{

				if(pazartesi_pompa2==0 ){
 800281e:	4b83      	ldr	r3, [pc, #524]	; (8002a2c <pazartesi+0x3bc>)
 8002820:	681b      	ldr	r3, [r3, #0]
 8002822:	2b00      	cmp	r3, #0
 8002824:	d141      	bne.n	80028aa <pazartesi+0x23a>
					LCD_Send_String_On_Line1("Pmp1");
 8002826:	4882      	ldr	r0, [pc, #520]	; (8002a30 <pazartesi+0x3c0>)
 8002828:	f7fd ffa2 	bl	8000770 <LCD_Send_String_On_Line1>
					LCD_Send_String_On_Line2(">>Pmp2 Pasif");
 800282c:	4881      	ldr	r0, [pc, #516]	; (8002a34 <pazartesi+0x3c4>)
 800282e:	f7fd ffad 	bl	800078c <LCD_Send_String_On_Line2>



											 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){pazartesi_pompa2=1;veri5[1]=pazartesi_pompa2;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8002832:	2110      	movs	r1, #16
 8002834:	4878      	ldr	r0, [pc, #480]	; (8002a18 <pazartesi+0x3a8>)
 8002836:	f004 fc83 	bl	8007140 <HAL_GPIO_ReadPin>
 800283a:	4603      	mov	r3, r0
 800283c:	2b01      	cmp	r3, #1
 800283e:	d10e      	bne.n	800285e <pazartesi+0x1ee>
 8002840:	4b7a      	ldr	r3, [pc, #488]	; (8002a2c <pazartesi+0x3bc>)
 8002842:	2201      	movs	r2, #1
 8002844:	601a      	str	r2, [r3, #0]
 8002846:	4b79      	ldr	r3, [pc, #484]	; (8002a2c <pazartesi+0x3bc>)
 8002848:	681b      	ldr	r3, [r3, #0]
 800284a:	4a6f      	ldr	r2, [pc, #444]	; (8002a08 <pazartesi+0x398>)
 800284c:	6053      	str	r3, [r2, #4]
 800284e:	221c      	movs	r2, #28
 8002850:	496d      	ldr	r1, [pc, #436]	; (8002a08 <pazartesi+0x398>)
 8002852:	4872      	ldr	r0, [pc, #456]	; (8002a1c <pazartesi+0x3ac>)
 8002854:	f002 fde4 	bl	8005420 <Flash_Write5>
 8002858:	2001      	movs	r0, #1
 800285a:	f7fd feb9 	bl	80005d0 <LCD_Send_Cmd>

											 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 800285e:	2180      	movs	r1, #128	; 0x80
 8002860:	486f      	ldr	r0, [pc, #444]	; (8002a20 <pazartesi+0x3b0>)
 8002862:	f004 fc6d 	bl	8007140 <HAL_GPIO_ReadPin>
 8002866:	4603      	mov	r3, r0
 8002868:	2b01      	cmp	r3, #1
 800286a:	d105      	bne.n	8002878 <pazartesi+0x208>
												 degisken9=2;
 800286c:	4b6d      	ldr	r3, [pc, #436]	; (8002a24 <pazartesi+0x3b4>)
 800286e:	2202      	movs	r2, #2
 8002870:	701a      	strb	r2, [r3, #0]
												 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002872:	2001      	movs	r0, #1
 8002874:	f7fd feac 	bl	80005d0 <LCD_Send_Cmd>
											 }
											 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8002878:	2140      	movs	r1, #64	; 0x40
 800287a:	4869      	ldr	r0, [pc, #420]	; (8002a20 <pazartesi+0x3b0>)
 800287c:	f004 fc60 	bl	8007140 <HAL_GPIO_ReadPin>
 8002880:	4603      	mov	r3, r0
 8002882:	2b01      	cmp	r3, #1
 8002884:	d105      	bne.n	8002892 <pazartesi+0x222>
																						 degisken9=1;
 8002886:	4b67      	ldr	r3, [pc, #412]	; (8002a24 <pazartesi+0x3b4>)
 8002888:	2201      	movs	r2, #1
 800288a:	701a      	strb	r2, [r3, #0]
																						 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800288c:	2001      	movs	r0, #1
 800288e:	f7fd fe9f 	bl	80005d0 <LCD_Send_Cmd>
																					 }
											 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8002892:	2120      	movs	r1, #32
 8002894:	4860      	ldr	r0, [pc, #384]	; (8002a18 <pazartesi+0x3a8>)
 8002896:	f004 fc53 	bl	8007140 <HAL_GPIO_ReadPin>
 800289a:	4603      	mov	r3, r0
 800289c:	2b01      	cmp	r3, #1
 800289e:	d104      	bne.n	80028aa <pazartesi+0x23a>
																															 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80028a0:	2001      	movs	r0, #1
 80028a2:	f7fd fe95 	bl	80005d0 <LCD_Send_Cmd>
																															 					 	 Ayar_Gun();
 80028a6:	f7fe f889 	bl	80009bc <Ayar_Gun>
																															 					                                          }
				}
				if(pazartesi_pompa2==1 ){
 80028aa:	4b60      	ldr	r3, [pc, #384]	; (8002a2c <pazartesi+0x3bc>)
 80028ac:	681b      	ldr	r3, [r3, #0]
 80028ae:	2b01      	cmp	r3, #1
 80028b0:	d141      	bne.n	8002936 <pazartesi+0x2c6>
								LCD_Send_String_On_Line1("Pmp1");
 80028b2:	485f      	ldr	r0, [pc, #380]	; (8002a30 <pazartesi+0x3c0>)
 80028b4:	f7fd ff5c 	bl	8000770 <LCD_Send_String_On_Line1>
								LCD_Send_String_On_Line2(">>Pmp2 Aktif");
 80028b8:	485f      	ldr	r0, [pc, #380]	; (8002a38 <pazartesi+0x3c8>)
 80028ba:	f7fd ff67 	bl	800078c <LCD_Send_String_On_Line2>



														 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){pazartesi_pompa2=0;veri5[1]=pazartesi_pompa2;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 80028be:	2110      	movs	r1, #16
 80028c0:	4855      	ldr	r0, [pc, #340]	; (8002a18 <pazartesi+0x3a8>)
 80028c2:	f004 fc3d 	bl	8007140 <HAL_GPIO_ReadPin>
 80028c6:	4603      	mov	r3, r0
 80028c8:	2b01      	cmp	r3, #1
 80028ca:	d10e      	bne.n	80028ea <pazartesi+0x27a>
 80028cc:	4b57      	ldr	r3, [pc, #348]	; (8002a2c <pazartesi+0x3bc>)
 80028ce:	2200      	movs	r2, #0
 80028d0:	601a      	str	r2, [r3, #0]
 80028d2:	4b56      	ldr	r3, [pc, #344]	; (8002a2c <pazartesi+0x3bc>)
 80028d4:	681b      	ldr	r3, [r3, #0]
 80028d6:	4a4c      	ldr	r2, [pc, #304]	; (8002a08 <pazartesi+0x398>)
 80028d8:	6053      	str	r3, [r2, #4]
 80028da:	221c      	movs	r2, #28
 80028dc:	494a      	ldr	r1, [pc, #296]	; (8002a08 <pazartesi+0x398>)
 80028de:	484f      	ldr	r0, [pc, #316]	; (8002a1c <pazartesi+0x3ac>)
 80028e0:	f002 fd9e 	bl	8005420 <Flash_Write5>
 80028e4:	2001      	movs	r0, #1
 80028e6:	f7fd fe73 	bl	80005d0 <LCD_Send_Cmd>

														 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 80028ea:	2180      	movs	r1, #128	; 0x80
 80028ec:	484c      	ldr	r0, [pc, #304]	; (8002a20 <pazartesi+0x3b0>)
 80028ee:	f004 fc27 	bl	8007140 <HAL_GPIO_ReadPin>
 80028f2:	4603      	mov	r3, r0
 80028f4:	2b01      	cmp	r3, #1
 80028f6:	d105      	bne.n	8002904 <pazartesi+0x294>
															 degisken9=2;
 80028f8:	4b4a      	ldr	r3, [pc, #296]	; (8002a24 <pazartesi+0x3b4>)
 80028fa:	2202      	movs	r2, #2
 80028fc:	701a      	strb	r2, [r3, #0]
															 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80028fe:	2001      	movs	r0, #1
 8002900:	f7fd fe66 	bl	80005d0 <LCD_Send_Cmd>
														 }
														 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8002904:	2140      	movs	r1, #64	; 0x40
 8002906:	4846      	ldr	r0, [pc, #280]	; (8002a20 <pazartesi+0x3b0>)
 8002908:	f004 fc1a 	bl	8007140 <HAL_GPIO_ReadPin>
 800290c:	4603      	mov	r3, r0
 800290e:	2b01      	cmp	r3, #1
 8002910:	d105      	bne.n	800291e <pazartesi+0x2ae>
															degisken9=0;
 8002912:	4b44      	ldr	r3, [pc, #272]	; (8002a24 <pazartesi+0x3b4>)
 8002914:	2200      	movs	r2, #0
 8002916:	701a      	strb	r2, [r3, #0]
															LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002918:	2001      	movs	r0, #1
 800291a:	f7fd fe59 	bl	80005d0 <LCD_Send_Cmd>
																							}
														 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 800291e:	2120      	movs	r1, #32
 8002920:	483d      	ldr	r0, [pc, #244]	; (8002a18 <pazartesi+0x3a8>)
 8002922:	f004 fc0d 	bl	8007140 <HAL_GPIO_ReadPin>
 8002926:	4603      	mov	r3, r0
 8002928:	2b01      	cmp	r3, #1
 800292a:	d104      	bne.n	8002936 <pazartesi+0x2c6>
																																		 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800292c:	2001      	movs	r0, #1
 800292e:	f7fd fe4f 	bl	80005d0 <LCD_Send_Cmd>
																																		 					 	 Ayar_Gun();
 8002932:	f7fe f843 	bl	80009bc <Ayar_Gun>

				}



	if(degisken9==2)
 8002936:	4b3b      	ldr	r3, [pc, #236]	; (8002a24 <pazartesi+0x3b4>)
 8002938:	781b      	ldrb	r3, [r3, #0]
 800293a:	2b02      	cmp	r3, #2
 800293c:	f040 80bf 	bne.w	8002abe <pazartesi+0x44e>
					{

					if(pazartesi_pompa3==0 ){
 8002940:	4b3e      	ldr	r3, [pc, #248]	; (8002a3c <pazartesi+0x3cc>)
 8002942:	681b      	ldr	r3, [r3, #0]
 8002944:	2b00      	cmp	r3, #0
 8002946:	d14d      	bne.n	80029e4 <pazartesi+0x374>
						LCD_Send_String_On_Line1(">>Pmp3 Pasif");
 8002948:	483d      	ldr	r0, [pc, #244]	; (8002a40 <pazartesi+0x3d0>)
 800294a:	f7fd ff11 	bl	8000770 <LCD_Send_String_On_Line1>
						LCD_Send_String_On_Line2("Pmp4 ");
 800294e:	483d      	ldr	r0, [pc, #244]	; (8002a44 <pazartesi+0x3d4>)
 8002950:	f7fd ff1c 	bl	800078c <LCD_Send_String_On_Line2>



												 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){pazartesi_pompa3=1;veri5[2]=pazartesi_pompa3;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8002954:	2110      	movs	r1, #16
 8002956:	4830      	ldr	r0, [pc, #192]	; (8002a18 <pazartesi+0x3a8>)
 8002958:	f004 fbf2 	bl	8007140 <HAL_GPIO_ReadPin>
 800295c:	4603      	mov	r3, r0
 800295e:	2b01      	cmp	r3, #1
 8002960:	d10e      	bne.n	8002980 <pazartesi+0x310>
 8002962:	4b36      	ldr	r3, [pc, #216]	; (8002a3c <pazartesi+0x3cc>)
 8002964:	2201      	movs	r2, #1
 8002966:	601a      	str	r2, [r3, #0]
 8002968:	4b34      	ldr	r3, [pc, #208]	; (8002a3c <pazartesi+0x3cc>)
 800296a:	681b      	ldr	r3, [r3, #0]
 800296c:	4a26      	ldr	r2, [pc, #152]	; (8002a08 <pazartesi+0x398>)
 800296e:	6093      	str	r3, [r2, #8]
 8002970:	221c      	movs	r2, #28
 8002972:	4925      	ldr	r1, [pc, #148]	; (8002a08 <pazartesi+0x398>)
 8002974:	4829      	ldr	r0, [pc, #164]	; (8002a1c <pazartesi+0x3ac>)
 8002976:	f002 fd53 	bl	8005420 <Flash_Write5>
 800297a:	2001      	movs	r0, #1
 800297c:	f7fd fe28 	bl	80005d0 <LCD_Send_Cmd>

												 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8002980:	2180      	movs	r1, #128	; 0x80
 8002982:	4827      	ldr	r0, [pc, #156]	; (8002a20 <pazartesi+0x3b0>)
 8002984:	f004 fbdc 	bl	8007140 <HAL_GPIO_ReadPin>
 8002988:	4603      	mov	r3, r0
 800298a:	2b01      	cmp	r3, #1
 800298c:	d105      	bne.n	800299a <pazartesi+0x32a>
													 degisken9=3;
 800298e:	4b25      	ldr	r3, [pc, #148]	; (8002a24 <pazartesi+0x3b4>)
 8002990:	2203      	movs	r2, #3
 8002992:	701a      	strb	r2, [r3, #0]
													 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002994:	2001      	movs	r0, #1
 8002996:	f7fd fe1b 	bl	80005d0 <LCD_Send_Cmd>
												 }
												 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 800299a:	2140      	movs	r1, #64	; 0x40
 800299c:	4820      	ldr	r0, [pc, #128]	; (8002a20 <pazartesi+0x3b0>)
 800299e:	f004 fbcf 	bl	8007140 <HAL_GPIO_ReadPin>
 80029a2:	4603      	mov	r3, r0
 80029a4:	2b01      	cmp	r3, #1
 80029a6:	d111      	bne.n	80029cc <pazartesi+0x35c>
																							 degisken9=4;
 80029a8:	4b1e      	ldr	r3, [pc, #120]	; (8002a24 <pazartesi+0x3b4>)
 80029aa:	2204      	movs	r2, #4
 80029ac:	701a      	strb	r2, [r3, #0]
																							 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80029ae:	2001      	movs	r0, #1
 80029b0:	f7fd fe0e 	bl	80005d0 <LCD_Send_Cmd>
																							 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 80029b4:	2120      	movs	r1, #32
 80029b6:	4818      	ldr	r0, [pc, #96]	; (8002a18 <pazartesi+0x3a8>)
 80029b8:	f004 fbc2 	bl	8007140 <HAL_GPIO_ReadPin>
 80029bc:	4603      	mov	r3, r0
 80029be:	2b01      	cmp	r3, #1
 80029c0:	d104      	bne.n	80029cc <pazartesi+0x35c>
																																											 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80029c2:	2001      	movs	r0, #1
 80029c4:	f7fd fe04 	bl	80005d0 <LCD_Send_Cmd>
																																											 					 	 Ayar_Gun();
 80029c8:	f7fd fff8 	bl	80009bc <Ayar_Gun>
																																											 					                                          }																					 }
												 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 80029cc:	2120      	movs	r1, #32
 80029ce:	4812      	ldr	r0, [pc, #72]	; (8002a18 <pazartesi+0x3a8>)
 80029d0:	f004 fbb6 	bl	8007140 <HAL_GPIO_ReadPin>
 80029d4:	4603      	mov	r3, r0
 80029d6:	2b01      	cmp	r3, #1
 80029d8:	d104      	bne.n	80029e4 <pazartesi+0x374>
																																														 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80029da:	2001      	movs	r0, #1
 80029dc:	f7fd fdf8 	bl	80005d0 <LCD_Send_Cmd>
																																														 					 	 Ayar_Gun();
 80029e0:	f7fd ffec 	bl	80009bc <Ayar_Gun>
																																														 					                                          }
					}
					if(pazartesi_pompa3==1 ){
 80029e4:	4b15      	ldr	r3, [pc, #84]	; (8002a3c <pazartesi+0x3cc>)
 80029e6:	681b      	ldr	r3, [r3, #0]
 80029e8:	2b01      	cmp	r3, #1
 80029ea:	d168      	bne.n	8002abe <pazartesi+0x44e>
									LCD_Send_String_On_Line1(">>Pmp3 Aktif");
 80029ec:	4816      	ldr	r0, [pc, #88]	; (8002a48 <pazartesi+0x3d8>)
 80029ee:	f7fd febf 	bl	8000770 <LCD_Send_String_On_Line1>
									LCD_Send_String_On_Line2("Pmp4");
 80029f2:	4816      	ldr	r0, [pc, #88]	; (8002a4c <pazartesi+0x3dc>)
 80029f4:	f7fd feca 	bl	800078c <LCD_Send_String_On_Line2>



															 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){pazartesi_pompa3=0;veri5[2]=pazartesi_pompa3;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 80029f8:	2110      	movs	r1, #16
 80029fa:	4807      	ldr	r0, [pc, #28]	; (8002a18 <pazartesi+0x3a8>)
 80029fc:	f004 fba0 	bl	8007140 <HAL_GPIO_ReadPin>
 8002a00:	4603      	mov	r3, r0
 8002a02:	e025      	b.n	8002a50 <pazartesi+0x3e0>
 8002a04:	20000480 	.word	0x20000480
 8002a08:	20000144 	.word	0x20000144
 8002a0c:	2000005c 	.word	0x2000005c
 8002a10:	08009004 	.word	0x08009004
 8002a14:	08009014 	.word	0x08009014
 8002a18:	40020800 	.word	0x40020800
 8002a1c:	080e0000 	.word	0x080e0000
 8002a20:	40020000 	.word	0x40020000
 8002a24:	2000003f 	.word	0x2000003f
 8002a28:	0800901c 	.word	0x0800901c
 8002a2c:	20000060 	.word	0x20000060
 8002a30:	0800902c 	.word	0x0800902c
 8002a34:	08009034 	.word	0x08009034
 8002a38:	08009044 	.word	0x08009044
 8002a3c:	20000064 	.word	0x20000064
 8002a40:	08009054 	.word	0x08009054
 8002a44:	08009064 	.word	0x08009064
 8002a48:	0800906c 	.word	0x0800906c
 8002a4c:	0800907c 	.word	0x0800907c
 8002a50:	2b01      	cmp	r3, #1
 8002a52:	d10e      	bne.n	8002a72 <pazartesi+0x402>
 8002a54:	4b64      	ldr	r3, [pc, #400]	; (8002be8 <pazartesi+0x578>)
 8002a56:	2200      	movs	r2, #0
 8002a58:	601a      	str	r2, [r3, #0]
 8002a5a:	4b63      	ldr	r3, [pc, #396]	; (8002be8 <pazartesi+0x578>)
 8002a5c:	681b      	ldr	r3, [r3, #0]
 8002a5e:	4a63      	ldr	r2, [pc, #396]	; (8002bec <pazartesi+0x57c>)
 8002a60:	6093      	str	r3, [r2, #8]
 8002a62:	221c      	movs	r2, #28
 8002a64:	4961      	ldr	r1, [pc, #388]	; (8002bec <pazartesi+0x57c>)
 8002a66:	4862      	ldr	r0, [pc, #392]	; (8002bf0 <pazartesi+0x580>)
 8002a68:	f002 fcda 	bl	8005420 <Flash_Write5>
 8002a6c:	2001      	movs	r0, #1
 8002a6e:	f7fd fdaf 	bl	80005d0 <LCD_Send_Cmd>

															 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8002a72:	2180      	movs	r1, #128	; 0x80
 8002a74:	485f      	ldr	r0, [pc, #380]	; (8002bf4 <pazartesi+0x584>)
 8002a76:	f004 fb63 	bl	8007140 <HAL_GPIO_ReadPin>
 8002a7a:	4603      	mov	r3, r0
 8002a7c:	2b01      	cmp	r3, #1
 8002a7e:	d105      	bne.n	8002a8c <pazartesi+0x41c>
																 degisken9=3;
 8002a80:	4b5d      	ldr	r3, [pc, #372]	; (8002bf8 <pazartesi+0x588>)
 8002a82:	2203      	movs	r2, #3
 8002a84:	701a      	strb	r2, [r3, #0]
																 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002a86:	2001      	movs	r0, #1
 8002a88:	f7fd fda2 	bl	80005d0 <LCD_Send_Cmd>
															 }
															 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8002a8c:	2140      	movs	r1, #64	; 0x40
 8002a8e:	4859      	ldr	r0, [pc, #356]	; (8002bf4 <pazartesi+0x584>)
 8002a90:	f004 fb56 	bl	8007140 <HAL_GPIO_ReadPin>
 8002a94:	4603      	mov	r3, r0
 8002a96:	2b01      	cmp	r3, #1
 8002a98:	d105      	bne.n	8002aa6 <pazartesi+0x436>
																degisken9=1;
 8002a9a:	4b57      	ldr	r3, [pc, #348]	; (8002bf8 <pazartesi+0x588>)
 8002a9c:	2201      	movs	r2, #1
 8002a9e:	701a      	strb	r2, [r3, #0]
																LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002aa0:	2001      	movs	r0, #1
 8002aa2:	f7fd fd95 	bl	80005d0 <LCD_Send_Cmd>
																								}
															 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8002aa6:	2120      	movs	r1, #32
 8002aa8:	4854      	ldr	r0, [pc, #336]	; (8002bfc <pazartesi+0x58c>)
 8002aaa:	f004 fb49 	bl	8007140 <HAL_GPIO_ReadPin>
 8002aae:	4603      	mov	r3, r0
 8002ab0:	2b01      	cmp	r3, #1
 8002ab2:	d104      	bne.n	8002abe <pazartesi+0x44e>
																																																	 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002ab4:	2001      	movs	r0, #1
 8002ab6:	f7fd fd8b 	bl	80005d0 <LCD_Send_Cmd>
																																																	 					 	 Ayar_Gun();
 8002aba:	f7fd ff7f 	bl	80009bc <Ayar_Gun>
																																																	 					                                          }
								}


					}
	if(degisken9==3)
 8002abe:	4b4e      	ldr	r3, [pc, #312]	; (8002bf8 <pazartesi+0x588>)
 8002ac0:	781b      	ldrb	r3, [r3, #0]
 8002ac2:	2b03      	cmp	r3, #3
 8002ac4:	f47f ae05 	bne.w	80026d2 <pazartesi+0x62>
						{

						if(pazartesi_pompa4==0 ){
 8002ac8:	4b4d      	ldr	r3, [pc, #308]	; (8002c00 <pazartesi+0x590>)
 8002aca:	681b      	ldr	r3, [r3, #0]
 8002acc:	2b00      	cmp	r3, #0
 8002ace:	d141      	bne.n	8002b54 <pazartesi+0x4e4>
							LCD_Send_String_On_Line1("Pmp3");
 8002ad0:	484c      	ldr	r0, [pc, #304]	; (8002c04 <pazartesi+0x594>)
 8002ad2:	f7fd fe4d 	bl	8000770 <LCD_Send_String_On_Line1>
							LCD_Send_String_On_Line2(">>Pmp4 Pasif ");
 8002ad6:	484c      	ldr	r0, [pc, #304]	; (8002c08 <pazartesi+0x598>)
 8002ad8:	f7fd fe58 	bl	800078c <LCD_Send_String_On_Line2>



													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){pazartesi_pompa4=1;veri5[3]=pazartesi_pompa4;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8002adc:	2110      	movs	r1, #16
 8002ade:	4847      	ldr	r0, [pc, #284]	; (8002bfc <pazartesi+0x58c>)
 8002ae0:	f004 fb2e 	bl	8007140 <HAL_GPIO_ReadPin>
 8002ae4:	4603      	mov	r3, r0
 8002ae6:	2b01      	cmp	r3, #1
 8002ae8:	d10e      	bne.n	8002b08 <pazartesi+0x498>
 8002aea:	4b45      	ldr	r3, [pc, #276]	; (8002c00 <pazartesi+0x590>)
 8002aec:	2201      	movs	r2, #1
 8002aee:	601a      	str	r2, [r3, #0]
 8002af0:	4b43      	ldr	r3, [pc, #268]	; (8002c00 <pazartesi+0x590>)
 8002af2:	681b      	ldr	r3, [r3, #0]
 8002af4:	4a3d      	ldr	r2, [pc, #244]	; (8002bec <pazartesi+0x57c>)
 8002af6:	60d3      	str	r3, [r2, #12]
 8002af8:	221c      	movs	r2, #28
 8002afa:	493c      	ldr	r1, [pc, #240]	; (8002bec <pazartesi+0x57c>)
 8002afc:	483c      	ldr	r0, [pc, #240]	; (8002bf0 <pazartesi+0x580>)
 8002afe:	f002 fc8f 	bl	8005420 <Flash_Write5>
 8002b02:	2001      	movs	r0, #1
 8002b04:	f7fd fd64 	bl	80005d0 <LCD_Send_Cmd>

													 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8002b08:	2180      	movs	r1, #128	; 0x80
 8002b0a:	483a      	ldr	r0, [pc, #232]	; (8002bf4 <pazartesi+0x584>)
 8002b0c:	f004 fb18 	bl	8007140 <HAL_GPIO_ReadPin>
 8002b10:	4603      	mov	r3, r0
 8002b12:	2b01      	cmp	r3, #1
 8002b14:	d105      	bne.n	8002b22 <pazartesi+0x4b2>
														 degisken9=0;
 8002b16:	4b38      	ldr	r3, [pc, #224]	; (8002bf8 <pazartesi+0x588>)
 8002b18:	2200      	movs	r2, #0
 8002b1a:	701a      	strb	r2, [r3, #0]
														 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002b1c:	2001      	movs	r0, #1
 8002b1e:	f7fd fd57 	bl	80005d0 <LCD_Send_Cmd>
													 }
													 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8002b22:	2140      	movs	r1, #64	; 0x40
 8002b24:	4833      	ldr	r0, [pc, #204]	; (8002bf4 <pazartesi+0x584>)
 8002b26:	f004 fb0b 	bl	8007140 <HAL_GPIO_ReadPin>
 8002b2a:	4603      	mov	r3, r0
 8002b2c:	2b01      	cmp	r3, #1
 8002b2e:	d105      	bne.n	8002b3c <pazartesi+0x4cc>
																								 degisken9=2;
 8002b30:	4b31      	ldr	r3, [pc, #196]	; (8002bf8 <pazartesi+0x588>)
 8002b32:	2202      	movs	r2, #2
 8002b34:	701a      	strb	r2, [r3, #0]
																								 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002b36:	2001      	movs	r0, #1
 8002b38:	f7fd fd4a 	bl	80005d0 <LCD_Send_Cmd>
																							 }
													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8002b3c:	2120      	movs	r1, #32
 8002b3e:	482f      	ldr	r0, [pc, #188]	; (8002bfc <pazartesi+0x58c>)
 8002b40:	f004 fafe 	bl	8007140 <HAL_GPIO_ReadPin>
 8002b44:	4603      	mov	r3, r0
 8002b46:	2b01      	cmp	r3, #1
 8002b48:	d104      	bne.n	8002b54 <pazartesi+0x4e4>
																																	 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002b4a:	2001      	movs	r0, #1
 8002b4c:	f7fd fd40 	bl	80005d0 <LCD_Send_Cmd>
																																	 					 	 Ayar_Gun();
 8002b50:	f7fd ff34 	bl	80009bc <Ayar_Gun>
																																	 					                                          }
						}
						if(pazartesi_pompa4==1 ){
 8002b54:	4b2a      	ldr	r3, [pc, #168]	; (8002c00 <pazartesi+0x590>)
 8002b56:	681b      	ldr	r3, [r3, #0]
 8002b58:	2b01      	cmp	r3, #1
 8002b5a:	f47f adba 	bne.w	80026d2 <pazartesi+0x62>
										LCD_Send_String_On_Line1("Pmp3");
 8002b5e:	4829      	ldr	r0, [pc, #164]	; (8002c04 <pazartesi+0x594>)
 8002b60:	f7fd fe06 	bl	8000770 <LCD_Send_String_On_Line1>
										LCD_Send_String_On_Line2(">>Pmp4 Aktif");
 8002b64:	4829      	ldr	r0, [pc, #164]	; (8002c0c <pazartesi+0x59c>)
 8002b66:	f7fd fe11 	bl	800078c <LCD_Send_String_On_Line2>



																 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){pazartesi_pompa4=0;veri5[3]=pazartesi_pompa4;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8002b6a:	2110      	movs	r1, #16
 8002b6c:	4823      	ldr	r0, [pc, #140]	; (8002bfc <pazartesi+0x58c>)
 8002b6e:	f004 fae7 	bl	8007140 <HAL_GPIO_ReadPin>
 8002b72:	4603      	mov	r3, r0
 8002b74:	2b01      	cmp	r3, #1
 8002b76:	d10e      	bne.n	8002b96 <pazartesi+0x526>
 8002b78:	4b21      	ldr	r3, [pc, #132]	; (8002c00 <pazartesi+0x590>)
 8002b7a:	2200      	movs	r2, #0
 8002b7c:	601a      	str	r2, [r3, #0]
 8002b7e:	4b20      	ldr	r3, [pc, #128]	; (8002c00 <pazartesi+0x590>)
 8002b80:	681b      	ldr	r3, [r3, #0]
 8002b82:	4a1a      	ldr	r2, [pc, #104]	; (8002bec <pazartesi+0x57c>)
 8002b84:	60d3      	str	r3, [r2, #12]
 8002b86:	221c      	movs	r2, #28
 8002b88:	4918      	ldr	r1, [pc, #96]	; (8002bec <pazartesi+0x57c>)
 8002b8a:	4819      	ldr	r0, [pc, #100]	; (8002bf0 <pazartesi+0x580>)
 8002b8c:	f002 fc48 	bl	8005420 <Flash_Write5>
 8002b90:	2001      	movs	r0, #1
 8002b92:	f7fd fd1d 	bl	80005d0 <LCD_Send_Cmd>

																 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8002b96:	2180      	movs	r1, #128	; 0x80
 8002b98:	4816      	ldr	r0, [pc, #88]	; (8002bf4 <pazartesi+0x584>)
 8002b9a:	f004 fad1 	bl	8007140 <HAL_GPIO_ReadPin>
 8002b9e:	4603      	mov	r3, r0
 8002ba0:	2b01      	cmp	r3, #1
 8002ba2:	d105      	bne.n	8002bb0 <pazartesi+0x540>
																	 degisken9=0;
 8002ba4:	4b14      	ldr	r3, [pc, #80]	; (8002bf8 <pazartesi+0x588>)
 8002ba6:	2200      	movs	r2, #0
 8002ba8:	701a      	strb	r2, [r3, #0]
																	 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002baa:	2001      	movs	r0, #1
 8002bac:	f7fd fd10 	bl	80005d0 <LCD_Send_Cmd>
																 }
																 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8002bb0:	2140      	movs	r1, #64	; 0x40
 8002bb2:	4810      	ldr	r0, [pc, #64]	; (8002bf4 <pazartesi+0x584>)
 8002bb4:	f004 fac4 	bl	8007140 <HAL_GPIO_ReadPin>
 8002bb8:	4603      	mov	r3, r0
 8002bba:	2b01      	cmp	r3, #1
 8002bbc:	d105      	bne.n	8002bca <pazartesi+0x55a>
																	degisken9=2;
 8002bbe:	4b0e      	ldr	r3, [pc, #56]	; (8002bf8 <pazartesi+0x588>)
 8002bc0:	2202      	movs	r2, #2
 8002bc2:	701a      	strb	r2, [r3, #0]
																	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002bc4:	2001      	movs	r0, #1
 8002bc6:	f7fd fd03 	bl	80005d0 <LCD_Send_Cmd>
																									}
																 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8002bca:	2120      	movs	r1, #32
 8002bcc:	480b      	ldr	r0, [pc, #44]	; (8002bfc <pazartesi+0x58c>)
 8002bce:	f004 fab7 	bl	8007140 <HAL_GPIO_ReadPin>
 8002bd2:	4603      	mov	r3, r0
 8002bd4:	2b01      	cmp	r3, #1
 8002bd6:	f47f ad7c 	bne.w	80026d2 <pazartesi+0x62>
																																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002bda:	2001      	movs	r0, #1
 8002bdc:	f7fd fcf8 	bl	80005d0 <LCD_Send_Cmd>
																																				 					 	 Ayar_Gun();
 8002be0:	f7fd feec 	bl	80009bc <Ayar_Gun>
	if(degisken9==0)
 8002be4:	e575      	b.n	80026d2 <pazartesi+0x62>
 8002be6:	bf00      	nop
 8002be8:	20000064 	.word	0x20000064
 8002bec:	20000144 	.word	0x20000144
 8002bf0:	080e0000 	.word	0x080e0000
 8002bf4:	40020000 	.word	0x40020000
 8002bf8:	2000003f 	.word	0x2000003f
 8002bfc:	40020800 	.word	0x40020800
 8002c00:	20000068 	.word	0x20000068
 8002c04:	08009084 	.word	0x08009084
 8002c08:	0800908c 	.word	0x0800908c
 8002c0c:	0800909c 	.word	0x0800909c

08002c10 <sali>:
						}


}
 }
void sali(){
 8002c10:	b580      	push	{r7, lr}
 8002c12:	b082      	sub	sp, #8
 8002c14:	af00      	add	r7, sp, #0
// BURAYA SETLEYİP SIFIR YAPMAMIZ GEREK PAZARTESİ POMPA 1 DEĞERİ İÇİN


	 data5=Flash_Read5(0x080E0000);
 8002c16:	481e      	ldr	r0, [pc, #120]	; (8002c90 <sali+0x80>)
 8002c18:	f002 fcb2 	bl	8005580 <Flash_Read5>
 8002c1c:	4603      	mov	r3, r0
 8002c1e:	4a1d      	ldr	r2, [pc, #116]	; (8002c94 <sali+0x84>)
 8002c20:	6013      	str	r3, [r2, #0]
			 		 	                         for(int i=0;i<30;i++){
 8002c22:	2300      	movs	r3, #0
 8002c24:	607b      	str	r3, [r7, #4]
 8002c26:	e00c      	b.n	8002c42 <sali+0x32>

			 		 	    	 								 		  read5[i]=data5[i];
 8002c28:	4b1a      	ldr	r3, [pc, #104]	; (8002c94 <sali+0x84>)
 8002c2a:	681a      	ldr	r2, [r3, #0]
 8002c2c:	687b      	ldr	r3, [r7, #4]
 8002c2e:	009b      	lsls	r3, r3, #2
 8002c30:	4413      	add	r3, r2
 8002c32:	681a      	ldr	r2, [r3, #0]
 8002c34:	4918      	ldr	r1, [pc, #96]	; (8002c98 <sali+0x88>)
 8002c36:	687b      	ldr	r3, [r7, #4]
 8002c38:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
			 		 	                         for(int i=0;i<30;i++){
 8002c3c:	687b      	ldr	r3, [r7, #4]
 8002c3e:	3301      	adds	r3, #1
 8002c40:	607b      	str	r3, [r7, #4]
 8002c42:	687b      	ldr	r3, [r7, #4]
 8002c44:	2b1d      	cmp	r3, #29
 8002c46:	ddef      	ble.n	8002c28 <sali+0x18>
			 		 	    	 								 	   }

			 		 	                       sali_pompa1=read5[4];
 8002c48:	4b13      	ldr	r3, [pc, #76]	; (8002c98 <sali+0x88>)
 8002c4a:	691b      	ldr	r3, [r3, #16]
 8002c4c:	4a13      	ldr	r2, [pc, #76]	; (8002c9c <sali+0x8c>)
 8002c4e:	6013      	str	r3, [r2, #0]
			 		 	                            sali_pompa2=read5[5];
 8002c50:	4b11      	ldr	r3, [pc, #68]	; (8002c98 <sali+0x88>)
 8002c52:	695b      	ldr	r3, [r3, #20]
 8002c54:	4a12      	ldr	r2, [pc, #72]	; (8002ca0 <sali+0x90>)
 8002c56:	6013      	str	r3, [r2, #0]
			 		 	                            sali_pompa3=read5[6];
 8002c58:	4b0f      	ldr	r3, [pc, #60]	; (8002c98 <sali+0x88>)
 8002c5a:	699b      	ldr	r3, [r3, #24]
 8002c5c:	4a11      	ldr	r2, [pc, #68]	; (8002ca4 <sali+0x94>)
 8002c5e:	6013      	str	r3, [r2, #0]
			 		 	                            sali_pompa4=read5[7];
 8002c60:	4b0d      	ldr	r3, [pc, #52]	; (8002c98 <sali+0x88>)
 8002c62:	69db      	ldr	r3, [r3, #28]
 8002c64:	4a10      	ldr	r2, [pc, #64]	; (8002ca8 <sali+0x98>)
 8002c66:	6013      	str	r3, [r2, #0]
		 		 	                       Flash_Write5(0x080E0000,read5,30);
 8002c68:	221e      	movs	r2, #30
 8002c6a:	490b      	ldr	r1, [pc, #44]	; (8002c98 <sali+0x88>)
 8002c6c:	4808      	ldr	r0, [pc, #32]	; (8002c90 <sali+0x80>)
 8002c6e:	f002 fbd7 	bl	8005420 <Flash_Write5>



while(1){
	if(degisken10==0)
 8002c72:	4b0e      	ldr	r3, [pc, #56]	; (8002cac <sali+0x9c>)
 8002c74:	781b      	ldrb	r3, [r3, #0]
 8002c76:	2b00      	cmp	r3, #0
 8002c78:	f040 80a8 	bne.w	8002dcc <sali+0x1bc>
			{


		 data5=Flash_Read5(0x080E0000);
 8002c7c:	4804      	ldr	r0, [pc, #16]	; (8002c90 <sali+0x80>)
 8002c7e:	f002 fc7f 	bl	8005580 <Flash_Read5>
 8002c82:	4603      	mov	r3, r0
 8002c84:	4a03      	ldr	r2, [pc, #12]	; (8002c94 <sali+0x84>)
 8002c86:	6013      	str	r3, [r2, #0]
											 					for(int i=0;i<29;i++)
 8002c88:	2300      	movs	r3, #0
 8002c8a:	603b      	str	r3, [r7, #0]
 8002c8c:	e01d      	b.n	8002cca <sali+0xba>
 8002c8e:	bf00      	nop
 8002c90:	080e0000 	.word	0x080e0000
 8002c94:	20000480 	.word	0x20000480
 8002c98:	20000344 	.word	0x20000344
 8002c9c:	2000006c 	.word	0x2000006c
 8002ca0:	20000070 	.word	0x20000070
 8002ca4:	20000074 	.word	0x20000074
 8002ca8:	20000078 	.word	0x20000078
 8002cac:	20000040 	.word	0x20000040
											 							 	{
											 							 	veri5[i]=data5[i];
 8002cb0:	4bbc      	ldr	r3, [pc, #752]	; (8002fa4 <sali+0x394>)
 8002cb2:	681a      	ldr	r2, [r3, #0]
 8002cb4:	683b      	ldr	r3, [r7, #0]
 8002cb6:	009b      	lsls	r3, r3, #2
 8002cb8:	4413      	add	r3, r2
 8002cba:	681a      	ldr	r2, [r3, #0]
 8002cbc:	49ba      	ldr	r1, [pc, #744]	; (8002fa8 <sali+0x398>)
 8002cbe:	683b      	ldr	r3, [r7, #0]
 8002cc0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
											 					for(int i=0;i<29;i++)
 8002cc4:	683b      	ldr	r3, [r7, #0]
 8002cc6:	3301      	adds	r3, #1
 8002cc8:	603b      	str	r3, [r7, #0]
 8002cca:	683b      	ldr	r3, [r7, #0]
 8002ccc:	2b1c      	cmp	r3, #28
 8002cce:	ddef      	ble.n	8002cb0 <sali+0xa0>
											 							 	}



			if(sali_pompa1==0 ){
 8002cd0:	4bb6      	ldr	r3, [pc, #728]	; (8002fac <sali+0x39c>)
 8002cd2:	681b      	ldr	r3, [r3, #0]
 8002cd4:	2b00      	cmp	r3, #0
 8002cd6:	d140      	bne.n	8002d5a <sali+0x14a>


				LCD_Send_String_On_Line1(">>Pmp1 Pasif");
 8002cd8:	48b5      	ldr	r0, [pc, #724]	; (8002fb0 <sali+0x3a0>)
 8002cda:	f7fd fd49 	bl	8000770 <LCD_Send_String_On_Line1>
				LCD_Send_String_On_Line2("Pmp2");
 8002cde:	48b5      	ldr	r0, [pc, #724]	; (8002fb4 <sali+0x3a4>)
 8002ce0:	f7fd fd54 	bl	800078c <LCD_Send_String_On_Line2>



										 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){sali_pompa1=1;veri5[4]=sali_pompa1;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8002ce4:	2110      	movs	r1, #16
 8002ce6:	48b4      	ldr	r0, [pc, #720]	; (8002fb8 <sali+0x3a8>)
 8002ce8:	f004 fa2a 	bl	8007140 <HAL_GPIO_ReadPin>
 8002cec:	4603      	mov	r3, r0
 8002cee:	2b01      	cmp	r3, #1
 8002cf0:	d10e      	bne.n	8002d10 <sali+0x100>
 8002cf2:	4bae      	ldr	r3, [pc, #696]	; (8002fac <sali+0x39c>)
 8002cf4:	2201      	movs	r2, #1
 8002cf6:	601a      	str	r2, [r3, #0]
 8002cf8:	4bac      	ldr	r3, [pc, #688]	; (8002fac <sali+0x39c>)
 8002cfa:	681b      	ldr	r3, [r3, #0]
 8002cfc:	4aaa      	ldr	r2, [pc, #680]	; (8002fa8 <sali+0x398>)
 8002cfe:	6113      	str	r3, [r2, #16]
 8002d00:	221c      	movs	r2, #28
 8002d02:	49a9      	ldr	r1, [pc, #676]	; (8002fa8 <sali+0x398>)
 8002d04:	48ad      	ldr	r0, [pc, #692]	; (8002fbc <sali+0x3ac>)
 8002d06:	f002 fb8b 	bl	8005420 <Flash_Write5>
 8002d0a:	2001      	movs	r0, #1
 8002d0c:	f7fd fc60 	bl	80005d0 <LCD_Send_Cmd>

										 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8002d10:	2180      	movs	r1, #128	; 0x80
 8002d12:	48ab      	ldr	r0, [pc, #684]	; (8002fc0 <sali+0x3b0>)
 8002d14:	f004 fa14 	bl	8007140 <HAL_GPIO_ReadPin>
 8002d18:	4603      	mov	r3, r0
 8002d1a:	2b01      	cmp	r3, #1
 8002d1c:	d105      	bne.n	8002d2a <sali+0x11a>
											 degisken10=1;
 8002d1e:	4ba9      	ldr	r3, [pc, #676]	; (8002fc4 <sali+0x3b4>)
 8002d20:	2201      	movs	r2, #1
 8002d22:	701a      	strb	r2, [r3, #0]
											 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002d24:	2001      	movs	r0, #1
 8002d26:	f7fd fc53 	bl	80005d0 <LCD_Send_Cmd>

										 }
										 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8002d2a:	2120      	movs	r1, #32
 8002d2c:	48a2      	ldr	r0, [pc, #648]	; (8002fb8 <sali+0x3a8>)
 8002d2e:	f004 fa07 	bl	8007140 <HAL_GPIO_ReadPin>
 8002d32:	4603      	mov	r3, r0
 8002d34:	2b01      	cmp	r3, #1
 8002d36:	d104      	bne.n	8002d42 <sali+0x132>
																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002d38:	2001      	movs	r0, #1
 8002d3a:	f7fd fc49 	bl	80005d0 <LCD_Send_Cmd>
																				 					 	 Ayar_Gun();
 8002d3e:	f7fd fe3d 	bl	80009bc <Ayar_Gun>
																				 					                                          }
										 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8002d42:	2120      	movs	r1, #32
 8002d44:	489c      	ldr	r0, [pc, #624]	; (8002fb8 <sali+0x3a8>)
 8002d46:	f004 f9fb 	bl	8007140 <HAL_GPIO_ReadPin>
 8002d4a:	4603      	mov	r3, r0
 8002d4c:	2b01      	cmp	r3, #1
 8002d4e:	d104      	bne.n	8002d5a <sali+0x14a>
																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002d50:	2001      	movs	r0, #1
 8002d52:	f7fd fc3d 	bl	80005d0 <LCD_Send_Cmd>
																				 					 	 Ayar_Gun();
 8002d56:	f7fd fe31 	bl	80009bc <Ayar_Gun>
																				 					                                          }
			}
			if(sali_pompa1==1 ){
 8002d5a:	4b94      	ldr	r3, [pc, #592]	; (8002fac <sali+0x39c>)
 8002d5c:	681b      	ldr	r3, [r3, #0]
 8002d5e:	2b01      	cmp	r3, #1
 8002d60:	d134      	bne.n	8002dcc <sali+0x1bc>
							LCD_Send_String_On_Line1(">>Pmp1 Aktif");
 8002d62:	4899      	ldr	r0, [pc, #612]	; (8002fc8 <sali+0x3b8>)
 8002d64:	f7fd fd04 	bl	8000770 <LCD_Send_String_On_Line1>
							LCD_Send_String_On_Line2("Pmp2");
 8002d68:	4892      	ldr	r0, [pc, #584]	; (8002fb4 <sali+0x3a4>)
 8002d6a:	f7fd fd0f 	bl	800078c <LCD_Send_String_On_Line2>



													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){sali_pompa1=0;veri5[4]=sali_pompa1;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8002d6e:	2110      	movs	r1, #16
 8002d70:	4891      	ldr	r0, [pc, #580]	; (8002fb8 <sali+0x3a8>)
 8002d72:	f004 f9e5 	bl	8007140 <HAL_GPIO_ReadPin>
 8002d76:	4603      	mov	r3, r0
 8002d78:	2b01      	cmp	r3, #1
 8002d7a:	d10e      	bne.n	8002d9a <sali+0x18a>
 8002d7c:	4b8b      	ldr	r3, [pc, #556]	; (8002fac <sali+0x39c>)
 8002d7e:	2200      	movs	r2, #0
 8002d80:	601a      	str	r2, [r3, #0]
 8002d82:	4b8a      	ldr	r3, [pc, #552]	; (8002fac <sali+0x39c>)
 8002d84:	681b      	ldr	r3, [r3, #0]
 8002d86:	4a88      	ldr	r2, [pc, #544]	; (8002fa8 <sali+0x398>)
 8002d88:	6113      	str	r3, [r2, #16]
 8002d8a:	221c      	movs	r2, #28
 8002d8c:	4986      	ldr	r1, [pc, #536]	; (8002fa8 <sali+0x398>)
 8002d8e:	488b      	ldr	r0, [pc, #556]	; (8002fbc <sali+0x3ac>)
 8002d90:	f002 fb46 	bl	8005420 <Flash_Write5>
 8002d94:	2001      	movs	r0, #1
 8002d96:	f7fd fc1b 	bl	80005d0 <LCD_Send_Cmd>

													 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8002d9a:	2180      	movs	r1, #128	; 0x80
 8002d9c:	4888      	ldr	r0, [pc, #544]	; (8002fc0 <sali+0x3b0>)
 8002d9e:	f004 f9cf 	bl	8007140 <HAL_GPIO_ReadPin>
 8002da2:	4603      	mov	r3, r0
 8002da4:	2b01      	cmp	r3, #1
 8002da6:	d105      	bne.n	8002db4 <sali+0x1a4>
														 degisken10=1;
 8002da8:	4b86      	ldr	r3, [pc, #536]	; (8002fc4 <sali+0x3b4>)
 8002daa:	2201      	movs	r2, #1
 8002dac:	701a      	strb	r2, [r3, #0]
														 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002dae:	2001      	movs	r0, #1
 8002db0:	f7fd fc0e 	bl	80005d0 <LCD_Send_Cmd>

													 }
													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8002db4:	2120      	movs	r1, #32
 8002db6:	4880      	ldr	r0, [pc, #512]	; (8002fb8 <sali+0x3a8>)
 8002db8:	f004 f9c2 	bl	8007140 <HAL_GPIO_ReadPin>
 8002dbc:	4603      	mov	r3, r0
 8002dbe:	2b01      	cmp	r3, #1
 8002dc0:	d104      	bne.n	8002dcc <sali+0x1bc>
																							 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002dc2:	2001      	movs	r0, #1
 8002dc4:	f7fd fc04 	bl	80005d0 <LCD_Send_Cmd>
																							 					 	 Ayar_Gun();
 8002dc8:	f7fd fdf8 	bl	80009bc <Ayar_Gun>
						}


			}

	if(degisken10==1)
 8002dcc:	4b7d      	ldr	r3, [pc, #500]	; (8002fc4 <sali+0x3b4>)
 8002dce:	781b      	ldrb	r3, [r3, #0]
 8002dd0:	2b01      	cmp	r3, #1
 8002dd2:	f040 808c 	bne.w	8002eee <sali+0x2de>
				{

				if(sali_pompa2==0 ){
 8002dd6:	4b7d      	ldr	r3, [pc, #500]	; (8002fcc <sali+0x3bc>)
 8002dd8:	681b      	ldr	r3, [r3, #0]
 8002dda:	2b00      	cmp	r3, #0
 8002ddc:	d141      	bne.n	8002e62 <sali+0x252>
					LCD_Send_String_On_Line1("Pmp1");
 8002dde:	487c      	ldr	r0, [pc, #496]	; (8002fd0 <sali+0x3c0>)
 8002de0:	f7fd fcc6 	bl	8000770 <LCD_Send_String_On_Line1>
					LCD_Send_String_On_Line2(">>Pmp2 Pasif");
 8002de4:	487b      	ldr	r0, [pc, #492]	; (8002fd4 <sali+0x3c4>)
 8002de6:	f7fd fcd1 	bl	800078c <LCD_Send_String_On_Line2>



											 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){sali_pompa2=1;veri5[5]=sali_pompa2;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8002dea:	2110      	movs	r1, #16
 8002dec:	4872      	ldr	r0, [pc, #456]	; (8002fb8 <sali+0x3a8>)
 8002dee:	f004 f9a7 	bl	8007140 <HAL_GPIO_ReadPin>
 8002df2:	4603      	mov	r3, r0
 8002df4:	2b01      	cmp	r3, #1
 8002df6:	d10e      	bne.n	8002e16 <sali+0x206>
 8002df8:	4b74      	ldr	r3, [pc, #464]	; (8002fcc <sali+0x3bc>)
 8002dfa:	2201      	movs	r2, #1
 8002dfc:	601a      	str	r2, [r3, #0]
 8002dfe:	4b73      	ldr	r3, [pc, #460]	; (8002fcc <sali+0x3bc>)
 8002e00:	681b      	ldr	r3, [r3, #0]
 8002e02:	4a69      	ldr	r2, [pc, #420]	; (8002fa8 <sali+0x398>)
 8002e04:	6153      	str	r3, [r2, #20]
 8002e06:	221c      	movs	r2, #28
 8002e08:	4967      	ldr	r1, [pc, #412]	; (8002fa8 <sali+0x398>)
 8002e0a:	486c      	ldr	r0, [pc, #432]	; (8002fbc <sali+0x3ac>)
 8002e0c:	f002 fb08 	bl	8005420 <Flash_Write5>
 8002e10:	2001      	movs	r0, #1
 8002e12:	f7fd fbdd 	bl	80005d0 <LCD_Send_Cmd>

											 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8002e16:	2180      	movs	r1, #128	; 0x80
 8002e18:	4869      	ldr	r0, [pc, #420]	; (8002fc0 <sali+0x3b0>)
 8002e1a:	f004 f991 	bl	8007140 <HAL_GPIO_ReadPin>
 8002e1e:	4603      	mov	r3, r0
 8002e20:	2b01      	cmp	r3, #1
 8002e22:	d105      	bne.n	8002e30 <sali+0x220>
												 degisken10=2;
 8002e24:	4b67      	ldr	r3, [pc, #412]	; (8002fc4 <sali+0x3b4>)
 8002e26:	2202      	movs	r2, #2
 8002e28:	701a      	strb	r2, [r3, #0]
												 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002e2a:	2001      	movs	r0, #1
 8002e2c:	f7fd fbd0 	bl	80005d0 <LCD_Send_Cmd>
											 }
											 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8002e30:	2140      	movs	r1, #64	; 0x40
 8002e32:	4863      	ldr	r0, [pc, #396]	; (8002fc0 <sali+0x3b0>)
 8002e34:	f004 f984 	bl	8007140 <HAL_GPIO_ReadPin>
 8002e38:	4603      	mov	r3, r0
 8002e3a:	2b01      	cmp	r3, #1
 8002e3c:	d105      	bne.n	8002e4a <sali+0x23a>
																						 degisken10=1;
 8002e3e:	4b61      	ldr	r3, [pc, #388]	; (8002fc4 <sali+0x3b4>)
 8002e40:	2201      	movs	r2, #1
 8002e42:	701a      	strb	r2, [r3, #0]
																						 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002e44:	2001      	movs	r0, #1
 8002e46:	f7fd fbc3 	bl	80005d0 <LCD_Send_Cmd>
																					 }
											 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8002e4a:	2120      	movs	r1, #32
 8002e4c:	485a      	ldr	r0, [pc, #360]	; (8002fb8 <sali+0x3a8>)
 8002e4e:	f004 f977 	bl	8007140 <HAL_GPIO_ReadPin>
 8002e52:	4603      	mov	r3, r0
 8002e54:	2b01      	cmp	r3, #1
 8002e56:	d104      	bne.n	8002e62 <sali+0x252>
																					 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002e58:	2001      	movs	r0, #1
 8002e5a:	f7fd fbb9 	bl	80005d0 <LCD_Send_Cmd>
																					 					 	 Ayar_Gun();
 8002e5e:	f7fd fdad 	bl	80009bc <Ayar_Gun>
																					 					                                          }
				}
				if(sali_pompa2==1 ){
 8002e62:	4b5a      	ldr	r3, [pc, #360]	; (8002fcc <sali+0x3bc>)
 8002e64:	681b      	ldr	r3, [r3, #0]
 8002e66:	2b01      	cmp	r3, #1
 8002e68:	d141      	bne.n	8002eee <sali+0x2de>
								LCD_Send_String_On_Line1("Pmp1");
 8002e6a:	4859      	ldr	r0, [pc, #356]	; (8002fd0 <sali+0x3c0>)
 8002e6c:	f7fd fc80 	bl	8000770 <LCD_Send_String_On_Line1>
								LCD_Send_String_On_Line2(">>Pmp2 Aktif");
 8002e70:	4859      	ldr	r0, [pc, #356]	; (8002fd8 <sali+0x3c8>)
 8002e72:	f7fd fc8b 	bl	800078c <LCD_Send_String_On_Line2>



														 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){sali_pompa2=0;veri5[5]=sali_pompa2;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8002e76:	2110      	movs	r1, #16
 8002e78:	484f      	ldr	r0, [pc, #316]	; (8002fb8 <sali+0x3a8>)
 8002e7a:	f004 f961 	bl	8007140 <HAL_GPIO_ReadPin>
 8002e7e:	4603      	mov	r3, r0
 8002e80:	2b01      	cmp	r3, #1
 8002e82:	d10e      	bne.n	8002ea2 <sali+0x292>
 8002e84:	4b51      	ldr	r3, [pc, #324]	; (8002fcc <sali+0x3bc>)
 8002e86:	2200      	movs	r2, #0
 8002e88:	601a      	str	r2, [r3, #0]
 8002e8a:	4b50      	ldr	r3, [pc, #320]	; (8002fcc <sali+0x3bc>)
 8002e8c:	681b      	ldr	r3, [r3, #0]
 8002e8e:	4a46      	ldr	r2, [pc, #280]	; (8002fa8 <sali+0x398>)
 8002e90:	6153      	str	r3, [r2, #20]
 8002e92:	221c      	movs	r2, #28
 8002e94:	4944      	ldr	r1, [pc, #272]	; (8002fa8 <sali+0x398>)
 8002e96:	4849      	ldr	r0, [pc, #292]	; (8002fbc <sali+0x3ac>)
 8002e98:	f002 fac2 	bl	8005420 <Flash_Write5>
 8002e9c:	2001      	movs	r0, #1
 8002e9e:	f7fd fb97 	bl	80005d0 <LCD_Send_Cmd>

														 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8002ea2:	2180      	movs	r1, #128	; 0x80
 8002ea4:	4846      	ldr	r0, [pc, #280]	; (8002fc0 <sali+0x3b0>)
 8002ea6:	f004 f94b 	bl	8007140 <HAL_GPIO_ReadPin>
 8002eaa:	4603      	mov	r3, r0
 8002eac:	2b01      	cmp	r3, #1
 8002eae:	d105      	bne.n	8002ebc <sali+0x2ac>
															 degisken10=2;
 8002eb0:	4b44      	ldr	r3, [pc, #272]	; (8002fc4 <sali+0x3b4>)
 8002eb2:	2202      	movs	r2, #2
 8002eb4:	701a      	strb	r2, [r3, #0]
															 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002eb6:	2001      	movs	r0, #1
 8002eb8:	f7fd fb8a 	bl	80005d0 <LCD_Send_Cmd>
														 }
														 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8002ebc:	2140      	movs	r1, #64	; 0x40
 8002ebe:	4840      	ldr	r0, [pc, #256]	; (8002fc0 <sali+0x3b0>)
 8002ec0:	f004 f93e 	bl	8007140 <HAL_GPIO_ReadPin>
 8002ec4:	4603      	mov	r3, r0
 8002ec6:	2b01      	cmp	r3, #1
 8002ec8:	d105      	bne.n	8002ed6 <sali+0x2c6>
															 degisken10=0;
 8002eca:	4b3e      	ldr	r3, [pc, #248]	; (8002fc4 <sali+0x3b4>)
 8002ecc:	2200      	movs	r2, #0
 8002ece:	701a      	strb	r2, [r3, #0]
															LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002ed0:	2001      	movs	r0, #1
 8002ed2:	f7fd fb7d 	bl	80005d0 <LCD_Send_Cmd>
																							}
														 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8002ed6:	2120      	movs	r1, #32
 8002ed8:	4837      	ldr	r0, [pc, #220]	; (8002fb8 <sali+0x3a8>)
 8002eda:	f004 f931 	bl	8007140 <HAL_GPIO_ReadPin>
 8002ede:	4603      	mov	r3, r0
 8002ee0:	2b01      	cmp	r3, #1
 8002ee2:	d104      	bne.n	8002eee <sali+0x2de>
																								 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002ee4:	2001      	movs	r0, #1
 8002ee6:	f7fd fb73 	bl	80005d0 <LCD_Send_Cmd>
																								 					 	 Ayar_Gun();
 8002eea:	f7fd fd67 	bl	80009bc <Ayar_Gun>

				}



	if(degisken10==2)
 8002eee:	4b35      	ldr	r3, [pc, #212]	; (8002fc4 <sali+0x3b4>)
 8002ef0:	781b      	ldrb	r3, [r3, #0]
 8002ef2:	2b02      	cmp	r3, #2
 8002ef4:	f040 80b3 	bne.w	800305e <sali+0x44e>
					{

					if(sali_pompa3==0 ){
 8002ef8:	4b38      	ldr	r3, [pc, #224]	; (8002fdc <sali+0x3cc>)
 8002efa:	681b      	ldr	r3, [r3, #0]
 8002efc:	2b00      	cmp	r3, #0
 8002efe:	d141      	bne.n	8002f84 <sali+0x374>
						LCD_Send_String_On_Line1(">>Pmp3 Pasif");
 8002f00:	4837      	ldr	r0, [pc, #220]	; (8002fe0 <sali+0x3d0>)
 8002f02:	f7fd fc35 	bl	8000770 <LCD_Send_String_On_Line1>
						LCD_Send_String_On_Line2("Pmp4 ");
 8002f06:	4837      	ldr	r0, [pc, #220]	; (8002fe4 <sali+0x3d4>)
 8002f08:	f7fd fc40 	bl	800078c <LCD_Send_String_On_Line2>



												 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){sali_pompa3=1;veri5[6]=sali_pompa3;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8002f0c:	2110      	movs	r1, #16
 8002f0e:	482a      	ldr	r0, [pc, #168]	; (8002fb8 <sali+0x3a8>)
 8002f10:	f004 f916 	bl	8007140 <HAL_GPIO_ReadPin>
 8002f14:	4603      	mov	r3, r0
 8002f16:	2b01      	cmp	r3, #1
 8002f18:	d10e      	bne.n	8002f38 <sali+0x328>
 8002f1a:	4b30      	ldr	r3, [pc, #192]	; (8002fdc <sali+0x3cc>)
 8002f1c:	2201      	movs	r2, #1
 8002f1e:	601a      	str	r2, [r3, #0]
 8002f20:	4b2e      	ldr	r3, [pc, #184]	; (8002fdc <sali+0x3cc>)
 8002f22:	681b      	ldr	r3, [r3, #0]
 8002f24:	4a20      	ldr	r2, [pc, #128]	; (8002fa8 <sali+0x398>)
 8002f26:	6193      	str	r3, [r2, #24]
 8002f28:	221c      	movs	r2, #28
 8002f2a:	491f      	ldr	r1, [pc, #124]	; (8002fa8 <sali+0x398>)
 8002f2c:	4823      	ldr	r0, [pc, #140]	; (8002fbc <sali+0x3ac>)
 8002f2e:	f002 fa77 	bl	8005420 <Flash_Write5>
 8002f32:	2001      	movs	r0, #1
 8002f34:	f7fd fb4c 	bl	80005d0 <LCD_Send_Cmd>

												 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8002f38:	2180      	movs	r1, #128	; 0x80
 8002f3a:	4821      	ldr	r0, [pc, #132]	; (8002fc0 <sali+0x3b0>)
 8002f3c:	f004 f900 	bl	8007140 <HAL_GPIO_ReadPin>
 8002f40:	4603      	mov	r3, r0
 8002f42:	2b01      	cmp	r3, #1
 8002f44:	d105      	bne.n	8002f52 <sali+0x342>
													 degisken10=3;
 8002f46:	4b1f      	ldr	r3, [pc, #124]	; (8002fc4 <sali+0x3b4>)
 8002f48:	2203      	movs	r2, #3
 8002f4a:	701a      	strb	r2, [r3, #0]
													 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002f4c:	2001      	movs	r0, #1
 8002f4e:	f7fd fb3f 	bl	80005d0 <LCD_Send_Cmd>
												 }
												 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8002f52:	2140      	movs	r1, #64	; 0x40
 8002f54:	481a      	ldr	r0, [pc, #104]	; (8002fc0 <sali+0x3b0>)
 8002f56:	f004 f8f3 	bl	8007140 <HAL_GPIO_ReadPin>
 8002f5a:	4603      	mov	r3, r0
 8002f5c:	2b01      	cmp	r3, #1
 8002f5e:	d105      	bne.n	8002f6c <sali+0x35c>
													 degisken10=1;
 8002f60:	4b18      	ldr	r3, [pc, #96]	; (8002fc4 <sali+0x3b4>)
 8002f62:	2201      	movs	r2, #1
 8002f64:	701a      	strb	r2, [r3, #0]
																							 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002f66:	2001      	movs	r0, #1
 8002f68:	f7fd fb32 	bl	80005d0 <LCD_Send_Cmd>
																						 }
												 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8002f6c:	2120      	movs	r1, #32
 8002f6e:	4812      	ldr	r0, [pc, #72]	; (8002fb8 <sali+0x3a8>)
 8002f70:	f004 f8e6 	bl	8007140 <HAL_GPIO_ReadPin>
 8002f74:	4603      	mov	r3, r0
 8002f76:	2b01      	cmp	r3, #1
 8002f78:	d104      	bne.n	8002f84 <sali+0x374>
																						 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8002f7a:	2001      	movs	r0, #1
 8002f7c:	f7fd fb28 	bl	80005d0 <LCD_Send_Cmd>
																						 					 	 Ayar_Gun();
 8002f80:	f7fd fd1c 	bl	80009bc <Ayar_Gun>
																						 					                                          }
					}
					if(sali_pompa3==1 ){
 8002f84:	4b15      	ldr	r3, [pc, #84]	; (8002fdc <sali+0x3cc>)
 8002f86:	681b      	ldr	r3, [r3, #0]
 8002f88:	2b01      	cmp	r3, #1
 8002f8a:	d168      	bne.n	800305e <sali+0x44e>
									LCD_Send_String_On_Line1(">>Pmp3 Aktif");
 8002f8c:	4816      	ldr	r0, [pc, #88]	; (8002fe8 <sali+0x3d8>)
 8002f8e:	f7fd fbef 	bl	8000770 <LCD_Send_String_On_Line1>
									LCD_Send_String_On_Line2("Pmp4");
 8002f92:	4816      	ldr	r0, [pc, #88]	; (8002fec <sali+0x3dc>)
 8002f94:	f7fd fbfa 	bl	800078c <LCD_Send_String_On_Line2>



															 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){sali_pompa3=0;veri5[6]=sali_pompa3;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8002f98:	2110      	movs	r1, #16
 8002f9a:	4807      	ldr	r0, [pc, #28]	; (8002fb8 <sali+0x3a8>)
 8002f9c:	f004 f8d0 	bl	8007140 <HAL_GPIO_ReadPin>
 8002fa0:	4603      	mov	r3, r0
 8002fa2:	e025      	b.n	8002ff0 <sali+0x3e0>
 8002fa4:	20000480 	.word	0x20000480
 8002fa8:	20000144 	.word	0x20000144
 8002fac:	2000006c 	.word	0x2000006c
 8002fb0:	08009004 	.word	0x08009004
 8002fb4:	08009014 	.word	0x08009014
 8002fb8:	40020800 	.word	0x40020800
 8002fbc:	080e0000 	.word	0x080e0000
 8002fc0:	40020000 	.word	0x40020000
 8002fc4:	20000040 	.word	0x20000040
 8002fc8:	0800901c 	.word	0x0800901c
 8002fcc:	20000070 	.word	0x20000070
 8002fd0:	0800902c 	.word	0x0800902c
 8002fd4:	08009034 	.word	0x08009034
 8002fd8:	08009044 	.word	0x08009044
 8002fdc:	20000074 	.word	0x20000074
 8002fe0:	08009054 	.word	0x08009054
 8002fe4:	08009064 	.word	0x08009064
 8002fe8:	0800906c 	.word	0x0800906c
 8002fec:	0800907c 	.word	0x0800907c
 8002ff0:	2b01      	cmp	r3, #1
 8002ff2:	d10e      	bne.n	8003012 <sali+0x402>
 8002ff4:	4b64      	ldr	r3, [pc, #400]	; (8003188 <sali+0x578>)
 8002ff6:	2200      	movs	r2, #0
 8002ff8:	601a      	str	r2, [r3, #0]
 8002ffa:	4b63      	ldr	r3, [pc, #396]	; (8003188 <sali+0x578>)
 8002ffc:	681b      	ldr	r3, [r3, #0]
 8002ffe:	4a63      	ldr	r2, [pc, #396]	; (800318c <sali+0x57c>)
 8003000:	6193      	str	r3, [r2, #24]
 8003002:	221c      	movs	r2, #28
 8003004:	4961      	ldr	r1, [pc, #388]	; (800318c <sali+0x57c>)
 8003006:	4862      	ldr	r0, [pc, #392]	; (8003190 <sali+0x580>)
 8003008:	f002 fa0a 	bl	8005420 <Flash_Write5>
 800300c:	2001      	movs	r0, #1
 800300e:	f7fd fadf 	bl	80005d0 <LCD_Send_Cmd>

															 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8003012:	2180      	movs	r1, #128	; 0x80
 8003014:	485f      	ldr	r0, [pc, #380]	; (8003194 <sali+0x584>)
 8003016:	f004 f893 	bl	8007140 <HAL_GPIO_ReadPin>
 800301a:	4603      	mov	r3, r0
 800301c:	2b01      	cmp	r3, #1
 800301e:	d105      	bne.n	800302c <sali+0x41c>
																 degisken10=3;
 8003020:	4b5d      	ldr	r3, [pc, #372]	; (8003198 <sali+0x588>)
 8003022:	2203      	movs	r2, #3
 8003024:	701a      	strb	r2, [r3, #0]
																 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003026:	2001      	movs	r0, #1
 8003028:	f7fd fad2 	bl	80005d0 <LCD_Send_Cmd>
															 }
															 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 800302c:	2140      	movs	r1, #64	; 0x40
 800302e:	4859      	ldr	r0, [pc, #356]	; (8003194 <sali+0x584>)
 8003030:	f004 f886 	bl	8007140 <HAL_GPIO_ReadPin>
 8003034:	4603      	mov	r3, r0
 8003036:	2b01      	cmp	r3, #1
 8003038:	d105      	bne.n	8003046 <sali+0x436>
																 degisken10=1;
 800303a:	4b57      	ldr	r3, [pc, #348]	; (8003198 <sali+0x588>)
 800303c:	2201      	movs	r2, #1
 800303e:	701a      	strb	r2, [r3, #0]
																LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003040:	2001      	movs	r0, #1
 8003042:	f7fd fac5 	bl	80005d0 <LCD_Send_Cmd>
																								}
															 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8003046:	2120      	movs	r1, #32
 8003048:	4854      	ldr	r0, [pc, #336]	; (800319c <sali+0x58c>)
 800304a:	f004 f879 	bl	8007140 <HAL_GPIO_ReadPin>
 800304e:	4603      	mov	r3, r0
 8003050:	2b01      	cmp	r3, #1
 8003052:	d104      	bne.n	800305e <sali+0x44e>
																									 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003054:	2001      	movs	r0, #1
 8003056:	f7fd fabb 	bl	80005d0 <LCD_Send_Cmd>
																									 					 	 Ayar_Gun();
 800305a:	f7fd fcaf 	bl	80009bc <Ayar_Gun>
																									 					                                          }
								}


					}
	if(degisken10==3)
 800305e:	4b4e      	ldr	r3, [pc, #312]	; (8003198 <sali+0x588>)
 8003060:	781b      	ldrb	r3, [r3, #0]
 8003062:	2b03      	cmp	r3, #3
 8003064:	f47f ae05 	bne.w	8002c72 <sali+0x62>
						{

						if(sali_pompa4==0 ){
 8003068:	4b4d      	ldr	r3, [pc, #308]	; (80031a0 <sali+0x590>)
 800306a:	681b      	ldr	r3, [r3, #0]
 800306c:	2b00      	cmp	r3, #0
 800306e:	d141      	bne.n	80030f4 <sali+0x4e4>
							LCD_Send_String_On_Line1("Pmp3");
 8003070:	484c      	ldr	r0, [pc, #304]	; (80031a4 <sali+0x594>)
 8003072:	f7fd fb7d 	bl	8000770 <LCD_Send_String_On_Line1>
							LCD_Send_String_On_Line2(">>Pmp4 Pasif ");
 8003076:	484c      	ldr	r0, [pc, #304]	; (80031a8 <sali+0x598>)
 8003078:	f7fd fb88 	bl	800078c <LCD_Send_String_On_Line2>



													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){sali_pompa4=1;veri5[7]=sali_pompa4;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 800307c:	2110      	movs	r1, #16
 800307e:	4847      	ldr	r0, [pc, #284]	; (800319c <sali+0x58c>)
 8003080:	f004 f85e 	bl	8007140 <HAL_GPIO_ReadPin>
 8003084:	4603      	mov	r3, r0
 8003086:	2b01      	cmp	r3, #1
 8003088:	d10e      	bne.n	80030a8 <sali+0x498>
 800308a:	4b45      	ldr	r3, [pc, #276]	; (80031a0 <sali+0x590>)
 800308c:	2201      	movs	r2, #1
 800308e:	601a      	str	r2, [r3, #0]
 8003090:	4b43      	ldr	r3, [pc, #268]	; (80031a0 <sali+0x590>)
 8003092:	681b      	ldr	r3, [r3, #0]
 8003094:	4a3d      	ldr	r2, [pc, #244]	; (800318c <sali+0x57c>)
 8003096:	61d3      	str	r3, [r2, #28]
 8003098:	221c      	movs	r2, #28
 800309a:	493c      	ldr	r1, [pc, #240]	; (800318c <sali+0x57c>)
 800309c:	483c      	ldr	r0, [pc, #240]	; (8003190 <sali+0x580>)
 800309e:	f002 f9bf 	bl	8005420 <Flash_Write5>
 80030a2:	2001      	movs	r0, #1
 80030a4:	f7fd fa94 	bl	80005d0 <LCD_Send_Cmd>

													 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 80030a8:	2180      	movs	r1, #128	; 0x80
 80030aa:	483a      	ldr	r0, [pc, #232]	; (8003194 <sali+0x584>)
 80030ac:	f004 f848 	bl	8007140 <HAL_GPIO_ReadPin>
 80030b0:	4603      	mov	r3, r0
 80030b2:	2b01      	cmp	r3, #1
 80030b4:	d105      	bne.n	80030c2 <sali+0x4b2>
														 degisken10=0;
 80030b6:	4b38      	ldr	r3, [pc, #224]	; (8003198 <sali+0x588>)
 80030b8:	2200      	movs	r2, #0
 80030ba:	701a      	strb	r2, [r3, #0]
														 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80030bc:	2001      	movs	r0, #1
 80030be:	f7fd fa87 	bl	80005d0 <LCD_Send_Cmd>
													 }
													 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 80030c2:	2140      	movs	r1, #64	; 0x40
 80030c4:	4833      	ldr	r0, [pc, #204]	; (8003194 <sali+0x584>)
 80030c6:	f004 f83b 	bl	8007140 <HAL_GPIO_ReadPin>
 80030ca:	4603      	mov	r3, r0
 80030cc:	2b01      	cmp	r3, #1
 80030ce:	d105      	bne.n	80030dc <sali+0x4cc>
														 degisken10=2;
 80030d0:	4b31      	ldr	r3, [pc, #196]	; (8003198 <sali+0x588>)
 80030d2:	2202      	movs	r2, #2
 80030d4:	701a      	strb	r2, [r3, #0]
																								 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80030d6:	2001      	movs	r0, #1
 80030d8:	f7fd fa7a 	bl	80005d0 <LCD_Send_Cmd>
																							 }
													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 80030dc:	2120      	movs	r1, #32
 80030de:	482f      	ldr	r0, [pc, #188]	; (800319c <sali+0x58c>)
 80030e0:	f004 f82e 	bl	8007140 <HAL_GPIO_ReadPin>
 80030e4:	4603      	mov	r3, r0
 80030e6:	2b01      	cmp	r3, #1
 80030e8:	d104      	bne.n	80030f4 <sali+0x4e4>
																							 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80030ea:	2001      	movs	r0, #1
 80030ec:	f7fd fa70 	bl	80005d0 <LCD_Send_Cmd>
																							 					 	 Ayar_Gun();
 80030f0:	f7fd fc64 	bl	80009bc <Ayar_Gun>
																							 					                                          }
						}
						if(sali_pompa4==1 ){
 80030f4:	4b2a      	ldr	r3, [pc, #168]	; (80031a0 <sali+0x590>)
 80030f6:	681b      	ldr	r3, [r3, #0]
 80030f8:	2b01      	cmp	r3, #1
 80030fa:	f47f adba 	bne.w	8002c72 <sali+0x62>
										LCD_Send_String_On_Line1("Pmp3");
 80030fe:	4829      	ldr	r0, [pc, #164]	; (80031a4 <sali+0x594>)
 8003100:	f7fd fb36 	bl	8000770 <LCD_Send_String_On_Line1>
										LCD_Send_String_On_Line2(">>Pmp4 Aktif");
 8003104:	4829      	ldr	r0, [pc, #164]	; (80031ac <sali+0x59c>)
 8003106:	f7fd fb41 	bl	800078c <LCD_Send_String_On_Line2>



																 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){sali_pompa4=0;veri5[7]=sali_pompa4;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 800310a:	2110      	movs	r1, #16
 800310c:	4823      	ldr	r0, [pc, #140]	; (800319c <sali+0x58c>)
 800310e:	f004 f817 	bl	8007140 <HAL_GPIO_ReadPin>
 8003112:	4603      	mov	r3, r0
 8003114:	2b01      	cmp	r3, #1
 8003116:	d10e      	bne.n	8003136 <sali+0x526>
 8003118:	4b21      	ldr	r3, [pc, #132]	; (80031a0 <sali+0x590>)
 800311a:	2200      	movs	r2, #0
 800311c:	601a      	str	r2, [r3, #0]
 800311e:	4b20      	ldr	r3, [pc, #128]	; (80031a0 <sali+0x590>)
 8003120:	681b      	ldr	r3, [r3, #0]
 8003122:	4a1a      	ldr	r2, [pc, #104]	; (800318c <sali+0x57c>)
 8003124:	61d3      	str	r3, [r2, #28]
 8003126:	221c      	movs	r2, #28
 8003128:	4918      	ldr	r1, [pc, #96]	; (800318c <sali+0x57c>)
 800312a:	4819      	ldr	r0, [pc, #100]	; (8003190 <sali+0x580>)
 800312c:	f002 f978 	bl	8005420 <Flash_Write5>
 8003130:	2001      	movs	r0, #1
 8003132:	f7fd fa4d 	bl	80005d0 <LCD_Send_Cmd>

																 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8003136:	2180      	movs	r1, #128	; 0x80
 8003138:	4816      	ldr	r0, [pc, #88]	; (8003194 <sali+0x584>)
 800313a:	f004 f801 	bl	8007140 <HAL_GPIO_ReadPin>
 800313e:	4603      	mov	r3, r0
 8003140:	2b01      	cmp	r3, #1
 8003142:	d105      	bne.n	8003150 <sali+0x540>
																	 degisken10=0;
 8003144:	4b14      	ldr	r3, [pc, #80]	; (8003198 <sali+0x588>)
 8003146:	2200      	movs	r2, #0
 8003148:	701a      	strb	r2, [r3, #0]
																	 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800314a:	2001      	movs	r0, #1
 800314c:	f7fd fa40 	bl	80005d0 <LCD_Send_Cmd>
																 }
																 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8003150:	2140      	movs	r1, #64	; 0x40
 8003152:	4810      	ldr	r0, [pc, #64]	; (8003194 <sali+0x584>)
 8003154:	f003 fff4 	bl	8007140 <HAL_GPIO_ReadPin>
 8003158:	4603      	mov	r3, r0
 800315a:	2b01      	cmp	r3, #1
 800315c:	d105      	bne.n	800316a <sali+0x55a>
																	 degisken10=2;
 800315e:	4b0e      	ldr	r3, [pc, #56]	; (8003198 <sali+0x588>)
 8003160:	2202      	movs	r2, #2
 8003162:	701a      	strb	r2, [r3, #0]
																	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003164:	2001      	movs	r0, #1
 8003166:	f7fd fa33 	bl	80005d0 <LCD_Send_Cmd>
																									}
																 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 800316a:	2120      	movs	r1, #32
 800316c:	480b      	ldr	r0, [pc, #44]	; (800319c <sali+0x58c>)
 800316e:	f003 ffe7 	bl	8007140 <HAL_GPIO_ReadPin>
 8003172:	4603      	mov	r3, r0
 8003174:	2b01      	cmp	r3, #1
 8003176:	f47f ad7c 	bne.w	8002c72 <sali+0x62>
																										 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800317a:	2001      	movs	r0, #1
 800317c:	f7fd fa28 	bl	80005d0 <LCD_Send_Cmd>
																										 					 	 Ayar_Gun();
 8003180:	f7fd fc1c 	bl	80009bc <Ayar_Gun>
	if(degisken10==0)
 8003184:	e575      	b.n	8002c72 <sali+0x62>
 8003186:	bf00      	nop
 8003188:	20000074 	.word	0x20000074
 800318c:	20000144 	.word	0x20000144
 8003190:	080e0000 	.word	0x080e0000
 8003194:	40020000 	.word	0x40020000
 8003198:	20000040 	.word	0x20000040
 800319c:	40020800 	.word	0x40020800
 80031a0:	20000078 	.word	0x20000078
 80031a4:	08009084 	.word	0x08009084
 80031a8:	0800908c 	.word	0x0800908c
 80031ac:	0800909c 	.word	0x0800909c

080031b0 <carsamba>:
						}


}
 }
void carsamba(){
 80031b0:	b580      	push	{r7, lr}
 80031b2:	b082      	sub	sp, #8
 80031b4:	af00      	add	r7, sp, #0
// BURAYA SETLEYİP SIFIR YAPMAMIZ GEREK PAZARTESİ POMPA 1 DEĞERİ İÇİN


	 data5=Flash_Read5(0x080E0000);
 80031b6:	4826      	ldr	r0, [pc, #152]	; (8003250 <carsamba+0xa0>)
 80031b8:	f002 f9e2 	bl	8005580 <Flash_Read5>
 80031bc:	4603      	mov	r3, r0
 80031be:	4a25      	ldr	r2, [pc, #148]	; (8003254 <carsamba+0xa4>)
 80031c0:	6013      	str	r3, [r2, #0]
			 		 	                         for(int i=0;i<30;i++){
 80031c2:	2300      	movs	r3, #0
 80031c4:	607b      	str	r3, [r7, #4]
 80031c6:	e00c      	b.n	80031e2 <carsamba+0x32>

			 		 	    	 								 		  read5[i]=data5[i];
 80031c8:	4b22      	ldr	r3, [pc, #136]	; (8003254 <carsamba+0xa4>)
 80031ca:	681a      	ldr	r2, [r3, #0]
 80031cc:	687b      	ldr	r3, [r7, #4]
 80031ce:	009b      	lsls	r3, r3, #2
 80031d0:	4413      	add	r3, r2
 80031d2:	681a      	ldr	r2, [r3, #0]
 80031d4:	4920      	ldr	r1, [pc, #128]	; (8003258 <carsamba+0xa8>)
 80031d6:	687b      	ldr	r3, [r7, #4]
 80031d8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
			 		 	                         for(int i=0;i<30;i++){
 80031dc:	687b      	ldr	r3, [r7, #4]
 80031de:	3301      	adds	r3, #1
 80031e0:	607b      	str	r3, [r7, #4]
 80031e2:	687b      	ldr	r3, [r7, #4]
 80031e4:	2b1d      	cmp	r3, #29
 80031e6:	ddef      	ble.n	80031c8 <carsamba+0x18>
			 		 	    	 								 	   }


			 		 	                       carsamba_pompa1=read5[8];
 80031e8:	4b1b      	ldr	r3, [pc, #108]	; (8003258 <carsamba+0xa8>)
 80031ea:	6a1b      	ldr	r3, [r3, #32]
 80031ec:	4a1b      	ldr	r2, [pc, #108]	; (800325c <carsamba+0xac>)
 80031ee:	6013      	str	r3, [r2, #0]
			 		 	                       carsamba_pompa2=read5[9];
 80031f0:	4b19      	ldr	r3, [pc, #100]	; (8003258 <carsamba+0xa8>)
 80031f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80031f4:	4a1a      	ldr	r2, [pc, #104]	; (8003260 <carsamba+0xb0>)
 80031f6:	6013      	str	r3, [r2, #0]
			 		 	                       carsamba_pompa3=read5[10];
 80031f8:	4b17      	ldr	r3, [pc, #92]	; (8003258 <carsamba+0xa8>)
 80031fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80031fc:	4a19      	ldr	r2, [pc, #100]	; (8003264 <carsamba+0xb4>)
 80031fe:	6013      	str	r3, [r2, #0]
			 		 	                       carsamba_pompa4=read5[11];
 8003200:	4b15      	ldr	r3, [pc, #84]	; (8003258 <carsamba+0xa8>)
 8003202:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003204:	4a18      	ldr	r2, [pc, #96]	; (8003268 <carsamba+0xb8>)
 8003206:	6013      	str	r3, [r2, #0]
			 		 	                     pazartesi_pompa1=read5[0];
 8003208:	4b13      	ldr	r3, [pc, #76]	; (8003258 <carsamba+0xa8>)
 800320a:	681b      	ldr	r3, [r3, #0]
 800320c:	4a17      	ldr	r2, [pc, #92]	; (800326c <carsamba+0xbc>)
 800320e:	6013      	str	r3, [r2, #0]
			 		 	                     			 		 	                       pazartesi_pompa2=read5[1];
 8003210:	4b11      	ldr	r3, [pc, #68]	; (8003258 <carsamba+0xa8>)
 8003212:	685b      	ldr	r3, [r3, #4]
 8003214:	4a16      	ldr	r2, [pc, #88]	; (8003270 <carsamba+0xc0>)
 8003216:	6013      	str	r3, [r2, #0]
			 		 	                     			 		 	                       pazartesi_pompa3=read5[2];
 8003218:	4b0f      	ldr	r3, [pc, #60]	; (8003258 <carsamba+0xa8>)
 800321a:	689b      	ldr	r3, [r3, #8]
 800321c:	4a15      	ldr	r2, [pc, #84]	; (8003274 <carsamba+0xc4>)
 800321e:	6013      	str	r3, [r2, #0]
			 		 	                     			 		 	                       pazartesi_pompa4=read5[3];
 8003220:	4b0d      	ldr	r3, [pc, #52]	; (8003258 <carsamba+0xa8>)
 8003222:	68db      	ldr	r3, [r3, #12]
 8003224:	4a14      	ldr	r2, [pc, #80]	; (8003278 <carsamba+0xc8>)
 8003226:	6013      	str	r3, [r2, #0]
		 		 	                           Flash_Write5(0x080E0000,read5,30);
 8003228:	221e      	movs	r2, #30
 800322a:	490b      	ldr	r1, [pc, #44]	; (8003258 <carsamba+0xa8>)
 800322c:	4808      	ldr	r0, [pc, #32]	; (8003250 <carsamba+0xa0>)
 800322e:	f002 f8f7 	bl	8005420 <Flash_Write5>



while(1){
	if(degisken11==0)
 8003232:	4b12      	ldr	r3, [pc, #72]	; (800327c <carsamba+0xcc>)
 8003234:	781b      	ldrb	r3, [r3, #0]
 8003236:	2b00      	cmp	r3, #0
 8003238:	f040 80a4 	bne.w	8003384 <carsamba+0x1d4>
			{
				 data5=Flash_Read5(0x080E0000);
 800323c:	4804      	ldr	r0, [pc, #16]	; (8003250 <carsamba+0xa0>)
 800323e:	f002 f99f 	bl	8005580 <Flash_Read5>
 8003242:	4603      	mov	r3, r0
 8003244:	4a03      	ldr	r2, [pc, #12]	; (8003254 <carsamba+0xa4>)
 8003246:	6013      	str	r3, [r2, #0]
				 for(int i=0;i<29;i++)
 8003248:	2300      	movs	r3, #0
 800324a:	603b      	str	r3, [r7, #0]
 800324c:	e025      	b.n	800329a <carsamba+0xea>
 800324e:	bf00      	nop
 8003250:	080e0000 	.word	0x080e0000
 8003254:	20000480 	.word	0x20000480
 8003258:	20000344 	.word	0x20000344
 800325c:	2000007c 	.word	0x2000007c
 8003260:	20000080 	.word	0x20000080
 8003264:	20000084 	.word	0x20000084
 8003268:	20000088 	.word	0x20000088
 800326c:	2000005c 	.word	0x2000005c
 8003270:	20000060 	.word	0x20000060
 8003274:	20000064 	.word	0x20000064
 8003278:	20000068 	.word	0x20000068
 800327c:	20000041 	.word	0x20000041
				 											 							 	{
				 											 							 	veri5[i]=data5[i];
 8003280:	4bba      	ldr	r3, [pc, #744]	; (800356c <carsamba+0x3bc>)
 8003282:	681a      	ldr	r2, [r3, #0]
 8003284:	683b      	ldr	r3, [r7, #0]
 8003286:	009b      	lsls	r3, r3, #2
 8003288:	4413      	add	r3, r2
 800328a:	681a      	ldr	r2, [r3, #0]
 800328c:	49b8      	ldr	r1, [pc, #736]	; (8003570 <carsamba+0x3c0>)
 800328e:	683b      	ldr	r3, [r7, #0]
 8003290:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
				 for(int i=0;i<29;i++)
 8003294:	683b      	ldr	r3, [r7, #0]
 8003296:	3301      	adds	r3, #1
 8003298:	603b      	str	r3, [r7, #0]
 800329a:	683b      	ldr	r3, [r7, #0]
 800329c:	2b1c      	cmp	r3, #28
 800329e:	ddef      	ble.n	8003280 <carsamba+0xd0>
				 											 							 	}



			if(carsamba_pompa1==0 ){
 80032a0:	4bb4      	ldr	r3, [pc, #720]	; (8003574 <carsamba+0x3c4>)
 80032a2:	681b      	ldr	r3, [r3, #0]
 80032a4:	2b00      	cmp	r3, #0
 80032a6:	d134      	bne.n	8003312 <carsamba+0x162>
				LCD_Send_String_On_Line1(">>Pmp1 Pasif");
 80032a8:	48b3      	ldr	r0, [pc, #716]	; (8003578 <carsamba+0x3c8>)
 80032aa:	f7fd fa61 	bl	8000770 <LCD_Send_String_On_Line1>
				LCD_Send_String_On_Line2("Pmp2");
 80032ae:	48b3      	ldr	r0, [pc, #716]	; (800357c <carsamba+0x3cc>)
 80032b0:	f7fd fa6c 	bl	800078c <LCD_Send_String_On_Line2>



										 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){carsamba_pompa1=1;veri5[8]=carsamba_pompa1;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 80032b4:	2110      	movs	r1, #16
 80032b6:	48b2      	ldr	r0, [pc, #712]	; (8003580 <carsamba+0x3d0>)
 80032b8:	f003 ff42 	bl	8007140 <HAL_GPIO_ReadPin>
 80032bc:	4603      	mov	r3, r0
 80032be:	2b01      	cmp	r3, #1
 80032c0:	d10e      	bne.n	80032e0 <carsamba+0x130>
 80032c2:	4bac      	ldr	r3, [pc, #688]	; (8003574 <carsamba+0x3c4>)
 80032c4:	2201      	movs	r2, #1
 80032c6:	601a      	str	r2, [r3, #0]
 80032c8:	4baa      	ldr	r3, [pc, #680]	; (8003574 <carsamba+0x3c4>)
 80032ca:	681b      	ldr	r3, [r3, #0]
 80032cc:	4aa8      	ldr	r2, [pc, #672]	; (8003570 <carsamba+0x3c0>)
 80032ce:	6213      	str	r3, [r2, #32]
 80032d0:	221c      	movs	r2, #28
 80032d2:	49a7      	ldr	r1, [pc, #668]	; (8003570 <carsamba+0x3c0>)
 80032d4:	48ab      	ldr	r0, [pc, #684]	; (8003584 <carsamba+0x3d4>)
 80032d6:	f002 f8a3 	bl	8005420 <Flash_Write5>
 80032da:	2001      	movs	r0, #1
 80032dc:	f7fd f978 	bl	80005d0 <LCD_Send_Cmd>

										 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 80032e0:	2180      	movs	r1, #128	; 0x80
 80032e2:	48a9      	ldr	r0, [pc, #676]	; (8003588 <carsamba+0x3d8>)
 80032e4:	f003 ff2c 	bl	8007140 <HAL_GPIO_ReadPin>
 80032e8:	4603      	mov	r3, r0
 80032ea:	2b01      	cmp	r3, #1
 80032ec:	d105      	bne.n	80032fa <carsamba+0x14a>
											 degisken11=1;
 80032ee:	4ba7      	ldr	r3, [pc, #668]	; (800358c <carsamba+0x3dc>)
 80032f0:	2201      	movs	r2, #1
 80032f2:	701a      	strb	r2, [r3, #0]
											 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80032f4:	2001      	movs	r0, #1
 80032f6:	f7fd f96b 	bl	80005d0 <LCD_Send_Cmd>

										 }
										 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 80032fa:	2120      	movs	r1, #32
 80032fc:	48a0      	ldr	r0, [pc, #640]	; (8003580 <carsamba+0x3d0>)
 80032fe:	f003 ff1f 	bl	8007140 <HAL_GPIO_ReadPin>
 8003302:	4603      	mov	r3, r0
 8003304:	2b01      	cmp	r3, #1
 8003306:	d104      	bne.n	8003312 <carsamba+0x162>
																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003308:	2001      	movs	r0, #1
 800330a:	f7fd f961 	bl	80005d0 <LCD_Send_Cmd>
																				 					 	 Ayar_Gun();
 800330e:	f7fd fb55 	bl	80009bc <Ayar_Gun>
																				 					                                          }

			}
			if(carsamba_pompa1==1 ){
 8003312:	4b98      	ldr	r3, [pc, #608]	; (8003574 <carsamba+0x3c4>)
 8003314:	681b      	ldr	r3, [r3, #0]
 8003316:	2b01      	cmp	r3, #1
 8003318:	d134      	bne.n	8003384 <carsamba+0x1d4>
							LCD_Send_String_On_Line1(">>Pmp1 Aktif");
 800331a:	489d      	ldr	r0, [pc, #628]	; (8003590 <carsamba+0x3e0>)
 800331c:	f7fd fa28 	bl	8000770 <LCD_Send_String_On_Line1>
							LCD_Send_String_On_Line2("Pmp2");
 8003320:	4896      	ldr	r0, [pc, #600]	; (800357c <carsamba+0x3cc>)
 8003322:	f7fd fa33 	bl	800078c <LCD_Send_String_On_Line2>



													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){carsamba_pompa1=0;veri5[8]=carsamba_pompa1;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8003326:	2110      	movs	r1, #16
 8003328:	4895      	ldr	r0, [pc, #596]	; (8003580 <carsamba+0x3d0>)
 800332a:	f003 ff09 	bl	8007140 <HAL_GPIO_ReadPin>
 800332e:	4603      	mov	r3, r0
 8003330:	2b01      	cmp	r3, #1
 8003332:	d10e      	bne.n	8003352 <carsamba+0x1a2>
 8003334:	4b8f      	ldr	r3, [pc, #572]	; (8003574 <carsamba+0x3c4>)
 8003336:	2200      	movs	r2, #0
 8003338:	601a      	str	r2, [r3, #0]
 800333a:	4b8e      	ldr	r3, [pc, #568]	; (8003574 <carsamba+0x3c4>)
 800333c:	681b      	ldr	r3, [r3, #0]
 800333e:	4a8c      	ldr	r2, [pc, #560]	; (8003570 <carsamba+0x3c0>)
 8003340:	6213      	str	r3, [r2, #32]
 8003342:	221c      	movs	r2, #28
 8003344:	498a      	ldr	r1, [pc, #552]	; (8003570 <carsamba+0x3c0>)
 8003346:	488f      	ldr	r0, [pc, #572]	; (8003584 <carsamba+0x3d4>)
 8003348:	f002 f86a 	bl	8005420 <Flash_Write5>
 800334c:	2001      	movs	r0, #1
 800334e:	f7fd f93f 	bl	80005d0 <LCD_Send_Cmd>

													 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8003352:	2180      	movs	r1, #128	; 0x80
 8003354:	488c      	ldr	r0, [pc, #560]	; (8003588 <carsamba+0x3d8>)
 8003356:	f003 fef3 	bl	8007140 <HAL_GPIO_ReadPin>
 800335a:	4603      	mov	r3, r0
 800335c:	2b01      	cmp	r3, #1
 800335e:	d105      	bne.n	800336c <carsamba+0x1bc>
														 degisken11=1;
 8003360:	4b8a      	ldr	r3, [pc, #552]	; (800358c <carsamba+0x3dc>)
 8003362:	2201      	movs	r2, #1
 8003364:	701a      	strb	r2, [r3, #0]
														 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003366:	2001      	movs	r0, #1
 8003368:	f7fd f932 	bl	80005d0 <LCD_Send_Cmd>

													 }
													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 800336c:	2120      	movs	r1, #32
 800336e:	4884      	ldr	r0, [pc, #528]	; (8003580 <carsamba+0x3d0>)
 8003370:	f003 fee6 	bl	8007140 <HAL_GPIO_ReadPin>
 8003374:	4603      	mov	r3, r0
 8003376:	2b01      	cmp	r3, #1
 8003378:	d104      	bne.n	8003384 <carsamba+0x1d4>
																							 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800337a:	2001      	movs	r0, #1
 800337c:	f7fd f928 	bl	80005d0 <LCD_Send_Cmd>
																							 					 	 Ayar_Gun();
 8003380:	f7fd fb1c 	bl	80009bc <Ayar_Gun>
						}


			}

	if(degisken11==1)
 8003384:	4b81      	ldr	r3, [pc, #516]	; (800358c <carsamba+0x3dc>)
 8003386:	781b      	ldrb	r3, [r3, #0]
 8003388:	2b01      	cmp	r3, #1
 800338a:	f040 808c 	bne.w	80034a6 <carsamba+0x2f6>
				{

				if(carsamba_pompa2==0 ){
 800338e:	4b81      	ldr	r3, [pc, #516]	; (8003594 <carsamba+0x3e4>)
 8003390:	681b      	ldr	r3, [r3, #0]
 8003392:	2b00      	cmp	r3, #0
 8003394:	d141      	bne.n	800341a <carsamba+0x26a>
					LCD_Send_String_On_Line1("Pmp1");
 8003396:	4880      	ldr	r0, [pc, #512]	; (8003598 <carsamba+0x3e8>)
 8003398:	f7fd f9ea 	bl	8000770 <LCD_Send_String_On_Line1>
					LCD_Send_String_On_Line2(">>Pmp2 Pasif");
 800339c:	487f      	ldr	r0, [pc, #508]	; (800359c <carsamba+0x3ec>)
 800339e:	f7fd f9f5 	bl	800078c <LCD_Send_String_On_Line2>



											 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){carsamba_pompa2=1;veri5[9]=carsamba_pompa2;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 80033a2:	2110      	movs	r1, #16
 80033a4:	4876      	ldr	r0, [pc, #472]	; (8003580 <carsamba+0x3d0>)
 80033a6:	f003 fecb 	bl	8007140 <HAL_GPIO_ReadPin>
 80033aa:	4603      	mov	r3, r0
 80033ac:	2b01      	cmp	r3, #1
 80033ae:	d10e      	bne.n	80033ce <carsamba+0x21e>
 80033b0:	4b78      	ldr	r3, [pc, #480]	; (8003594 <carsamba+0x3e4>)
 80033b2:	2201      	movs	r2, #1
 80033b4:	601a      	str	r2, [r3, #0]
 80033b6:	4b77      	ldr	r3, [pc, #476]	; (8003594 <carsamba+0x3e4>)
 80033b8:	681b      	ldr	r3, [r3, #0]
 80033ba:	4a6d      	ldr	r2, [pc, #436]	; (8003570 <carsamba+0x3c0>)
 80033bc:	6253      	str	r3, [r2, #36]	; 0x24
 80033be:	221c      	movs	r2, #28
 80033c0:	496b      	ldr	r1, [pc, #428]	; (8003570 <carsamba+0x3c0>)
 80033c2:	4870      	ldr	r0, [pc, #448]	; (8003584 <carsamba+0x3d4>)
 80033c4:	f002 f82c 	bl	8005420 <Flash_Write5>
 80033c8:	2001      	movs	r0, #1
 80033ca:	f7fd f901 	bl	80005d0 <LCD_Send_Cmd>

											 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 80033ce:	2180      	movs	r1, #128	; 0x80
 80033d0:	486d      	ldr	r0, [pc, #436]	; (8003588 <carsamba+0x3d8>)
 80033d2:	f003 feb5 	bl	8007140 <HAL_GPIO_ReadPin>
 80033d6:	4603      	mov	r3, r0
 80033d8:	2b01      	cmp	r3, #1
 80033da:	d105      	bne.n	80033e8 <carsamba+0x238>
												 degisken11=2;
 80033dc:	4b6b      	ldr	r3, [pc, #428]	; (800358c <carsamba+0x3dc>)
 80033de:	2202      	movs	r2, #2
 80033e0:	701a      	strb	r2, [r3, #0]
												 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80033e2:	2001      	movs	r0, #1
 80033e4:	f7fd f8f4 	bl	80005d0 <LCD_Send_Cmd>
											 }
											 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 80033e8:	2140      	movs	r1, #64	; 0x40
 80033ea:	4867      	ldr	r0, [pc, #412]	; (8003588 <carsamba+0x3d8>)
 80033ec:	f003 fea8 	bl	8007140 <HAL_GPIO_ReadPin>
 80033f0:	4603      	mov	r3, r0
 80033f2:	2b01      	cmp	r3, #1
 80033f4:	d105      	bne.n	8003402 <carsamba+0x252>
																						 degisken11=1;
 80033f6:	4b65      	ldr	r3, [pc, #404]	; (800358c <carsamba+0x3dc>)
 80033f8:	2201      	movs	r2, #1
 80033fa:	701a      	strb	r2, [r3, #0]
																						 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80033fc:	2001      	movs	r0, #1
 80033fe:	f7fd f8e7 	bl	80005d0 <LCD_Send_Cmd>
																					 }
											 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8003402:	2120      	movs	r1, #32
 8003404:	485e      	ldr	r0, [pc, #376]	; (8003580 <carsamba+0x3d0>)
 8003406:	f003 fe9b 	bl	8007140 <HAL_GPIO_ReadPin>
 800340a:	4603      	mov	r3, r0
 800340c:	2b01      	cmp	r3, #1
 800340e:	d104      	bne.n	800341a <carsamba+0x26a>
																					 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003410:	2001      	movs	r0, #1
 8003412:	f7fd f8dd 	bl	80005d0 <LCD_Send_Cmd>
																					 					 	 Ayar_Gun();
 8003416:	f7fd fad1 	bl	80009bc <Ayar_Gun>
																					 					                                          }
				}
				if(carsamba_pompa2==1 ){
 800341a:	4b5e      	ldr	r3, [pc, #376]	; (8003594 <carsamba+0x3e4>)
 800341c:	681b      	ldr	r3, [r3, #0]
 800341e:	2b01      	cmp	r3, #1
 8003420:	d141      	bne.n	80034a6 <carsamba+0x2f6>
								LCD_Send_String_On_Line1("Pmp1");
 8003422:	485d      	ldr	r0, [pc, #372]	; (8003598 <carsamba+0x3e8>)
 8003424:	f7fd f9a4 	bl	8000770 <LCD_Send_String_On_Line1>
								LCD_Send_String_On_Line2(">>Pmp2 Aktif");
 8003428:	485d      	ldr	r0, [pc, #372]	; (80035a0 <carsamba+0x3f0>)
 800342a:	f7fd f9af 	bl	800078c <LCD_Send_String_On_Line2>



														 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){carsamba_pompa2=0;veri5[9]=carsamba_pompa2;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 800342e:	2110      	movs	r1, #16
 8003430:	4853      	ldr	r0, [pc, #332]	; (8003580 <carsamba+0x3d0>)
 8003432:	f003 fe85 	bl	8007140 <HAL_GPIO_ReadPin>
 8003436:	4603      	mov	r3, r0
 8003438:	2b01      	cmp	r3, #1
 800343a:	d10e      	bne.n	800345a <carsamba+0x2aa>
 800343c:	4b55      	ldr	r3, [pc, #340]	; (8003594 <carsamba+0x3e4>)
 800343e:	2200      	movs	r2, #0
 8003440:	601a      	str	r2, [r3, #0]
 8003442:	4b54      	ldr	r3, [pc, #336]	; (8003594 <carsamba+0x3e4>)
 8003444:	681b      	ldr	r3, [r3, #0]
 8003446:	4a4a      	ldr	r2, [pc, #296]	; (8003570 <carsamba+0x3c0>)
 8003448:	6253      	str	r3, [r2, #36]	; 0x24
 800344a:	221c      	movs	r2, #28
 800344c:	4948      	ldr	r1, [pc, #288]	; (8003570 <carsamba+0x3c0>)
 800344e:	484d      	ldr	r0, [pc, #308]	; (8003584 <carsamba+0x3d4>)
 8003450:	f001 ffe6 	bl	8005420 <Flash_Write5>
 8003454:	2001      	movs	r0, #1
 8003456:	f7fd f8bb 	bl	80005d0 <LCD_Send_Cmd>

														 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 800345a:	2180      	movs	r1, #128	; 0x80
 800345c:	484a      	ldr	r0, [pc, #296]	; (8003588 <carsamba+0x3d8>)
 800345e:	f003 fe6f 	bl	8007140 <HAL_GPIO_ReadPin>
 8003462:	4603      	mov	r3, r0
 8003464:	2b01      	cmp	r3, #1
 8003466:	d105      	bne.n	8003474 <carsamba+0x2c4>
															 degisken11=2;
 8003468:	4b48      	ldr	r3, [pc, #288]	; (800358c <carsamba+0x3dc>)
 800346a:	2202      	movs	r2, #2
 800346c:	701a      	strb	r2, [r3, #0]
															 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800346e:	2001      	movs	r0, #1
 8003470:	f7fd f8ae 	bl	80005d0 <LCD_Send_Cmd>
														 }
														 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8003474:	2140      	movs	r1, #64	; 0x40
 8003476:	4844      	ldr	r0, [pc, #272]	; (8003588 <carsamba+0x3d8>)
 8003478:	f003 fe62 	bl	8007140 <HAL_GPIO_ReadPin>
 800347c:	4603      	mov	r3, r0
 800347e:	2b01      	cmp	r3, #1
 8003480:	d105      	bne.n	800348e <carsamba+0x2de>
															 degisken11=0;
 8003482:	4b42      	ldr	r3, [pc, #264]	; (800358c <carsamba+0x3dc>)
 8003484:	2200      	movs	r2, #0
 8003486:	701a      	strb	r2, [r3, #0]
															LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003488:	2001      	movs	r0, #1
 800348a:	f7fd f8a1 	bl	80005d0 <LCD_Send_Cmd>
																							}
														 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 800348e:	2120      	movs	r1, #32
 8003490:	483b      	ldr	r0, [pc, #236]	; (8003580 <carsamba+0x3d0>)
 8003492:	f003 fe55 	bl	8007140 <HAL_GPIO_ReadPin>
 8003496:	4603      	mov	r3, r0
 8003498:	2b01      	cmp	r3, #1
 800349a:	d104      	bne.n	80034a6 <carsamba+0x2f6>
																								 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800349c:	2001      	movs	r0, #1
 800349e:	f7fd f897 	bl	80005d0 <LCD_Send_Cmd>
																								 					 	 Ayar_Gun();
 80034a2:	f7fd fa8b 	bl	80009bc <Ayar_Gun>

				}



	if(degisken11==2)
 80034a6:	4b39      	ldr	r3, [pc, #228]	; (800358c <carsamba+0x3dc>)
 80034a8:	781b      	ldrb	r3, [r3, #0]
 80034aa:	2b02      	cmp	r3, #2
 80034ac:	f040 80b4 	bne.w	8003618 <carsamba+0x468>
					{

					if(carsamba_pompa3==0 ){
 80034b0:	4b3c      	ldr	r3, [pc, #240]	; (80035a4 <carsamba+0x3f4>)
 80034b2:	681b      	ldr	r3, [r3, #0]
 80034b4:	2b00      	cmp	r3, #0
 80034b6:	d141      	bne.n	800353c <carsamba+0x38c>
						LCD_Send_String_On_Line1(">>Pmp3 Pasif");
 80034b8:	483b      	ldr	r0, [pc, #236]	; (80035a8 <carsamba+0x3f8>)
 80034ba:	f7fd f959 	bl	8000770 <LCD_Send_String_On_Line1>
						LCD_Send_String_On_Line2("Pmp4 ");
 80034be:	483b      	ldr	r0, [pc, #236]	; (80035ac <carsamba+0x3fc>)
 80034c0:	f7fd f964 	bl	800078c <LCD_Send_String_On_Line2>



												 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){carsamba_pompa3=1;veri5[10]=carsamba_pompa3;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 80034c4:	2110      	movs	r1, #16
 80034c6:	482e      	ldr	r0, [pc, #184]	; (8003580 <carsamba+0x3d0>)
 80034c8:	f003 fe3a 	bl	8007140 <HAL_GPIO_ReadPin>
 80034cc:	4603      	mov	r3, r0
 80034ce:	2b01      	cmp	r3, #1
 80034d0:	d10e      	bne.n	80034f0 <carsamba+0x340>
 80034d2:	4b34      	ldr	r3, [pc, #208]	; (80035a4 <carsamba+0x3f4>)
 80034d4:	2201      	movs	r2, #1
 80034d6:	601a      	str	r2, [r3, #0]
 80034d8:	4b32      	ldr	r3, [pc, #200]	; (80035a4 <carsamba+0x3f4>)
 80034da:	681b      	ldr	r3, [r3, #0]
 80034dc:	4a24      	ldr	r2, [pc, #144]	; (8003570 <carsamba+0x3c0>)
 80034de:	6293      	str	r3, [r2, #40]	; 0x28
 80034e0:	221c      	movs	r2, #28
 80034e2:	4923      	ldr	r1, [pc, #140]	; (8003570 <carsamba+0x3c0>)
 80034e4:	4827      	ldr	r0, [pc, #156]	; (8003584 <carsamba+0x3d4>)
 80034e6:	f001 ff9b 	bl	8005420 <Flash_Write5>
 80034ea:	2001      	movs	r0, #1
 80034ec:	f7fd f870 	bl	80005d0 <LCD_Send_Cmd>

												 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 80034f0:	2180      	movs	r1, #128	; 0x80
 80034f2:	4825      	ldr	r0, [pc, #148]	; (8003588 <carsamba+0x3d8>)
 80034f4:	f003 fe24 	bl	8007140 <HAL_GPIO_ReadPin>
 80034f8:	4603      	mov	r3, r0
 80034fa:	2b01      	cmp	r3, #1
 80034fc:	d105      	bne.n	800350a <carsamba+0x35a>
													 degisken11=3;
 80034fe:	4b23      	ldr	r3, [pc, #140]	; (800358c <carsamba+0x3dc>)
 8003500:	2203      	movs	r2, #3
 8003502:	701a      	strb	r2, [r3, #0]
													 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003504:	2001      	movs	r0, #1
 8003506:	f7fd f863 	bl	80005d0 <LCD_Send_Cmd>
												 }
												 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 800350a:	2140      	movs	r1, #64	; 0x40
 800350c:	481e      	ldr	r0, [pc, #120]	; (8003588 <carsamba+0x3d8>)
 800350e:	f003 fe17 	bl	8007140 <HAL_GPIO_ReadPin>
 8003512:	4603      	mov	r3, r0
 8003514:	2b01      	cmp	r3, #1
 8003516:	d105      	bne.n	8003524 <carsamba+0x374>
													 degisken11=1;
 8003518:	4b1c      	ldr	r3, [pc, #112]	; (800358c <carsamba+0x3dc>)
 800351a:	2201      	movs	r2, #1
 800351c:	701a      	strb	r2, [r3, #0]
																							 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800351e:	2001      	movs	r0, #1
 8003520:	f7fd f856 	bl	80005d0 <LCD_Send_Cmd>
																						 }
												 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8003524:	2120      	movs	r1, #32
 8003526:	4816      	ldr	r0, [pc, #88]	; (8003580 <carsamba+0x3d0>)
 8003528:	f003 fe0a 	bl	8007140 <HAL_GPIO_ReadPin>
 800352c:	4603      	mov	r3, r0
 800352e:	2b01      	cmp	r3, #1
 8003530:	d104      	bne.n	800353c <carsamba+0x38c>
																						 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003532:	2001      	movs	r0, #1
 8003534:	f7fd f84c 	bl	80005d0 <LCD_Send_Cmd>
																						 					 	 Ayar_Gun();
 8003538:	f7fd fa40 	bl	80009bc <Ayar_Gun>
																						 					                                          }
					}
					if(carsamba_pompa3==1 ){
 800353c:	4b19      	ldr	r3, [pc, #100]	; (80035a4 <carsamba+0x3f4>)
 800353e:	681b      	ldr	r3, [r3, #0]
 8003540:	2b01      	cmp	r3, #1
 8003542:	d169      	bne.n	8003618 <carsamba+0x468>
									LCD_Send_String_On_Line1(">>Pmp3 Aktif");
 8003544:	481a      	ldr	r0, [pc, #104]	; (80035b0 <carsamba+0x400>)
 8003546:	f7fd f913 	bl	8000770 <LCD_Send_String_On_Line1>
									LCD_Send_String_On_Line2("Pmp4");
 800354a:	481a      	ldr	r0, [pc, #104]	; (80035b4 <carsamba+0x404>)
 800354c:	f7fd f91e 	bl	800078c <LCD_Send_String_On_Line2>



															 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){carsamba_pompa3=0;veri5[10]=carsamba_pompa3;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8003550:	2110      	movs	r1, #16
 8003552:	480b      	ldr	r0, [pc, #44]	; (8003580 <carsamba+0x3d0>)
 8003554:	f003 fdf4 	bl	8007140 <HAL_GPIO_ReadPin>
 8003558:	4603      	mov	r3, r0
 800355a:	2b01      	cmp	r3, #1
 800355c:	d136      	bne.n	80035cc <carsamba+0x41c>
 800355e:	4b11      	ldr	r3, [pc, #68]	; (80035a4 <carsamba+0x3f4>)
 8003560:	2200      	movs	r2, #0
 8003562:	601a      	str	r2, [r3, #0]
 8003564:	4b0f      	ldr	r3, [pc, #60]	; (80035a4 <carsamba+0x3f4>)
 8003566:	681b      	ldr	r3, [r3, #0]
 8003568:	e026      	b.n	80035b8 <carsamba+0x408>
 800356a:	bf00      	nop
 800356c:	20000480 	.word	0x20000480
 8003570:	20000144 	.word	0x20000144
 8003574:	2000007c 	.word	0x2000007c
 8003578:	08009004 	.word	0x08009004
 800357c:	08009014 	.word	0x08009014
 8003580:	40020800 	.word	0x40020800
 8003584:	080e0000 	.word	0x080e0000
 8003588:	40020000 	.word	0x40020000
 800358c:	20000041 	.word	0x20000041
 8003590:	0800901c 	.word	0x0800901c
 8003594:	20000080 	.word	0x20000080
 8003598:	0800902c 	.word	0x0800902c
 800359c:	08009034 	.word	0x08009034
 80035a0:	08009044 	.word	0x08009044
 80035a4:	20000084 	.word	0x20000084
 80035a8:	08009054 	.word	0x08009054
 80035ac:	08009064 	.word	0x08009064
 80035b0:	0800906c 	.word	0x0800906c
 80035b4:	0800907c 	.word	0x0800907c
 80035b8:	4a61      	ldr	r2, [pc, #388]	; (8003740 <carsamba+0x590>)
 80035ba:	6293      	str	r3, [r2, #40]	; 0x28
 80035bc:	221c      	movs	r2, #28
 80035be:	4960      	ldr	r1, [pc, #384]	; (8003740 <carsamba+0x590>)
 80035c0:	4860      	ldr	r0, [pc, #384]	; (8003744 <carsamba+0x594>)
 80035c2:	f001 ff2d 	bl	8005420 <Flash_Write5>
 80035c6:	2001      	movs	r0, #1
 80035c8:	f7fd f802 	bl	80005d0 <LCD_Send_Cmd>

															 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 80035cc:	2180      	movs	r1, #128	; 0x80
 80035ce:	485e      	ldr	r0, [pc, #376]	; (8003748 <carsamba+0x598>)
 80035d0:	f003 fdb6 	bl	8007140 <HAL_GPIO_ReadPin>
 80035d4:	4603      	mov	r3, r0
 80035d6:	2b01      	cmp	r3, #1
 80035d8:	d105      	bne.n	80035e6 <carsamba+0x436>
																 degisken11=3;
 80035da:	4b5c      	ldr	r3, [pc, #368]	; (800374c <carsamba+0x59c>)
 80035dc:	2203      	movs	r2, #3
 80035de:	701a      	strb	r2, [r3, #0]
																 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80035e0:	2001      	movs	r0, #1
 80035e2:	f7fc fff5 	bl	80005d0 <LCD_Send_Cmd>
															 }
															 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 80035e6:	2140      	movs	r1, #64	; 0x40
 80035e8:	4857      	ldr	r0, [pc, #348]	; (8003748 <carsamba+0x598>)
 80035ea:	f003 fda9 	bl	8007140 <HAL_GPIO_ReadPin>
 80035ee:	4603      	mov	r3, r0
 80035f0:	2b01      	cmp	r3, #1
 80035f2:	d105      	bne.n	8003600 <carsamba+0x450>
																 degisken11=1;
 80035f4:	4b55      	ldr	r3, [pc, #340]	; (800374c <carsamba+0x59c>)
 80035f6:	2201      	movs	r2, #1
 80035f8:	701a      	strb	r2, [r3, #0]
																LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80035fa:	2001      	movs	r0, #1
 80035fc:	f7fc ffe8 	bl	80005d0 <LCD_Send_Cmd>
																								}
															 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8003600:	2120      	movs	r1, #32
 8003602:	4853      	ldr	r0, [pc, #332]	; (8003750 <carsamba+0x5a0>)
 8003604:	f003 fd9c 	bl	8007140 <HAL_GPIO_ReadPin>
 8003608:	4603      	mov	r3, r0
 800360a:	2b01      	cmp	r3, #1
 800360c:	d104      	bne.n	8003618 <carsamba+0x468>
																									 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800360e:	2001      	movs	r0, #1
 8003610:	f7fc ffde 	bl	80005d0 <LCD_Send_Cmd>
																									 					 	 Ayar_Gun();
 8003614:	f7fd f9d2 	bl	80009bc <Ayar_Gun>
																									 					                                          }
								}


					}
	if(degisken11==3)
 8003618:	4b4c      	ldr	r3, [pc, #304]	; (800374c <carsamba+0x59c>)
 800361a:	781b      	ldrb	r3, [r3, #0]
 800361c:	2b03      	cmp	r3, #3
 800361e:	f47f ae08 	bne.w	8003232 <carsamba+0x82>
						{

						if(carsamba_pompa4==0 ){
 8003622:	4b4c      	ldr	r3, [pc, #304]	; (8003754 <carsamba+0x5a4>)
 8003624:	681b      	ldr	r3, [r3, #0]
 8003626:	2b00      	cmp	r3, #0
 8003628:	d141      	bne.n	80036ae <carsamba+0x4fe>
							LCD_Send_String_On_Line1("Pmp3");
 800362a:	484b      	ldr	r0, [pc, #300]	; (8003758 <carsamba+0x5a8>)
 800362c:	f7fd f8a0 	bl	8000770 <LCD_Send_String_On_Line1>
							LCD_Send_String_On_Line2(">>Pmp4 Pasif ");
 8003630:	484a      	ldr	r0, [pc, #296]	; (800375c <carsamba+0x5ac>)
 8003632:	f7fd f8ab 	bl	800078c <LCD_Send_String_On_Line2>



													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){carsamba_pompa4=1;veri5[11]=carsamba_pompa4;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8003636:	2110      	movs	r1, #16
 8003638:	4845      	ldr	r0, [pc, #276]	; (8003750 <carsamba+0x5a0>)
 800363a:	f003 fd81 	bl	8007140 <HAL_GPIO_ReadPin>
 800363e:	4603      	mov	r3, r0
 8003640:	2b01      	cmp	r3, #1
 8003642:	d10e      	bne.n	8003662 <carsamba+0x4b2>
 8003644:	4b43      	ldr	r3, [pc, #268]	; (8003754 <carsamba+0x5a4>)
 8003646:	2201      	movs	r2, #1
 8003648:	601a      	str	r2, [r3, #0]
 800364a:	4b42      	ldr	r3, [pc, #264]	; (8003754 <carsamba+0x5a4>)
 800364c:	681b      	ldr	r3, [r3, #0]
 800364e:	4a3c      	ldr	r2, [pc, #240]	; (8003740 <carsamba+0x590>)
 8003650:	62d3      	str	r3, [r2, #44]	; 0x2c
 8003652:	221c      	movs	r2, #28
 8003654:	493a      	ldr	r1, [pc, #232]	; (8003740 <carsamba+0x590>)
 8003656:	483b      	ldr	r0, [pc, #236]	; (8003744 <carsamba+0x594>)
 8003658:	f001 fee2 	bl	8005420 <Flash_Write5>
 800365c:	2001      	movs	r0, #1
 800365e:	f7fc ffb7 	bl	80005d0 <LCD_Send_Cmd>

													 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8003662:	2180      	movs	r1, #128	; 0x80
 8003664:	4838      	ldr	r0, [pc, #224]	; (8003748 <carsamba+0x598>)
 8003666:	f003 fd6b 	bl	8007140 <HAL_GPIO_ReadPin>
 800366a:	4603      	mov	r3, r0
 800366c:	2b01      	cmp	r3, #1
 800366e:	d105      	bne.n	800367c <carsamba+0x4cc>
														 degisken11=0;
 8003670:	4b36      	ldr	r3, [pc, #216]	; (800374c <carsamba+0x59c>)
 8003672:	2200      	movs	r2, #0
 8003674:	701a      	strb	r2, [r3, #0]
														 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003676:	2001      	movs	r0, #1
 8003678:	f7fc ffaa 	bl	80005d0 <LCD_Send_Cmd>
													 }
													 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 800367c:	2140      	movs	r1, #64	; 0x40
 800367e:	4832      	ldr	r0, [pc, #200]	; (8003748 <carsamba+0x598>)
 8003680:	f003 fd5e 	bl	8007140 <HAL_GPIO_ReadPin>
 8003684:	4603      	mov	r3, r0
 8003686:	2b01      	cmp	r3, #1
 8003688:	d105      	bne.n	8003696 <carsamba+0x4e6>
														 degisken11=2;
 800368a:	4b30      	ldr	r3, [pc, #192]	; (800374c <carsamba+0x59c>)
 800368c:	2202      	movs	r2, #2
 800368e:	701a      	strb	r2, [r3, #0]
																								 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003690:	2001      	movs	r0, #1
 8003692:	f7fc ff9d 	bl	80005d0 <LCD_Send_Cmd>
																							 }
													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8003696:	2120      	movs	r1, #32
 8003698:	482d      	ldr	r0, [pc, #180]	; (8003750 <carsamba+0x5a0>)
 800369a:	f003 fd51 	bl	8007140 <HAL_GPIO_ReadPin>
 800369e:	4603      	mov	r3, r0
 80036a0:	2b01      	cmp	r3, #1
 80036a2:	d104      	bne.n	80036ae <carsamba+0x4fe>
																							 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80036a4:	2001      	movs	r0, #1
 80036a6:	f7fc ff93 	bl	80005d0 <LCD_Send_Cmd>
																							 					 	 Ayar_Gun();
 80036aa:	f7fd f987 	bl	80009bc <Ayar_Gun>
																							 					                                          }
						}
						if(carsamba_pompa4==1 ){
 80036ae:	4b29      	ldr	r3, [pc, #164]	; (8003754 <carsamba+0x5a4>)
 80036b0:	681b      	ldr	r3, [r3, #0]
 80036b2:	2b01      	cmp	r3, #1
 80036b4:	f47f adbd 	bne.w	8003232 <carsamba+0x82>
										LCD_Send_String_On_Line1("Pmp3");
 80036b8:	4827      	ldr	r0, [pc, #156]	; (8003758 <carsamba+0x5a8>)
 80036ba:	f7fd f859 	bl	8000770 <LCD_Send_String_On_Line1>
										LCD_Send_String_On_Line2(">>Pmp4 Aktif");
 80036be:	4828      	ldr	r0, [pc, #160]	; (8003760 <carsamba+0x5b0>)
 80036c0:	f7fd f864 	bl	800078c <LCD_Send_String_On_Line2>



																 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){carsamba_pompa4=0;veri5[11]=carsamba_pompa4;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 80036c4:	2110      	movs	r1, #16
 80036c6:	4822      	ldr	r0, [pc, #136]	; (8003750 <carsamba+0x5a0>)
 80036c8:	f003 fd3a 	bl	8007140 <HAL_GPIO_ReadPin>
 80036cc:	4603      	mov	r3, r0
 80036ce:	2b01      	cmp	r3, #1
 80036d0:	d10e      	bne.n	80036f0 <carsamba+0x540>
 80036d2:	4b20      	ldr	r3, [pc, #128]	; (8003754 <carsamba+0x5a4>)
 80036d4:	2200      	movs	r2, #0
 80036d6:	601a      	str	r2, [r3, #0]
 80036d8:	4b1e      	ldr	r3, [pc, #120]	; (8003754 <carsamba+0x5a4>)
 80036da:	681b      	ldr	r3, [r3, #0]
 80036dc:	4a18      	ldr	r2, [pc, #96]	; (8003740 <carsamba+0x590>)
 80036de:	62d3      	str	r3, [r2, #44]	; 0x2c
 80036e0:	221c      	movs	r2, #28
 80036e2:	4917      	ldr	r1, [pc, #92]	; (8003740 <carsamba+0x590>)
 80036e4:	4817      	ldr	r0, [pc, #92]	; (8003744 <carsamba+0x594>)
 80036e6:	f001 fe9b 	bl	8005420 <Flash_Write5>
 80036ea:	2001      	movs	r0, #1
 80036ec:	f7fc ff70 	bl	80005d0 <LCD_Send_Cmd>

																 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 80036f0:	2180      	movs	r1, #128	; 0x80
 80036f2:	4815      	ldr	r0, [pc, #84]	; (8003748 <carsamba+0x598>)
 80036f4:	f003 fd24 	bl	8007140 <HAL_GPIO_ReadPin>
 80036f8:	4603      	mov	r3, r0
 80036fa:	2b01      	cmp	r3, #1
 80036fc:	d105      	bne.n	800370a <carsamba+0x55a>
																	 degisken11=0;
 80036fe:	4b13      	ldr	r3, [pc, #76]	; (800374c <carsamba+0x59c>)
 8003700:	2200      	movs	r2, #0
 8003702:	701a      	strb	r2, [r3, #0]
																	 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003704:	2001      	movs	r0, #1
 8003706:	f7fc ff63 	bl	80005d0 <LCD_Send_Cmd>
																 }
																 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 800370a:	2140      	movs	r1, #64	; 0x40
 800370c:	480e      	ldr	r0, [pc, #56]	; (8003748 <carsamba+0x598>)
 800370e:	f003 fd17 	bl	8007140 <HAL_GPIO_ReadPin>
 8003712:	4603      	mov	r3, r0
 8003714:	2b01      	cmp	r3, #1
 8003716:	d105      	bne.n	8003724 <carsamba+0x574>
																	 degisken11=2;
 8003718:	4b0c      	ldr	r3, [pc, #48]	; (800374c <carsamba+0x59c>)
 800371a:	2202      	movs	r2, #2
 800371c:	701a      	strb	r2, [r3, #0]
																	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800371e:	2001      	movs	r0, #1
 8003720:	f7fc ff56 	bl	80005d0 <LCD_Send_Cmd>
																									}
																 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8003724:	2120      	movs	r1, #32
 8003726:	480a      	ldr	r0, [pc, #40]	; (8003750 <carsamba+0x5a0>)
 8003728:	f003 fd0a 	bl	8007140 <HAL_GPIO_ReadPin>
 800372c:	4603      	mov	r3, r0
 800372e:	2b01      	cmp	r3, #1
 8003730:	f47f ad7f 	bne.w	8003232 <carsamba+0x82>
																										 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003734:	2001      	movs	r0, #1
 8003736:	f7fc ff4b 	bl	80005d0 <LCD_Send_Cmd>
																										 					 	 Ayar_Gun();
 800373a:	f7fd f93f 	bl	80009bc <Ayar_Gun>
	if(degisken11==0)
 800373e:	e578      	b.n	8003232 <carsamba+0x82>
 8003740:	20000144 	.word	0x20000144
 8003744:	080e0000 	.word	0x080e0000
 8003748:	40020000 	.word	0x40020000
 800374c:	20000041 	.word	0x20000041
 8003750:	40020800 	.word	0x40020800
 8003754:	20000088 	.word	0x20000088
 8003758:	08009084 	.word	0x08009084
 800375c:	0800908c 	.word	0x0800908c
 8003760:	0800909c 	.word	0x0800909c

08003764 <persembe>:
						}


}
 }
void persembe(){
 8003764:	b580      	push	{r7, lr}
 8003766:	b082      	sub	sp, #8
 8003768:	af00      	add	r7, sp, #0
// BURAYA SETLEYİP SIFIR YAPMAMIZ GEREK PAZARTESİ POMPA 1 DEĞERİ İÇİN

	 data5=Flash_Read5(0x080E0000);
 800376a:	481e      	ldr	r0, [pc, #120]	; (80037e4 <persembe+0x80>)
 800376c:	f001 ff08 	bl	8005580 <Flash_Read5>
 8003770:	4603      	mov	r3, r0
 8003772:	4a1d      	ldr	r2, [pc, #116]	; (80037e8 <persembe+0x84>)
 8003774:	6013      	str	r3, [r2, #0]
			 		 	                         for(int i=0;i<30;i++){
 8003776:	2300      	movs	r3, #0
 8003778:	607b      	str	r3, [r7, #4]
 800377a:	e00c      	b.n	8003796 <persembe+0x32>

			 		 	    	 								 		  read5[i]=data5[i];
 800377c:	4b1a      	ldr	r3, [pc, #104]	; (80037e8 <persembe+0x84>)
 800377e:	681a      	ldr	r2, [r3, #0]
 8003780:	687b      	ldr	r3, [r7, #4]
 8003782:	009b      	lsls	r3, r3, #2
 8003784:	4413      	add	r3, r2
 8003786:	681a      	ldr	r2, [r3, #0]
 8003788:	4918      	ldr	r1, [pc, #96]	; (80037ec <persembe+0x88>)
 800378a:	687b      	ldr	r3, [r7, #4]
 800378c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
			 		 	                         for(int i=0;i<30;i++){
 8003790:	687b      	ldr	r3, [r7, #4]
 8003792:	3301      	adds	r3, #1
 8003794:	607b      	str	r3, [r7, #4]
 8003796:	687b      	ldr	r3, [r7, #4]
 8003798:	2b1d      	cmp	r3, #29
 800379a:	ddef      	ble.n	800377c <persembe+0x18>
			 		 	    	 								 	   }


			 		 	                       persembe_pompa1=read5[12];
 800379c:	4b13      	ldr	r3, [pc, #76]	; (80037ec <persembe+0x88>)
 800379e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80037a0:	4a13      	ldr	r2, [pc, #76]	; (80037f0 <persembe+0x8c>)
 80037a2:	6013      	str	r3, [r2, #0]
			 		 	                       persembe_pompa2=read5[13];
 80037a4:	4b11      	ldr	r3, [pc, #68]	; (80037ec <persembe+0x88>)
 80037a6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80037a8:	4a12      	ldr	r2, [pc, #72]	; (80037f4 <persembe+0x90>)
 80037aa:	6013      	str	r3, [r2, #0]
			 		 	                       persembe_pompa3=read5[14];
 80037ac:	4b0f      	ldr	r3, [pc, #60]	; (80037ec <persembe+0x88>)
 80037ae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80037b0:	4a11      	ldr	r2, [pc, #68]	; (80037f8 <persembe+0x94>)
 80037b2:	6013      	str	r3, [r2, #0]
			 		 	                       persembe_pompa4=read5[15];
 80037b4:	4b0d      	ldr	r3, [pc, #52]	; (80037ec <persembe+0x88>)
 80037b6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80037b8:	4a10      	ldr	r2, [pc, #64]	; (80037fc <persembe+0x98>)
 80037ba:	6013      	str	r3, [r2, #0]
		 		 	                           Flash_Write5(0x080E0000,read5,30);
 80037bc:	221e      	movs	r2, #30
 80037be:	490b      	ldr	r1, [pc, #44]	; (80037ec <persembe+0x88>)
 80037c0:	4808      	ldr	r0, [pc, #32]	; (80037e4 <persembe+0x80>)
 80037c2:	f001 fe2d 	bl	8005420 <Flash_Write5>



while(1){
	if(degisken12==0)
 80037c6:	4b0e      	ldr	r3, [pc, #56]	; (8003800 <persembe+0x9c>)
 80037c8:	781b      	ldrb	r3, [r3, #0]
 80037ca:	2b00      	cmp	r3, #0
 80037cc:	f040 809c 	bne.w	8003908 <persembe+0x1a4>
			{
				 data5=Flash_Read5(0x080E0000);
 80037d0:	4804      	ldr	r0, [pc, #16]	; (80037e4 <persembe+0x80>)
 80037d2:	f001 fed5 	bl	8005580 <Flash_Read5>
 80037d6:	4603      	mov	r3, r0
 80037d8:	4a03      	ldr	r2, [pc, #12]	; (80037e8 <persembe+0x84>)
 80037da:	6013      	str	r3, [r2, #0]
				 for(int i=0;i<29;i++)
 80037dc:	2300      	movs	r3, #0
 80037de:	603b      	str	r3, [r7, #0]
 80037e0:	e01d      	b.n	800381e <persembe+0xba>
 80037e2:	bf00      	nop
 80037e4:	080e0000 	.word	0x080e0000
 80037e8:	20000480 	.word	0x20000480
 80037ec:	20000344 	.word	0x20000344
 80037f0:	2000008c 	.word	0x2000008c
 80037f4:	20000090 	.word	0x20000090
 80037f8:	20000094 	.word	0x20000094
 80037fc:	20000098 	.word	0x20000098
 8003800:	20000042 	.word	0x20000042
				 											 							 	{
				 											 							 	veri5[i]=data5[i];
 8003804:	4bba      	ldr	r3, [pc, #744]	; (8003af0 <persembe+0x38c>)
 8003806:	681a      	ldr	r2, [r3, #0]
 8003808:	683b      	ldr	r3, [r7, #0]
 800380a:	009b      	lsls	r3, r3, #2
 800380c:	4413      	add	r3, r2
 800380e:	681a      	ldr	r2, [r3, #0]
 8003810:	49b8      	ldr	r1, [pc, #736]	; (8003af4 <persembe+0x390>)
 8003812:	683b      	ldr	r3, [r7, #0]
 8003814:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
				 for(int i=0;i<29;i++)
 8003818:	683b      	ldr	r3, [r7, #0]
 800381a:	3301      	adds	r3, #1
 800381c:	603b      	str	r3, [r7, #0]
 800381e:	683b      	ldr	r3, [r7, #0]
 8003820:	2b1c      	cmp	r3, #28
 8003822:	ddef      	ble.n	8003804 <persembe+0xa0>
				 											 							 	}



			if(persembe_pompa1==0 ){
 8003824:	4bb4      	ldr	r3, [pc, #720]	; (8003af8 <persembe+0x394>)
 8003826:	681b      	ldr	r3, [r3, #0]
 8003828:	2b00      	cmp	r3, #0
 800382a:	d134      	bne.n	8003896 <persembe+0x132>
				LCD_Send_String_On_Line1(">>Pmp1 Pasif");
 800382c:	48b3      	ldr	r0, [pc, #716]	; (8003afc <persembe+0x398>)
 800382e:	f7fc ff9f 	bl	8000770 <LCD_Send_String_On_Line1>
				LCD_Send_String_On_Line2("Pmp2");
 8003832:	48b3      	ldr	r0, [pc, #716]	; (8003b00 <persembe+0x39c>)
 8003834:	f7fc ffaa 	bl	800078c <LCD_Send_String_On_Line2>



										 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){persembe_pompa1=1;veri5[12]=persembe_pompa1;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8003838:	2110      	movs	r1, #16
 800383a:	48b2      	ldr	r0, [pc, #712]	; (8003b04 <persembe+0x3a0>)
 800383c:	f003 fc80 	bl	8007140 <HAL_GPIO_ReadPin>
 8003840:	4603      	mov	r3, r0
 8003842:	2b01      	cmp	r3, #1
 8003844:	d10e      	bne.n	8003864 <persembe+0x100>
 8003846:	4bac      	ldr	r3, [pc, #688]	; (8003af8 <persembe+0x394>)
 8003848:	2201      	movs	r2, #1
 800384a:	601a      	str	r2, [r3, #0]
 800384c:	4baa      	ldr	r3, [pc, #680]	; (8003af8 <persembe+0x394>)
 800384e:	681b      	ldr	r3, [r3, #0]
 8003850:	4aa8      	ldr	r2, [pc, #672]	; (8003af4 <persembe+0x390>)
 8003852:	6313      	str	r3, [r2, #48]	; 0x30
 8003854:	221c      	movs	r2, #28
 8003856:	49a7      	ldr	r1, [pc, #668]	; (8003af4 <persembe+0x390>)
 8003858:	48ab      	ldr	r0, [pc, #684]	; (8003b08 <persembe+0x3a4>)
 800385a:	f001 fde1 	bl	8005420 <Flash_Write5>
 800385e:	2001      	movs	r0, #1
 8003860:	f7fc feb6 	bl	80005d0 <LCD_Send_Cmd>

										 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8003864:	2180      	movs	r1, #128	; 0x80
 8003866:	48a9      	ldr	r0, [pc, #676]	; (8003b0c <persembe+0x3a8>)
 8003868:	f003 fc6a 	bl	8007140 <HAL_GPIO_ReadPin>
 800386c:	4603      	mov	r3, r0
 800386e:	2b01      	cmp	r3, #1
 8003870:	d105      	bne.n	800387e <persembe+0x11a>
											 degisken12=1;
 8003872:	4ba7      	ldr	r3, [pc, #668]	; (8003b10 <persembe+0x3ac>)
 8003874:	2201      	movs	r2, #1
 8003876:	701a      	strb	r2, [r3, #0]
											 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003878:	2001      	movs	r0, #1
 800387a:	f7fc fea9 	bl	80005d0 <LCD_Send_Cmd>

										 }
										 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 800387e:	2120      	movs	r1, #32
 8003880:	48a0      	ldr	r0, [pc, #640]	; (8003b04 <persembe+0x3a0>)
 8003882:	f003 fc5d 	bl	8007140 <HAL_GPIO_ReadPin>
 8003886:	4603      	mov	r3, r0
 8003888:	2b01      	cmp	r3, #1
 800388a:	d104      	bne.n	8003896 <persembe+0x132>
																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800388c:	2001      	movs	r0, #1
 800388e:	f7fc fe9f 	bl	80005d0 <LCD_Send_Cmd>
																				 					 	 Ayar_Gun();
 8003892:	f7fd f893 	bl	80009bc <Ayar_Gun>
																				 					                                          }

			}
			if(persembe_pompa1==1 ){
 8003896:	4b98      	ldr	r3, [pc, #608]	; (8003af8 <persembe+0x394>)
 8003898:	681b      	ldr	r3, [r3, #0]
 800389a:	2b01      	cmp	r3, #1
 800389c:	d134      	bne.n	8003908 <persembe+0x1a4>
							LCD_Send_String_On_Line1(">>Pmp1 Aktif");
 800389e:	489d      	ldr	r0, [pc, #628]	; (8003b14 <persembe+0x3b0>)
 80038a0:	f7fc ff66 	bl	8000770 <LCD_Send_String_On_Line1>
							LCD_Send_String_On_Line2("Pmp2");
 80038a4:	4896      	ldr	r0, [pc, #600]	; (8003b00 <persembe+0x39c>)
 80038a6:	f7fc ff71 	bl	800078c <LCD_Send_String_On_Line2>



													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){persembe_pompa1=0;veri5[12]=persembe_pompa1;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 80038aa:	2110      	movs	r1, #16
 80038ac:	4895      	ldr	r0, [pc, #596]	; (8003b04 <persembe+0x3a0>)
 80038ae:	f003 fc47 	bl	8007140 <HAL_GPIO_ReadPin>
 80038b2:	4603      	mov	r3, r0
 80038b4:	2b01      	cmp	r3, #1
 80038b6:	d10e      	bne.n	80038d6 <persembe+0x172>
 80038b8:	4b8f      	ldr	r3, [pc, #572]	; (8003af8 <persembe+0x394>)
 80038ba:	2200      	movs	r2, #0
 80038bc:	601a      	str	r2, [r3, #0]
 80038be:	4b8e      	ldr	r3, [pc, #568]	; (8003af8 <persembe+0x394>)
 80038c0:	681b      	ldr	r3, [r3, #0]
 80038c2:	4a8c      	ldr	r2, [pc, #560]	; (8003af4 <persembe+0x390>)
 80038c4:	6313      	str	r3, [r2, #48]	; 0x30
 80038c6:	221c      	movs	r2, #28
 80038c8:	498a      	ldr	r1, [pc, #552]	; (8003af4 <persembe+0x390>)
 80038ca:	488f      	ldr	r0, [pc, #572]	; (8003b08 <persembe+0x3a4>)
 80038cc:	f001 fda8 	bl	8005420 <Flash_Write5>
 80038d0:	2001      	movs	r0, #1
 80038d2:	f7fc fe7d 	bl	80005d0 <LCD_Send_Cmd>

													 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 80038d6:	2180      	movs	r1, #128	; 0x80
 80038d8:	488c      	ldr	r0, [pc, #560]	; (8003b0c <persembe+0x3a8>)
 80038da:	f003 fc31 	bl	8007140 <HAL_GPIO_ReadPin>
 80038de:	4603      	mov	r3, r0
 80038e0:	2b01      	cmp	r3, #1
 80038e2:	d105      	bne.n	80038f0 <persembe+0x18c>
														 degisken12=1;
 80038e4:	4b8a      	ldr	r3, [pc, #552]	; (8003b10 <persembe+0x3ac>)
 80038e6:	2201      	movs	r2, #1
 80038e8:	701a      	strb	r2, [r3, #0]
														 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80038ea:	2001      	movs	r0, #1
 80038ec:	f7fc fe70 	bl	80005d0 <LCD_Send_Cmd>

													 }
													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 80038f0:	2120      	movs	r1, #32
 80038f2:	4884      	ldr	r0, [pc, #528]	; (8003b04 <persembe+0x3a0>)
 80038f4:	f003 fc24 	bl	8007140 <HAL_GPIO_ReadPin>
 80038f8:	4603      	mov	r3, r0
 80038fa:	2b01      	cmp	r3, #1
 80038fc:	d104      	bne.n	8003908 <persembe+0x1a4>
																							 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80038fe:	2001      	movs	r0, #1
 8003900:	f7fc fe66 	bl	80005d0 <LCD_Send_Cmd>
																							 					 	 Ayar_Gun();
 8003904:	f7fd f85a 	bl	80009bc <Ayar_Gun>
						}


			}

	if(degisken12==1)
 8003908:	4b81      	ldr	r3, [pc, #516]	; (8003b10 <persembe+0x3ac>)
 800390a:	781b      	ldrb	r3, [r3, #0]
 800390c:	2b01      	cmp	r3, #1
 800390e:	f040 808c 	bne.w	8003a2a <persembe+0x2c6>
				{

				if(persembe_pompa2==0 ){
 8003912:	4b81      	ldr	r3, [pc, #516]	; (8003b18 <persembe+0x3b4>)
 8003914:	681b      	ldr	r3, [r3, #0]
 8003916:	2b00      	cmp	r3, #0
 8003918:	d141      	bne.n	800399e <persembe+0x23a>
					LCD_Send_String_On_Line1("Pmp1");
 800391a:	4880      	ldr	r0, [pc, #512]	; (8003b1c <persembe+0x3b8>)
 800391c:	f7fc ff28 	bl	8000770 <LCD_Send_String_On_Line1>
					LCD_Send_String_On_Line2(">>Pmp2 Pasif");
 8003920:	487f      	ldr	r0, [pc, #508]	; (8003b20 <persembe+0x3bc>)
 8003922:	f7fc ff33 	bl	800078c <LCD_Send_String_On_Line2>



											 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){persembe_pompa2=1;veri5[13]=persembe_pompa2;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8003926:	2110      	movs	r1, #16
 8003928:	4876      	ldr	r0, [pc, #472]	; (8003b04 <persembe+0x3a0>)
 800392a:	f003 fc09 	bl	8007140 <HAL_GPIO_ReadPin>
 800392e:	4603      	mov	r3, r0
 8003930:	2b01      	cmp	r3, #1
 8003932:	d10e      	bne.n	8003952 <persembe+0x1ee>
 8003934:	4b78      	ldr	r3, [pc, #480]	; (8003b18 <persembe+0x3b4>)
 8003936:	2201      	movs	r2, #1
 8003938:	601a      	str	r2, [r3, #0]
 800393a:	4b77      	ldr	r3, [pc, #476]	; (8003b18 <persembe+0x3b4>)
 800393c:	681b      	ldr	r3, [r3, #0]
 800393e:	4a6d      	ldr	r2, [pc, #436]	; (8003af4 <persembe+0x390>)
 8003940:	6353      	str	r3, [r2, #52]	; 0x34
 8003942:	221c      	movs	r2, #28
 8003944:	496b      	ldr	r1, [pc, #428]	; (8003af4 <persembe+0x390>)
 8003946:	4870      	ldr	r0, [pc, #448]	; (8003b08 <persembe+0x3a4>)
 8003948:	f001 fd6a 	bl	8005420 <Flash_Write5>
 800394c:	2001      	movs	r0, #1
 800394e:	f7fc fe3f 	bl	80005d0 <LCD_Send_Cmd>

											 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8003952:	2180      	movs	r1, #128	; 0x80
 8003954:	486d      	ldr	r0, [pc, #436]	; (8003b0c <persembe+0x3a8>)
 8003956:	f003 fbf3 	bl	8007140 <HAL_GPIO_ReadPin>
 800395a:	4603      	mov	r3, r0
 800395c:	2b01      	cmp	r3, #1
 800395e:	d105      	bne.n	800396c <persembe+0x208>
												 degisken12=2;
 8003960:	4b6b      	ldr	r3, [pc, #428]	; (8003b10 <persembe+0x3ac>)
 8003962:	2202      	movs	r2, #2
 8003964:	701a      	strb	r2, [r3, #0]
												 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003966:	2001      	movs	r0, #1
 8003968:	f7fc fe32 	bl	80005d0 <LCD_Send_Cmd>
											 }
											 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 800396c:	2140      	movs	r1, #64	; 0x40
 800396e:	4867      	ldr	r0, [pc, #412]	; (8003b0c <persembe+0x3a8>)
 8003970:	f003 fbe6 	bl	8007140 <HAL_GPIO_ReadPin>
 8003974:	4603      	mov	r3, r0
 8003976:	2b01      	cmp	r3, #1
 8003978:	d105      	bne.n	8003986 <persembe+0x222>
																						 degisken12=1;
 800397a:	4b65      	ldr	r3, [pc, #404]	; (8003b10 <persembe+0x3ac>)
 800397c:	2201      	movs	r2, #1
 800397e:	701a      	strb	r2, [r3, #0]
																						 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003980:	2001      	movs	r0, #1
 8003982:	f7fc fe25 	bl	80005d0 <LCD_Send_Cmd>
																					 }
											 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8003986:	2120      	movs	r1, #32
 8003988:	485e      	ldr	r0, [pc, #376]	; (8003b04 <persembe+0x3a0>)
 800398a:	f003 fbd9 	bl	8007140 <HAL_GPIO_ReadPin>
 800398e:	4603      	mov	r3, r0
 8003990:	2b01      	cmp	r3, #1
 8003992:	d104      	bne.n	800399e <persembe+0x23a>
																					 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003994:	2001      	movs	r0, #1
 8003996:	f7fc fe1b 	bl	80005d0 <LCD_Send_Cmd>
																					 					 	 Ayar_Gun();
 800399a:	f7fd f80f 	bl	80009bc <Ayar_Gun>
																					 					                                          }
				}
				if(persembe_pompa2==1 ){
 800399e:	4b5e      	ldr	r3, [pc, #376]	; (8003b18 <persembe+0x3b4>)
 80039a0:	681b      	ldr	r3, [r3, #0]
 80039a2:	2b01      	cmp	r3, #1
 80039a4:	d141      	bne.n	8003a2a <persembe+0x2c6>
								LCD_Send_String_On_Line1("Pmp1");
 80039a6:	485d      	ldr	r0, [pc, #372]	; (8003b1c <persembe+0x3b8>)
 80039a8:	f7fc fee2 	bl	8000770 <LCD_Send_String_On_Line1>
								LCD_Send_String_On_Line2(">>Pmp2 Aktif");
 80039ac:	485d      	ldr	r0, [pc, #372]	; (8003b24 <persembe+0x3c0>)
 80039ae:	f7fc feed 	bl	800078c <LCD_Send_String_On_Line2>



														 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){persembe_pompa2=0;veri5[13]=persembe_pompa2;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 80039b2:	2110      	movs	r1, #16
 80039b4:	4853      	ldr	r0, [pc, #332]	; (8003b04 <persembe+0x3a0>)
 80039b6:	f003 fbc3 	bl	8007140 <HAL_GPIO_ReadPin>
 80039ba:	4603      	mov	r3, r0
 80039bc:	2b01      	cmp	r3, #1
 80039be:	d10e      	bne.n	80039de <persembe+0x27a>
 80039c0:	4b55      	ldr	r3, [pc, #340]	; (8003b18 <persembe+0x3b4>)
 80039c2:	2200      	movs	r2, #0
 80039c4:	601a      	str	r2, [r3, #0]
 80039c6:	4b54      	ldr	r3, [pc, #336]	; (8003b18 <persembe+0x3b4>)
 80039c8:	681b      	ldr	r3, [r3, #0]
 80039ca:	4a4a      	ldr	r2, [pc, #296]	; (8003af4 <persembe+0x390>)
 80039cc:	6353      	str	r3, [r2, #52]	; 0x34
 80039ce:	221c      	movs	r2, #28
 80039d0:	4948      	ldr	r1, [pc, #288]	; (8003af4 <persembe+0x390>)
 80039d2:	484d      	ldr	r0, [pc, #308]	; (8003b08 <persembe+0x3a4>)
 80039d4:	f001 fd24 	bl	8005420 <Flash_Write5>
 80039d8:	2001      	movs	r0, #1
 80039da:	f7fc fdf9 	bl	80005d0 <LCD_Send_Cmd>

														 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 80039de:	2180      	movs	r1, #128	; 0x80
 80039e0:	484a      	ldr	r0, [pc, #296]	; (8003b0c <persembe+0x3a8>)
 80039e2:	f003 fbad 	bl	8007140 <HAL_GPIO_ReadPin>
 80039e6:	4603      	mov	r3, r0
 80039e8:	2b01      	cmp	r3, #1
 80039ea:	d105      	bne.n	80039f8 <persembe+0x294>
															 degisken12=2;
 80039ec:	4b48      	ldr	r3, [pc, #288]	; (8003b10 <persembe+0x3ac>)
 80039ee:	2202      	movs	r2, #2
 80039f0:	701a      	strb	r2, [r3, #0]
															 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80039f2:	2001      	movs	r0, #1
 80039f4:	f7fc fdec 	bl	80005d0 <LCD_Send_Cmd>
														 }
														 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 80039f8:	2140      	movs	r1, #64	; 0x40
 80039fa:	4844      	ldr	r0, [pc, #272]	; (8003b0c <persembe+0x3a8>)
 80039fc:	f003 fba0 	bl	8007140 <HAL_GPIO_ReadPin>
 8003a00:	4603      	mov	r3, r0
 8003a02:	2b01      	cmp	r3, #1
 8003a04:	d105      	bne.n	8003a12 <persembe+0x2ae>
															 degisken12=0;
 8003a06:	4b42      	ldr	r3, [pc, #264]	; (8003b10 <persembe+0x3ac>)
 8003a08:	2200      	movs	r2, #0
 8003a0a:	701a      	strb	r2, [r3, #0]
															LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003a0c:	2001      	movs	r0, #1
 8003a0e:	f7fc fddf 	bl	80005d0 <LCD_Send_Cmd>
																							}
														 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8003a12:	2120      	movs	r1, #32
 8003a14:	483b      	ldr	r0, [pc, #236]	; (8003b04 <persembe+0x3a0>)
 8003a16:	f003 fb93 	bl	8007140 <HAL_GPIO_ReadPin>
 8003a1a:	4603      	mov	r3, r0
 8003a1c:	2b01      	cmp	r3, #1
 8003a1e:	d104      	bne.n	8003a2a <persembe+0x2c6>
																								 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003a20:	2001      	movs	r0, #1
 8003a22:	f7fc fdd5 	bl	80005d0 <LCD_Send_Cmd>
																								 					 	 Ayar_Gun();
 8003a26:	f7fc ffc9 	bl	80009bc <Ayar_Gun>

				}



	if(degisken12==2)
 8003a2a:	4b39      	ldr	r3, [pc, #228]	; (8003b10 <persembe+0x3ac>)
 8003a2c:	781b      	ldrb	r3, [r3, #0]
 8003a2e:	2b02      	cmp	r3, #2
 8003a30:	f040 80b4 	bne.w	8003b9c <persembe+0x438>
					{

					if(persembe_pompa3==0 ){
 8003a34:	4b3c      	ldr	r3, [pc, #240]	; (8003b28 <persembe+0x3c4>)
 8003a36:	681b      	ldr	r3, [r3, #0]
 8003a38:	2b00      	cmp	r3, #0
 8003a3a:	d141      	bne.n	8003ac0 <persembe+0x35c>
						LCD_Send_String_On_Line1(">>Pmp3 Pasif");
 8003a3c:	483b      	ldr	r0, [pc, #236]	; (8003b2c <persembe+0x3c8>)
 8003a3e:	f7fc fe97 	bl	8000770 <LCD_Send_String_On_Line1>
						LCD_Send_String_On_Line2("Pmp4 ");
 8003a42:	483b      	ldr	r0, [pc, #236]	; (8003b30 <persembe+0x3cc>)
 8003a44:	f7fc fea2 	bl	800078c <LCD_Send_String_On_Line2>



												 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){persembe_pompa3=1;veri5[14]=persembe_pompa3;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8003a48:	2110      	movs	r1, #16
 8003a4a:	482e      	ldr	r0, [pc, #184]	; (8003b04 <persembe+0x3a0>)
 8003a4c:	f003 fb78 	bl	8007140 <HAL_GPIO_ReadPin>
 8003a50:	4603      	mov	r3, r0
 8003a52:	2b01      	cmp	r3, #1
 8003a54:	d10e      	bne.n	8003a74 <persembe+0x310>
 8003a56:	4b34      	ldr	r3, [pc, #208]	; (8003b28 <persembe+0x3c4>)
 8003a58:	2201      	movs	r2, #1
 8003a5a:	601a      	str	r2, [r3, #0]
 8003a5c:	4b32      	ldr	r3, [pc, #200]	; (8003b28 <persembe+0x3c4>)
 8003a5e:	681b      	ldr	r3, [r3, #0]
 8003a60:	4a24      	ldr	r2, [pc, #144]	; (8003af4 <persembe+0x390>)
 8003a62:	6393      	str	r3, [r2, #56]	; 0x38
 8003a64:	221c      	movs	r2, #28
 8003a66:	4923      	ldr	r1, [pc, #140]	; (8003af4 <persembe+0x390>)
 8003a68:	4827      	ldr	r0, [pc, #156]	; (8003b08 <persembe+0x3a4>)
 8003a6a:	f001 fcd9 	bl	8005420 <Flash_Write5>
 8003a6e:	2001      	movs	r0, #1
 8003a70:	f7fc fdae 	bl	80005d0 <LCD_Send_Cmd>

												 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8003a74:	2180      	movs	r1, #128	; 0x80
 8003a76:	4825      	ldr	r0, [pc, #148]	; (8003b0c <persembe+0x3a8>)
 8003a78:	f003 fb62 	bl	8007140 <HAL_GPIO_ReadPin>
 8003a7c:	4603      	mov	r3, r0
 8003a7e:	2b01      	cmp	r3, #1
 8003a80:	d105      	bne.n	8003a8e <persembe+0x32a>
													 degisken12=3;
 8003a82:	4b23      	ldr	r3, [pc, #140]	; (8003b10 <persembe+0x3ac>)
 8003a84:	2203      	movs	r2, #3
 8003a86:	701a      	strb	r2, [r3, #0]
													 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003a88:	2001      	movs	r0, #1
 8003a8a:	f7fc fda1 	bl	80005d0 <LCD_Send_Cmd>
												 }
												 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8003a8e:	2140      	movs	r1, #64	; 0x40
 8003a90:	481e      	ldr	r0, [pc, #120]	; (8003b0c <persembe+0x3a8>)
 8003a92:	f003 fb55 	bl	8007140 <HAL_GPIO_ReadPin>
 8003a96:	4603      	mov	r3, r0
 8003a98:	2b01      	cmp	r3, #1
 8003a9a:	d105      	bne.n	8003aa8 <persembe+0x344>
													 degisken12=1;
 8003a9c:	4b1c      	ldr	r3, [pc, #112]	; (8003b10 <persembe+0x3ac>)
 8003a9e:	2201      	movs	r2, #1
 8003aa0:	701a      	strb	r2, [r3, #0]
																							 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003aa2:	2001      	movs	r0, #1
 8003aa4:	f7fc fd94 	bl	80005d0 <LCD_Send_Cmd>
																						 }
												 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8003aa8:	2120      	movs	r1, #32
 8003aaa:	4816      	ldr	r0, [pc, #88]	; (8003b04 <persembe+0x3a0>)
 8003aac:	f003 fb48 	bl	8007140 <HAL_GPIO_ReadPin>
 8003ab0:	4603      	mov	r3, r0
 8003ab2:	2b01      	cmp	r3, #1
 8003ab4:	d104      	bne.n	8003ac0 <persembe+0x35c>
																						 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003ab6:	2001      	movs	r0, #1
 8003ab8:	f7fc fd8a 	bl	80005d0 <LCD_Send_Cmd>
																						 					 	 Ayar_Gun();
 8003abc:	f7fc ff7e 	bl	80009bc <Ayar_Gun>
																						 					                                          }
					}
					if(persembe_pompa3==1 ){
 8003ac0:	4b19      	ldr	r3, [pc, #100]	; (8003b28 <persembe+0x3c4>)
 8003ac2:	681b      	ldr	r3, [r3, #0]
 8003ac4:	2b01      	cmp	r3, #1
 8003ac6:	d169      	bne.n	8003b9c <persembe+0x438>
									LCD_Send_String_On_Line1(">>Pmp3 Aktif");
 8003ac8:	481a      	ldr	r0, [pc, #104]	; (8003b34 <persembe+0x3d0>)
 8003aca:	f7fc fe51 	bl	8000770 <LCD_Send_String_On_Line1>
									LCD_Send_String_On_Line2("Pmp4");
 8003ace:	481a      	ldr	r0, [pc, #104]	; (8003b38 <persembe+0x3d4>)
 8003ad0:	f7fc fe5c 	bl	800078c <LCD_Send_String_On_Line2>



															 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){persembe_pompa3=0;veri5[14]=persembe_pompa3;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8003ad4:	2110      	movs	r1, #16
 8003ad6:	480b      	ldr	r0, [pc, #44]	; (8003b04 <persembe+0x3a0>)
 8003ad8:	f003 fb32 	bl	8007140 <HAL_GPIO_ReadPin>
 8003adc:	4603      	mov	r3, r0
 8003ade:	2b01      	cmp	r3, #1
 8003ae0:	d136      	bne.n	8003b50 <persembe+0x3ec>
 8003ae2:	4b11      	ldr	r3, [pc, #68]	; (8003b28 <persembe+0x3c4>)
 8003ae4:	2200      	movs	r2, #0
 8003ae6:	601a      	str	r2, [r3, #0]
 8003ae8:	4b0f      	ldr	r3, [pc, #60]	; (8003b28 <persembe+0x3c4>)
 8003aea:	681b      	ldr	r3, [r3, #0]
 8003aec:	e026      	b.n	8003b3c <persembe+0x3d8>
 8003aee:	bf00      	nop
 8003af0:	20000480 	.word	0x20000480
 8003af4:	20000144 	.word	0x20000144
 8003af8:	2000008c 	.word	0x2000008c
 8003afc:	08009004 	.word	0x08009004
 8003b00:	08009014 	.word	0x08009014
 8003b04:	40020800 	.word	0x40020800
 8003b08:	080e0000 	.word	0x080e0000
 8003b0c:	40020000 	.word	0x40020000
 8003b10:	20000042 	.word	0x20000042
 8003b14:	0800901c 	.word	0x0800901c
 8003b18:	20000090 	.word	0x20000090
 8003b1c:	0800902c 	.word	0x0800902c
 8003b20:	08009034 	.word	0x08009034
 8003b24:	08009044 	.word	0x08009044
 8003b28:	20000094 	.word	0x20000094
 8003b2c:	08009054 	.word	0x08009054
 8003b30:	08009064 	.word	0x08009064
 8003b34:	0800906c 	.word	0x0800906c
 8003b38:	0800907c 	.word	0x0800907c
 8003b3c:	4a61      	ldr	r2, [pc, #388]	; (8003cc4 <persembe+0x560>)
 8003b3e:	6393      	str	r3, [r2, #56]	; 0x38
 8003b40:	221c      	movs	r2, #28
 8003b42:	4960      	ldr	r1, [pc, #384]	; (8003cc4 <persembe+0x560>)
 8003b44:	4860      	ldr	r0, [pc, #384]	; (8003cc8 <persembe+0x564>)
 8003b46:	f001 fc6b 	bl	8005420 <Flash_Write5>
 8003b4a:	2001      	movs	r0, #1
 8003b4c:	f7fc fd40 	bl	80005d0 <LCD_Send_Cmd>

															 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8003b50:	2180      	movs	r1, #128	; 0x80
 8003b52:	485e      	ldr	r0, [pc, #376]	; (8003ccc <persembe+0x568>)
 8003b54:	f003 faf4 	bl	8007140 <HAL_GPIO_ReadPin>
 8003b58:	4603      	mov	r3, r0
 8003b5a:	2b01      	cmp	r3, #1
 8003b5c:	d105      	bne.n	8003b6a <persembe+0x406>
																 degisken12=3;
 8003b5e:	4b5c      	ldr	r3, [pc, #368]	; (8003cd0 <persembe+0x56c>)
 8003b60:	2203      	movs	r2, #3
 8003b62:	701a      	strb	r2, [r3, #0]
																 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003b64:	2001      	movs	r0, #1
 8003b66:	f7fc fd33 	bl	80005d0 <LCD_Send_Cmd>
															 }
															 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8003b6a:	2140      	movs	r1, #64	; 0x40
 8003b6c:	4857      	ldr	r0, [pc, #348]	; (8003ccc <persembe+0x568>)
 8003b6e:	f003 fae7 	bl	8007140 <HAL_GPIO_ReadPin>
 8003b72:	4603      	mov	r3, r0
 8003b74:	2b01      	cmp	r3, #1
 8003b76:	d105      	bne.n	8003b84 <persembe+0x420>
																 degisken12=1;
 8003b78:	4b55      	ldr	r3, [pc, #340]	; (8003cd0 <persembe+0x56c>)
 8003b7a:	2201      	movs	r2, #1
 8003b7c:	701a      	strb	r2, [r3, #0]
																LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003b7e:	2001      	movs	r0, #1
 8003b80:	f7fc fd26 	bl	80005d0 <LCD_Send_Cmd>
																								}
															 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8003b84:	2120      	movs	r1, #32
 8003b86:	4853      	ldr	r0, [pc, #332]	; (8003cd4 <persembe+0x570>)
 8003b88:	f003 fada 	bl	8007140 <HAL_GPIO_ReadPin>
 8003b8c:	4603      	mov	r3, r0
 8003b8e:	2b01      	cmp	r3, #1
 8003b90:	d104      	bne.n	8003b9c <persembe+0x438>
																									 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003b92:	2001      	movs	r0, #1
 8003b94:	f7fc fd1c 	bl	80005d0 <LCD_Send_Cmd>
																									 					 	 Ayar_Gun();
 8003b98:	f7fc ff10 	bl	80009bc <Ayar_Gun>
																									 					                                          }
								}


					}
	if(degisken12==3)
 8003b9c:	4b4c      	ldr	r3, [pc, #304]	; (8003cd0 <persembe+0x56c>)
 8003b9e:	781b      	ldrb	r3, [r3, #0]
 8003ba0:	2b03      	cmp	r3, #3
 8003ba2:	f47f ae10 	bne.w	80037c6 <persembe+0x62>
						{

						if(persembe_pompa4==0 ){
 8003ba6:	4b4c      	ldr	r3, [pc, #304]	; (8003cd8 <persembe+0x574>)
 8003ba8:	681b      	ldr	r3, [r3, #0]
 8003baa:	2b00      	cmp	r3, #0
 8003bac:	d141      	bne.n	8003c32 <persembe+0x4ce>
							LCD_Send_String_On_Line1("Pmp3");
 8003bae:	484b      	ldr	r0, [pc, #300]	; (8003cdc <persembe+0x578>)
 8003bb0:	f7fc fdde 	bl	8000770 <LCD_Send_String_On_Line1>
							LCD_Send_String_On_Line2(">>Pmp4 Pasif ");
 8003bb4:	484a      	ldr	r0, [pc, #296]	; (8003ce0 <persembe+0x57c>)
 8003bb6:	f7fc fde9 	bl	800078c <LCD_Send_String_On_Line2>



													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){persembe_pompa4=1;veri5[15]=persembe_pompa4;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8003bba:	2110      	movs	r1, #16
 8003bbc:	4845      	ldr	r0, [pc, #276]	; (8003cd4 <persembe+0x570>)
 8003bbe:	f003 fabf 	bl	8007140 <HAL_GPIO_ReadPin>
 8003bc2:	4603      	mov	r3, r0
 8003bc4:	2b01      	cmp	r3, #1
 8003bc6:	d10e      	bne.n	8003be6 <persembe+0x482>
 8003bc8:	4b43      	ldr	r3, [pc, #268]	; (8003cd8 <persembe+0x574>)
 8003bca:	2201      	movs	r2, #1
 8003bcc:	601a      	str	r2, [r3, #0]
 8003bce:	4b42      	ldr	r3, [pc, #264]	; (8003cd8 <persembe+0x574>)
 8003bd0:	681b      	ldr	r3, [r3, #0]
 8003bd2:	4a3c      	ldr	r2, [pc, #240]	; (8003cc4 <persembe+0x560>)
 8003bd4:	63d3      	str	r3, [r2, #60]	; 0x3c
 8003bd6:	221c      	movs	r2, #28
 8003bd8:	493a      	ldr	r1, [pc, #232]	; (8003cc4 <persembe+0x560>)
 8003bda:	483b      	ldr	r0, [pc, #236]	; (8003cc8 <persembe+0x564>)
 8003bdc:	f001 fc20 	bl	8005420 <Flash_Write5>
 8003be0:	2001      	movs	r0, #1
 8003be2:	f7fc fcf5 	bl	80005d0 <LCD_Send_Cmd>

													 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8003be6:	2180      	movs	r1, #128	; 0x80
 8003be8:	4838      	ldr	r0, [pc, #224]	; (8003ccc <persembe+0x568>)
 8003bea:	f003 faa9 	bl	8007140 <HAL_GPIO_ReadPin>
 8003bee:	4603      	mov	r3, r0
 8003bf0:	2b01      	cmp	r3, #1
 8003bf2:	d105      	bne.n	8003c00 <persembe+0x49c>
														 degisken12=0;
 8003bf4:	4b36      	ldr	r3, [pc, #216]	; (8003cd0 <persembe+0x56c>)
 8003bf6:	2200      	movs	r2, #0
 8003bf8:	701a      	strb	r2, [r3, #0]
														 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003bfa:	2001      	movs	r0, #1
 8003bfc:	f7fc fce8 	bl	80005d0 <LCD_Send_Cmd>
													 }
													 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8003c00:	2140      	movs	r1, #64	; 0x40
 8003c02:	4832      	ldr	r0, [pc, #200]	; (8003ccc <persembe+0x568>)
 8003c04:	f003 fa9c 	bl	8007140 <HAL_GPIO_ReadPin>
 8003c08:	4603      	mov	r3, r0
 8003c0a:	2b01      	cmp	r3, #1
 8003c0c:	d105      	bne.n	8003c1a <persembe+0x4b6>
														 degisken12=2;
 8003c0e:	4b30      	ldr	r3, [pc, #192]	; (8003cd0 <persembe+0x56c>)
 8003c10:	2202      	movs	r2, #2
 8003c12:	701a      	strb	r2, [r3, #0]
																								 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003c14:	2001      	movs	r0, #1
 8003c16:	f7fc fcdb 	bl	80005d0 <LCD_Send_Cmd>
																							 }
													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8003c1a:	2120      	movs	r1, #32
 8003c1c:	482d      	ldr	r0, [pc, #180]	; (8003cd4 <persembe+0x570>)
 8003c1e:	f003 fa8f 	bl	8007140 <HAL_GPIO_ReadPin>
 8003c22:	4603      	mov	r3, r0
 8003c24:	2b01      	cmp	r3, #1
 8003c26:	d104      	bne.n	8003c32 <persembe+0x4ce>
																							 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003c28:	2001      	movs	r0, #1
 8003c2a:	f7fc fcd1 	bl	80005d0 <LCD_Send_Cmd>
																							 					 	 Ayar_Gun();
 8003c2e:	f7fc fec5 	bl	80009bc <Ayar_Gun>
																							 					                                          }
						}
						if(persembe_pompa4==1 ){
 8003c32:	4b29      	ldr	r3, [pc, #164]	; (8003cd8 <persembe+0x574>)
 8003c34:	681b      	ldr	r3, [r3, #0]
 8003c36:	2b01      	cmp	r3, #1
 8003c38:	f47f adc5 	bne.w	80037c6 <persembe+0x62>
										LCD_Send_String_On_Line1("Pmp3");
 8003c3c:	4827      	ldr	r0, [pc, #156]	; (8003cdc <persembe+0x578>)
 8003c3e:	f7fc fd97 	bl	8000770 <LCD_Send_String_On_Line1>
										LCD_Send_String_On_Line2(">>Pmp4 Aktif");
 8003c42:	4828      	ldr	r0, [pc, #160]	; (8003ce4 <persembe+0x580>)
 8003c44:	f7fc fda2 	bl	800078c <LCD_Send_String_On_Line2>



																 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){persembe_pompa4=0;veri5[15]=persembe_pompa4;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8003c48:	2110      	movs	r1, #16
 8003c4a:	4822      	ldr	r0, [pc, #136]	; (8003cd4 <persembe+0x570>)
 8003c4c:	f003 fa78 	bl	8007140 <HAL_GPIO_ReadPin>
 8003c50:	4603      	mov	r3, r0
 8003c52:	2b01      	cmp	r3, #1
 8003c54:	d10e      	bne.n	8003c74 <persembe+0x510>
 8003c56:	4b20      	ldr	r3, [pc, #128]	; (8003cd8 <persembe+0x574>)
 8003c58:	2200      	movs	r2, #0
 8003c5a:	601a      	str	r2, [r3, #0]
 8003c5c:	4b1e      	ldr	r3, [pc, #120]	; (8003cd8 <persembe+0x574>)
 8003c5e:	681b      	ldr	r3, [r3, #0]
 8003c60:	4a18      	ldr	r2, [pc, #96]	; (8003cc4 <persembe+0x560>)
 8003c62:	63d3      	str	r3, [r2, #60]	; 0x3c
 8003c64:	221c      	movs	r2, #28
 8003c66:	4917      	ldr	r1, [pc, #92]	; (8003cc4 <persembe+0x560>)
 8003c68:	4817      	ldr	r0, [pc, #92]	; (8003cc8 <persembe+0x564>)
 8003c6a:	f001 fbd9 	bl	8005420 <Flash_Write5>
 8003c6e:	2001      	movs	r0, #1
 8003c70:	f7fc fcae 	bl	80005d0 <LCD_Send_Cmd>

																 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8003c74:	2180      	movs	r1, #128	; 0x80
 8003c76:	4815      	ldr	r0, [pc, #84]	; (8003ccc <persembe+0x568>)
 8003c78:	f003 fa62 	bl	8007140 <HAL_GPIO_ReadPin>
 8003c7c:	4603      	mov	r3, r0
 8003c7e:	2b01      	cmp	r3, #1
 8003c80:	d105      	bne.n	8003c8e <persembe+0x52a>
																	 degisken12=0;
 8003c82:	4b13      	ldr	r3, [pc, #76]	; (8003cd0 <persembe+0x56c>)
 8003c84:	2200      	movs	r2, #0
 8003c86:	701a      	strb	r2, [r3, #0]
																	 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003c88:	2001      	movs	r0, #1
 8003c8a:	f7fc fca1 	bl	80005d0 <LCD_Send_Cmd>
																 }
																 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8003c8e:	2140      	movs	r1, #64	; 0x40
 8003c90:	480e      	ldr	r0, [pc, #56]	; (8003ccc <persembe+0x568>)
 8003c92:	f003 fa55 	bl	8007140 <HAL_GPIO_ReadPin>
 8003c96:	4603      	mov	r3, r0
 8003c98:	2b01      	cmp	r3, #1
 8003c9a:	d105      	bne.n	8003ca8 <persembe+0x544>
																	 degisken12=2;
 8003c9c:	4b0c      	ldr	r3, [pc, #48]	; (8003cd0 <persembe+0x56c>)
 8003c9e:	2202      	movs	r2, #2
 8003ca0:	701a      	strb	r2, [r3, #0]
																	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003ca2:	2001      	movs	r0, #1
 8003ca4:	f7fc fc94 	bl	80005d0 <LCD_Send_Cmd>
																									}
																 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8003ca8:	2120      	movs	r1, #32
 8003caa:	480a      	ldr	r0, [pc, #40]	; (8003cd4 <persembe+0x570>)
 8003cac:	f003 fa48 	bl	8007140 <HAL_GPIO_ReadPin>
 8003cb0:	4603      	mov	r3, r0
 8003cb2:	2b01      	cmp	r3, #1
 8003cb4:	f47f ad87 	bne.w	80037c6 <persembe+0x62>
																										 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003cb8:	2001      	movs	r0, #1
 8003cba:	f7fc fc89 	bl	80005d0 <LCD_Send_Cmd>
																										 					 	 Ayar_Gun();
 8003cbe:	f7fc fe7d 	bl	80009bc <Ayar_Gun>
	if(degisken12==0)
 8003cc2:	e580      	b.n	80037c6 <persembe+0x62>
 8003cc4:	20000144 	.word	0x20000144
 8003cc8:	080e0000 	.word	0x080e0000
 8003ccc:	40020000 	.word	0x40020000
 8003cd0:	20000042 	.word	0x20000042
 8003cd4:	40020800 	.word	0x40020800
 8003cd8:	20000098 	.word	0x20000098
 8003cdc:	08009084 	.word	0x08009084
 8003ce0:	0800908c 	.word	0x0800908c
 8003ce4:	0800909c 	.word	0x0800909c

08003ce8 <cuma>:
						}


}
 }
void cuma(){
 8003ce8:	b580      	push	{r7, lr}
 8003cea:	b082      	sub	sp, #8
 8003cec:	af00      	add	r7, sp, #0
// BURAYA SETLEYİP SIFIR YAPMAMIZ GEREK PAZARTESİ POMPA 1 DEĞERİ İÇİN
	 data5=Flash_Read5(0x080E0000);
 8003cee:	481e      	ldr	r0, [pc, #120]	; (8003d68 <cuma+0x80>)
 8003cf0:	f001 fc46 	bl	8005580 <Flash_Read5>
 8003cf4:	4603      	mov	r3, r0
 8003cf6:	4a1d      	ldr	r2, [pc, #116]	; (8003d6c <cuma+0x84>)
 8003cf8:	6013      	str	r3, [r2, #0]

			 		 	                         for(int i=0;i<30;i++){
 8003cfa:	2300      	movs	r3, #0
 8003cfc:	607b      	str	r3, [r7, #4]
 8003cfe:	e00c      	b.n	8003d1a <cuma+0x32>

			 		 	    	 								 		  read5[i]=data5[i];
 8003d00:	4b1a      	ldr	r3, [pc, #104]	; (8003d6c <cuma+0x84>)
 8003d02:	681a      	ldr	r2, [r3, #0]
 8003d04:	687b      	ldr	r3, [r7, #4]
 8003d06:	009b      	lsls	r3, r3, #2
 8003d08:	4413      	add	r3, r2
 8003d0a:	681a      	ldr	r2, [r3, #0]
 8003d0c:	4918      	ldr	r1, [pc, #96]	; (8003d70 <cuma+0x88>)
 8003d0e:	687b      	ldr	r3, [r7, #4]
 8003d10:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
			 		 	                         for(int i=0;i<30;i++){
 8003d14:	687b      	ldr	r3, [r7, #4]
 8003d16:	3301      	adds	r3, #1
 8003d18:	607b      	str	r3, [r7, #4]
 8003d1a:	687b      	ldr	r3, [r7, #4]
 8003d1c:	2b1d      	cmp	r3, #29
 8003d1e:	ddef      	ble.n	8003d00 <cuma+0x18>
			 		 	    	 								 	   }


			 		 	                       cuma_pompa1=read5[16];
 8003d20:	4b13      	ldr	r3, [pc, #76]	; (8003d70 <cuma+0x88>)
 8003d22:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003d24:	4a13      	ldr	r2, [pc, #76]	; (8003d74 <cuma+0x8c>)
 8003d26:	6013      	str	r3, [r2, #0]
			 		 	                       cuma_pompa2=read5[17];
 8003d28:	4b11      	ldr	r3, [pc, #68]	; (8003d70 <cuma+0x88>)
 8003d2a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003d2c:	4a12      	ldr	r2, [pc, #72]	; (8003d78 <cuma+0x90>)
 8003d2e:	6013      	str	r3, [r2, #0]
			 		 	                       cuma_pompa3=read5[18];
 8003d30:	4b0f      	ldr	r3, [pc, #60]	; (8003d70 <cuma+0x88>)
 8003d32:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003d34:	4a11      	ldr	r2, [pc, #68]	; (8003d7c <cuma+0x94>)
 8003d36:	6013      	str	r3, [r2, #0]
			 		 	                       cuma_pompa4=read5[19];
 8003d38:	4b0d      	ldr	r3, [pc, #52]	; (8003d70 <cuma+0x88>)
 8003d3a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003d3c:	4a10      	ldr	r2, [pc, #64]	; (8003d80 <cuma+0x98>)
 8003d3e:	6013      	str	r3, [r2, #0]
		 		 	                           Flash_Write5(0x080E0000,read5,30);
 8003d40:	221e      	movs	r2, #30
 8003d42:	490b      	ldr	r1, [pc, #44]	; (8003d70 <cuma+0x88>)
 8003d44:	4808      	ldr	r0, [pc, #32]	; (8003d68 <cuma+0x80>)
 8003d46:	f001 fb6b 	bl	8005420 <Flash_Write5>



while(1){
	if(degisken13==0)
 8003d4a:	4b0e      	ldr	r3, [pc, #56]	; (8003d84 <cuma+0x9c>)
 8003d4c:	781b      	ldrb	r3, [r3, #0]
 8003d4e:	2b00      	cmp	r3, #0
 8003d50:	f040 809c 	bne.w	8003e8c <cuma+0x1a4>
			{
				 data5=Flash_Read5(0x080E0000);
 8003d54:	4804      	ldr	r0, [pc, #16]	; (8003d68 <cuma+0x80>)
 8003d56:	f001 fc13 	bl	8005580 <Flash_Read5>
 8003d5a:	4603      	mov	r3, r0
 8003d5c:	4a03      	ldr	r2, [pc, #12]	; (8003d6c <cuma+0x84>)
 8003d5e:	6013      	str	r3, [r2, #0]
				 for(int i=0;i<29;i++)
 8003d60:	2300      	movs	r3, #0
 8003d62:	603b      	str	r3, [r7, #0]
 8003d64:	e01d      	b.n	8003da2 <cuma+0xba>
 8003d66:	bf00      	nop
 8003d68:	080e0000 	.word	0x080e0000
 8003d6c:	20000480 	.word	0x20000480
 8003d70:	20000344 	.word	0x20000344
 8003d74:	2000009c 	.word	0x2000009c
 8003d78:	200000a0 	.word	0x200000a0
 8003d7c:	200000a4 	.word	0x200000a4
 8003d80:	200000a8 	.word	0x200000a8
 8003d84:	20000043 	.word	0x20000043
				 											 							 	{
				 											 							 	veri5[i]=data5[i];
 8003d88:	4bba      	ldr	r3, [pc, #744]	; (8004074 <cuma+0x38c>)
 8003d8a:	681a      	ldr	r2, [r3, #0]
 8003d8c:	683b      	ldr	r3, [r7, #0]
 8003d8e:	009b      	lsls	r3, r3, #2
 8003d90:	4413      	add	r3, r2
 8003d92:	681a      	ldr	r2, [r3, #0]
 8003d94:	49b8      	ldr	r1, [pc, #736]	; (8004078 <cuma+0x390>)
 8003d96:	683b      	ldr	r3, [r7, #0]
 8003d98:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
				 for(int i=0;i<29;i++)
 8003d9c:	683b      	ldr	r3, [r7, #0]
 8003d9e:	3301      	adds	r3, #1
 8003da0:	603b      	str	r3, [r7, #0]
 8003da2:	683b      	ldr	r3, [r7, #0]
 8003da4:	2b1c      	cmp	r3, #28
 8003da6:	ddef      	ble.n	8003d88 <cuma+0xa0>
				 											 							 	}



			if(cuma_pompa1==0 ){
 8003da8:	4bb4      	ldr	r3, [pc, #720]	; (800407c <cuma+0x394>)
 8003daa:	681b      	ldr	r3, [r3, #0]
 8003dac:	2b00      	cmp	r3, #0
 8003dae:	d134      	bne.n	8003e1a <cuma+0x132>
				LCD_Send_String_On_Line1(">>Pmp1 Pasif");
 8003db0:	48b3      	ldr	r0, [pc, #716]	; (8004080 <cuma+0x398>)
 8003db2:	f7fc fcdd 	bl	8000770 <LCD_Send_String_On_Line1>
				LCD_Send_String_On_Line2("Pmp2");
 8003db6:	48b3      	ldr	r0, [pc, #716]	; (8004084 <cuma+0x39c>)
 8003db8:	f7fc fce8 	bl	800078c <LCD_Send_String_On_Line2>



										 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){cuma_pompa1=1;veri5[16]=cuma_pompa1;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8003dbc:	2110      	movs	r1, #16
 8003dbe:	48b2      	ldr	r0, [pc, #712]	; (8004088 <cuma+0x3a0>)
 8003dc0:	f003 f9be 	bl	8007140 <HAL_GPIO_ReadPin>
 8003dc4:	4603      	mov	r3, r0
 8003dc6:	2b01      	cmp	r3, #1
 8003dc8:	d10e      	bne.n	8003de8 <cuma+0x100>
 8003dca:	4bac      	ldr	r3, [pc, #688]	; (800407c <cuma+0x394>)
 8003dcc:	2201      	movs	r2, #1
 8003dce:	601a      	str	r2, [r3, #0]
 8003dd0:	4baa      	ldr	r3, [pc, #680]	; (800407c <cuma+0x394>)
 8003dd2:	681b      	ldr	r3, [r3, #0]
 8003dd4:	4aa8      	ldr	r2, [pc, #672]	; (8004078 <cuma+0x390>)
 8003dd6:	6413      	str	r3, [r2, #64]	; 0x40
 8003dd8:	221c      	movs	r2, #28
 8003dda:	49a7      	ldr	r1, [pc, #668]	; (8004078 <cuma+0x390>)
 8003ddc:	48ab      	ldr	r0, [pc, #684]	; (800408c <cuma+0x3a4>)
 8003dde:	f001 fb1f 	bl	8005420 <Flash_Write5>
 8003de2:	2001      	movs	r0, #1
 8003de4:	f7fc fbf4 	bl	80005d0 <LCD_Send_Cmd>

										 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8003de8:	2180      	movs	r1, #128	; 0x80
 8003dea:	48a9      	ldr	r0, [pc, #676]	; (8004090 <cuma+0x3a8>)
 8003dec:	f003 f9a8 	bl	8007140 <HAL_GPIO_ReadPin>
 8003df0:	4603      	mov	r3, r0
 8003df2:	2b01      	cmp	r3, #1
 8003df4:	d105      	bne.n	8003e02 <cuma+0x11a>
											 degisken13=1;
 8003df6:	4ba7      	ldr	r3, [pc, #668]	; (8004094 <cuma+0x3ac>)
 8003df8:	2201      	movs	r2, #1
 8003dfa:	701a      	strb	r2, [r3, #0]
											 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003dfc:	2001      	movs	r0, #1
 8003dfe:	f7fc fbe7 	bl	80005d0 <LCD_Send_Cmd>

										 }
										 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8003e02:	2120      	movs	r1, #32
 8003e04:	48a0      	ldr	r0, [pc, #640]	; (8004088 <cuma+0x3a0>)
 8003e06:	f003 f99b 	bl	8007140 <HAL_GPIO_ReadPin>
 8003e0a:	4603      	mov	r3, r0
 8003e0c:	2b01      	cmp	r3, #1
 8003e0e:	d104      	bne.n	8003e1a <cuma+0x132>
																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003e10:	2001      	movs	r0, #1
 8003e12:	f7fc fbdd 	bl	80005d0 <LCD_Send_Cmd>
																				 					 	 Ayar_Gun();
 8003e16:	f7fc fdd1 	bl	80009bc <Ayar_Gun>
																				 					                                          }

			}
			if(cuma_pompa1==1 ){
 8003e1a:	4b98      	ldr	r3, [pc, #608]	; (800407c <cuma+0x394>)
 8003e1c:	681b      	ldr	r3, [r3, #0]
 8003e1e:	2b01      	cmp	r3, #1
 8003e20:	d134      	bne.n	8003e8c <cuma+0x1a4>
							LCD_Send_String_On_Line1(">>Pmp1 Aktif");
 8003e22:	489d      	ldr	r0, [pc, #628]	; (8004098 <cuma+0x3b0>)
 8003e24:	f7fc fca4 	bl	8000770 <LCD_Send_String_On_Line1>
							LCD_Send_String_On_Line2("Pmp2");
 8003e28:	4896      	ldr	r0, [pc, #600]	; (8004084 <cuma+0x39c>)
 8003e2a:	f7fc fcaf 	bl	800078c <LCD_Send_String_On_Line2>



													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){cuma_pompa1=0;veri5[16]=cuma_pompa1;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8003e2e:	2110      	movs	r1, #16
 8003e30:	4895      	ldr	r0, [pc, #596]	; (8004088 <cuma+0x3a0>)
 8003e32:	f003 f985 	bl	8007140 <HAL_GPIO_ReadPin>
 8003e36:	4603      	mov	r3, r0
 8003e38:	2b01      	cmp	r3, #1
 8003e3a:	d10e      	bne.n	8003e5a <cuma+0x172>
 8003e3c:	4b8f      	ldr	r3, [pc, #572]	; (800407c <cuma+0x394>)
 8003e3e:	2200      	movs	r2, #0
 8003e40:	601a      	str	r2, [r3, #0]
 8003e42:	4b8e      	ldr	r3, [pc, #568]	; (800407c <cuma+0x394>)
 8003e44:	681b      	ldr	r3, [r3, #0]
 8003e46:	4a8c      	ldr	r2, [pc, #560]	; (8004078 <cuma+0x390>)
 8003e48:	6413      	str	r3, [r2, #64]	; 0x40
 8003e4a:	221c      	movs	r2, #28
 8003e4c:	498a      	ldr	r1, [pc, #552]	; (8004078 <cuma+0x390>)
 8003e4e:	488f      	ldr	r0, [pc, #572]	; (800408c <cuma+0x3a4>)
 8003e50:	f001 fae6 	bl	8005420 <Flash_Write5>
 8003e54:	2001      	movs	r0, #1
 8003e56:	f7fc fbbb 	bl	80005d0 <LCD_Send_Cmd>

													 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8003e5a:	2180      	movs	r1, #128	; 0x80
 8003e5c:	488c      	ldr	r0, [pc, #560]	; (8004090 <cuma+0x3a8>)
 8003e5e:	f003 f96f 	bl	8007140 <HAL_GPIO_ReadPin>
 8003e62:	4603      	mov	r3, r0
 8003e64:	2b01      	cmp	r3, #1
 8003e66:	d105      	bne.n	8003e74 <cuma+0x18c>
														 degisken13=1;
 8003e68:	4b8a      	ldr	r3, [pc, #552]	; (8004094 <cuma+0x3ac>)
 8003e6a:	2201      	movs	r2, #1
 8003e6c:	701a      	strb	r2, [r3, #0]
														 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003e6e:	2001      	movs	r0, #1
 8003e70:	f7fc fbae 	bl	80005d0 <LCD_Send_Cmd>

													 }
													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8003e74:	2120      	movs	r1, #32
 8003e76:	4884      	ldr	r0, [pc, #528]	; (8004088 <cuma+0x3a0>)
 8003e78:	f003 f962 	bl	8007140 <HAL_GPIO_ReadPin>
 8003e7c:	4603      	mov	r3, r0
 8003e7e:	2b01      	cmp	r3, #1
 8003e80:	d104      	bne.n	8003e8c <cuma+0x1a4>
																							 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003e82:	2001      	movs	r0, #1
 8003e84:	f7fc fba4 	bl	80005d0 <LCD_Send_Cmd>
																							 					 	 Ayar_Gun();
 8003e88:	f7fc fd98 	bl	80009bc <Ayar_Gun>
						}


			}

	if(degisken13==1)
 8003e8c:	4b81      	ldr	r3, [pc, #516]	; (8004094 <cuma+0x3ac>)
 8003e8e:	781b      	ldrb	r3, [r3, #0]
 8003e90:	2b01      	cmp	r3, #1
 8003e92:	f040 808c 	bne.w	8003fae <cuma+0x2c6>
				{

				if(cuma_pompa2==0 ){
 8003e96:	4b81      	ldr	r3, [pc, #516]	; (800409c <cuma+0x3b4>)
 8003e98:	681b      	ldr	r3, [r3, #0]
 8003e9a:	2b00      	cmp	r3, #0
 8003e9c:	d141      	bne.n	8003f22 <cuma+0x23a>
					LCD_Send_String_On_Line1("Pmp1");
 8003e9e:	4880      	ldr	r0, [pc, #512]	; (80040a0 <cuma+0x3b8>)
 8003ea0:	f7fc fc66 	bl	8000770 <LCD_Send_String_On_Line1>
					LCD_Send_String_On_Line2(">>Pmp2 Pasif");
 8003ea4:	487f      	ldr	r0, [pc, #508]	; (80040a4 <cuma+0x3bc>)
 8003ea6:	f7fc fc71 	bl	800078c <LCD_Send_String_On_Line2>



											 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){cuma_pompa2=1;veri5[17]=cuma_pompa2;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8003eaa:	2110      	movs	r1, #16
 8003eac:	4876      	ldr	r0, [pc, #472]	; (8004088 <cuma+0x3a0>)
 8003eae:	f003 f947 	bl	8007140 <HAL_GPIO_ReadPin>
 8003eb2:	4603      	mov	r3, r0
 8003eb4:	2b01      	cmp	r3, #1
 8003eb6:	d10e      	bne.n	8003ed6 <cuma+0x1ee>
 8003eb8:	4b78      	ldr	r3, [pc, #480]	; (800409c <cuma+0x3b4>)
 8003eba:	2201      	movs	r2, #1
 8003ebc:	601a      	str	r2, [r3, #0]
 8003ebe:	4b77      	ldr	r3, [pc, #476]	; (800409c <cuma+0x3b4>)
 8003ec0:	681b      	ldr	r3, [r3, #0]
 8003ec2:	4a6d      	ldr	r2, [pc, #436]	; (8004078 <cuma+0x390>)
 8003ec4:	6453      	str	r3, [r2, #68]	; 0x44
 8003ec6:	221c      	movs	r2, #28
 8003ec8:	496b      	ldr	r1, [pc, #428]	; (8004078 <cuma+0x390>)
 8003eca:	4870      	ldr	r0, [pc, #448]	; (800408c <cuma+0x3a4>)
 8003ecc:	f001 faa8 	bl	8005420 <Flash_Write5>
 8003ed0:	2001      	movs	r0, #1
 8003ed2:	f7fc fb7d 	bl	80005d0 <LCD_Send_Cmd>

											 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8003ed6:	2180      	movs	r1, #128	; 0x80
 8003ed8:	486d      	ldr	r0, [pc, #436]	; (8004090 <cuma+0x3a8>)
 8003eda:	f003 f931 	bl	8007140 <HAL_GPIO_ReadPin>
 8003ede:	4603      	mov	r3, r0
 8003ee0:	2b01      	cmp	r3, #1
 8003ee2:	d105      	bne.n	8003ef0 <cuma+0x208>
												 degisken13=2;
 8003ee4:	4b6b      	ldr	r3, [pc, #428]	; (8004094 <cuma+0x3ac>)
 8003ee6:	2202      	movs	r2, #2
 8003ee8:	701a      	strb	r2, [r3, #0]
												 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003eea:	2001      	movs	r0, #1
 8003eec:	f7fc fb70 	bl	80005d0 <LCD_Send_Cmd>
											 }
											 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8003ef0:	2140      	movs	r1, #64	; 0x40
 8003ef2:	4867      	ldr	r0, [pc, #412]	; (8004090 <cuma+0x3a8>)
 8003ef4:	f003 f924 	bl	8007140 <HAL_GPIO_ReadPin>
 8003ef8:	4603      	mov	r3, r0
 8003efa:	2b01      	cmp	r3, #1
 8003efc:	d105      	bne.n	8003f0a <cuma+0x222>
																						 degisken13=1;
 8003efe:	4b65      	ldr	r3, [pc, #404]	; (8004094 <cuma+0x3ac>)
 8003f00:	2201      	movs	r2, #1
 8003f02:	701a      	strb	r2, [r3, #0]
																						 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003f04:	2001      	movs	r0, #1
 8003f06:	f7fc fb63 	bl	80005d0 <LCD_Send_Cmd>
																					 }
											 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8003f0a:	2120      	movs	r1, #32
 8003f0c:	485e      	ldr	r0, [pc, #376]	; (8004088 <cuma+0x3a0>)
 8003f0e:	f003 f917 	bl	8007140 <HAL_GPIO_ReadPin>
 8003f12:	4603      	mov	r3, r0
 8003f14:	2b01      	cmp	r3, #1
 8003f16:	d104      	bne.n	8003f22 <cuma+0x23a>
																					 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003f18:	2001      	movs	r0, #1
 8003f1a:	f7fc fb59 	bl	80005d0 <LCD_Send_Cmd>
																					 					 	 Ayar_Gun();
 8003f1e:	f7fc fd4d 	bl	80009bc <Ayar_Gun>
																					 					                                          }
				}
				if(cuma_pompa2==1 ){
 8003f22:	4b5e      	ldr	r3, [pc, #376]	; (800409c <cuma+0x3b4>)
 8003f24:	681b      	ldr	r3, [r3, #0]
 8003f26:	2b01      	cmp	r3, #1
 8003f28:	d141      	bne.n	8003fae <cuma+0x2c6>
								LCD_Send_String_On_Line1("Pmp1");
 8003f2a:	485d      	ldr	r0, [pc, #372]	; (80040a0 <cuma+0x3b8>)
 8003f2c:	f7fc fc20 	bl	8000770 <LCD_Send_String_On_Line1>
								LCD_Send_String_On_Line2(">>Pmp2 Aktif");
 8003f30:	485d      	ldr	r0, [pc, #372]	; (80040a8 <cuma+0x3c0>)
 8003f32:	f7fc fc2b 	bl	800078c <LCD_Send_String_On_Line2>



														 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){cuma_pompa2=0;veri5[17]=cuma_pompa2;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8003f36:	2110      	movs	r1, #16
 8003f38:	4853      	ldr	r0, [pc, #332]	; (8004088 <cuma+0x3a0>)
 8003f3a:	f003 f901 	bl	8007140 <HAL_GPIO_ReadPin>
 8003f3e:	4603      	mov	r3, r0
 8003f40:	2b01      	cmp	r3, #1
 8003f42:	d10e      	bne.n	8003f62 <cuma+0x27a>
 8003f44:	4b55      	ldr	r3, [pc, #340]	; (800409c <cuma+0x3b4>)
 8003f46:	2200      	movs	r2, #0
 8003f48:	601a      	str	r2, [r3, #0]
 8003f4a:	4b54      	ldr	r3, [pc, #336]	; (800409c <cuma+0x3b4>)
 8003f4c:	681b      	ldr	r3, [r3, #0]
 8003f4e:	4a4a      	ldr	r2, [pc, #296]	; (8004078 <cuma+0x390>)
 8003f50:	6453      	str	r3, [r2, #68]	; 0x44
 8003f52:	221c      	movs	r2, #28
 8003f54:	4948      	ldr	r1, [pc, #288]	; (8004078 <cuma+0x390>)
 8003f56:	484d      	ldr	r0, [pc, #308]	; (800408c <cuma+0x3a4>)
 8003f58:	f001 fa62 	bl	8005420 <Flash_Write5>
 8003f5c:	2001      	movs	r0, #1
 8003f5e:	f7fc fb37 	bl	80005d0 <LCD_Send_Cmd>

														 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8003f62:	2180      	movs	r1, #128	; 0x80
 8003f64:	484a      	ldr	r0, [pc, #296]	; (8004090 <cuma+0x3a8>)
 8003f66:	f003 f8eb 	bl	8007140 <HAL_GPIO_ReadPin>
 8003f6a:	4603      	mov	r3, r0
 8003f6c:	2b01      	cmp	r3, #1
 8003f6e:	d105      	bne.n	8003f7c <cuma+0x294>
															 degisken13=2;
 8003f70:	4b48      	ldr	r3, [pc, #288]	; (8004094 <cuma+0x3ac>)
 8003f72:	2202      	movs	r2, #2
 8003f74:	701a      	strb	r2, [r3, #0]
															 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003f76:	2001      	movs	r0, #1
 8003f78:	f7fc fb2a 	bl	80005d0 <LCD_Send_Cmd>
														 }
														 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8003f7c:	2140      	movs	r1, #64	; 0x40
 8003f7e:	4844      	ldr	r0, [pc, #272]	; (8004090 <cuma+0x3a8>)
 8003f80:	f003 f8de 	bl	8007140 <HAL_GPIO_ReadPin>
 8003f84:	4603      	mov	r3, r0
 8003f86:	2b01      	cmp	r3, #1
 8003f88:	d105      	bne.n	8003f96 <cuma+0x2ae>
															 degisken13=0;
 8003f8a:	4b42      	ldr	r3, [pc, #264]	; (8004094 <cuma+0x3ac>)
 8003f8c:	2200      	movs	r2, #0
 8003f8e:	701a      	strb	r2, [r3, #0]
															LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003f90:	2001      	movs	r0, #1
 8003f92:	f7fc fb1d 	bl	80005d0 <LCD_Send_Cmd>
																							}
														 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8003f96:	2120      	movs	r1, #32
 8003f98:	483b      	ldr	r0, [pc, #236]	; (8004088 <cuma+0x3a0>)
 8003f9a:	f003 f8d1 	bl	8007140 <HAL_GPIO_ReadPin>
 8003f9e:	4603      	mov	r3, r0
 8003fa0:	2b01      	cmp	r3, #1
 8003fa2:	d104      	bne.n	8003fae <cuma+0x2c6>
																								 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8003fa4:	2001      	movs	r0, #1
 8003fa6:	f7fc fb13 	bl	80005d0 <LCD_Send_Cmd>
																								 					 	 Ayar_Gun();
 8003faa:	f7fc fd07 	bl	80009bc <Ayar_Gun>

				}



	if(degisken13==2)
 8003fae:	4b39      	ldr	r3, [pc, #228]	; (8004094 <cuma+0x3ac>)
 8003fb0:	781b      	ldrb	r3, [r3, #0]
 8003fb2:	2b02      	cmp	r3, #2
 8003fb4:	f040 80b4 	bne.w	8004120 <cuma+0x438>
					{

					if(cuma_pompa3==0 ){
 8003fb8:	4b3c      	ldr	r3, [pc, #240]	; (80040ac <cuma+0x3c4>)
 8003fba:	681b      	ldr	r3, [r3, #0]
 8003fbc:	2b00      	cmp	r3, #0
 8003fbe:	d141      	bne.n	8004044 <cuma+0x35c>
						LCD_Send_String_On_Line1(">>Pmp3 Pasif");
 8003fc0:	483b      	ldr	r0, [pc, #236]	; (80040b0 <cuma+0x3c8>)
 8003fc2:	f7fc fbd5 	bl	8000770 <LCD_Send_String_On_Line1>
						LCD_Send_String_On_Line2("Pmp4 ");
 8003fc6:	483b      	ldr	r0, [pc, #236]	; (80040b4 <cuma+0x3cc>)
 8003fc8:	f7fc fbe0 	bl	800078c <LCD_Send_String_On_Line2>



												 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){cuma_pompa3=1;veri5[18]=cuma_pompa3;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8003fcc:	2110      	movs	r1, #16
 8003fce:	482e      	ldr	r0, [pc, #184]	; (8004088 <cuma+0x3a0>)
 8003fd0:	f003 f8b6 	bl	8007140 <HAL_GPIO_ReadPin>
 8003fd4:	4603      	mov	r3, r0
 8003fd6:	2b01      	cmp	r3, #1
 8003fd8:	d10e      	bne.n	8003ff8 <cuma+0x310>
 8003fda:	4b34      	ldr	r3, [pc, #208]	; (80040ac <cuma+0x3c4>)
 8003fdc:	2201      	movs	r2, #1
 8003fde:	601a      	str	r2, [r3, #0]
 8003fe0:	4b32      	ldr	r3, [pc, #200]	; (80040ac <cuma+0x3c4>)
 8003fe2:	681b      	ldr	r3, [r3, #0]
 8003fe4:	4a24      	ldr	r2, [pc, #144]	; (8004078 <cuma+0x390>)
 8003fe6:	6493      	str	r3, [r2, #72]	; 0x48
 8003fe8:	221c      	movs	r2, #28
 8003fea:	4923      	ldr	r1, [pc, #140]	; (8004078 <cuma+0x390>)
 8003fec:	4827      	ldr	r0, [pc, #156]	; (800408c <cuma+0x3a4>)
 8003fee:	f001 fa17 	bl	8005420 <Flash_Write5>
 8003ff2:	2001      	movs	r0, #1
 8003ff4:	f7fc faec 	bl	80005d0 <LCD_Send_Cmd>

												 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8003ff8:	2180      	movs	r1, #128	; 0x80
 8003ffa:	4825      	ldr	r0, [pc, #148]	; (8004090 <cuma+0x3a8>)
 8003ffc:	f003 f8a0 	bl	8007140 <HAL_GPIO_ReadPin>
 8004000:	4603      	mov	r3, r0
 8004002:	2b01      	cmp	r3, #1
 8004004:	d105      	bne.n	8004012 <cuma+0x32a>
													 degisken13=3;
 8004006:	4b23      	ldr	r3, [pc, #140]	; (8004094 <cuma+0x3ac>)
 8004008:	2203      	movs	r2, #3
 800400a:	701a      	strb	r2, [r3, #0]
													 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800400c:	2001      	movs	r0, #1
 800400e:	f7fc fadf 	bl	80005d0 <LCD_Send_Cmd>
												 }
												 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8004012:	2140      	movs	r1, #64	; 0x40
 8004014:	481e      	ldr	r0, [pc, #120]	; (8004090 <cuma+0x3a8>)
 8004016:	f003 f893 	bl	8007140 <HAL_GPIO_ReadPin>
 800401a:	4603      	mov	r3, r0
 800401c:	2b01      	cmp	r3, #1
 800401e:	d105      	bne.n	800402c <cuma+0x344>
													 degisken13=1;
 8004020:	4b1c      	ldr	r3, [pc, #112]	; (8004094 <cuma+0x3ac>)
 8004022:	2201      	movs	r2, #1
 8004024:	701a      	strb	r2, [r3, #0]
																							 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004026:	2001      	movs	r0, #1
 8004028:	f7fc fad2 	bl	80005d0 <LCD_Send_Cmd>
																						 }
												 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 800402c:	2120      	movs	r1, #32
 800402e:	4816      	ldr	r0, [pc, #88]	; (8004088 <cuma+0x3a0>)
 8004030:	f003 f886 	bl	8007140 <HAL_GPIO_ReadPin>
 8004034:	4603      	mov	r3, r0
 8004036:	2b01      	cmp	r3, #1
 8004038:	d104      	bne.n	8004044 <cuma+0x35c>
																						 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800403a:	2001      	movs	r0, #1
 800403c:	f7fc fac8 	bl	80005d0 <LCD_Send_Cmd>
																						 					 	 Ayar_Gun();
 8004040:	f7fc fcbc 	bl	80009bc <Ayar_Gun>
																						 					                                          }
					}
					if(cuma_pompa3==1 ){
 8004044:	4b19      	ldr	r3, [pc, #100]	; (80040ac <cuma+0x3c4>)
 8004046:	681b      	ldr	r3, [r3, #0]
 8004048:	2b01      	cmp	r3, #1
 800404a:	d169      	bne.n	8004120 <cuma+0x438>
									LCD_Send_String_On_Line1(">>Pmp3 Aktif");
 800404c:	481a      	ldr	r0, [pc, #104]	; (80040b8 <cuma+0x3d0>)
 800404e:	f7fc fb8f 	bl	8000770 <LCD_Send_String_On_Line1>
									LCD_Send_String_On_Line2("Pmp4");
 8004052:	481a      	ldr	r0, [pc, #104]	; (80040bc <cuma+0x3d4>)
 8004054:	f7fc fb9a 	bl	800078c <LCD_Send_String_On_Line2>



															 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){cuma_pompa3=0;veri5[18]=cuma_pompa3;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8004058:	2110      	movs	r1, #16
 800405a:	480b      	ldr	r0, [pc, #44]	; (8004088 <cuma+0x3a0>)
 800405c:	f003 f870 	bl	8007140 <HAL_GPIO_ReadPin>
 8004060:	4603      	mov	r3, r0
 8004062:	2b01      	cmp	r3, #1
 8004064:	d136      	bne.n	80040d4 <cuma+0x3ec>
 8004066:	4b11      	ldr	r3, [pc, #68]	; (80040ac <cuma+0x3c4>)
 8004068:	2200      	movs	r2, #0
 800406a:	601a      	str	r2, [r3, #0]
 800406c:	4b0f      	ldr	r3, [pc, #60]	; (80040ac <cuma+0x3c4>)
 800406e:	681b      	ldr	r3, [r3, #0]
 8004070:	e026      	b.n	80040c0 <cuma+0x3d8>
 8004072:	bf00      	nop
 8004074:	20000480 	.word	0x20000480
 8004078:	20000144 	.word	0x20000144
 800407c:	2000009c 	.word	0x2000009c
 8004080:	08009004 	.word	0x08009004
 8004084:	08009014 	.word	0x08009014
 8004088:	40020800 	.word	0x40020800
 800408c:	080e0000 	.word	0x080e0000
 8004090:	40020000 	.word	0x40020000
 8004094:	20000043 	.word	0x20000043
 8004098:	0800901c 	.word	0x0800901c
 800409c:	200000a0 	.word	0x200000a0
 80040a0:	0800902c 	.word	0x0800902c
 80040a4:	08009034 	.word	0x08009034
 80040a8:	08009044 	.word	0x08009044
 80040ac:	200000a4 	.word	0x200000a4
 80040b0:	08009054 	.word	0x08009054
 80040b4:	08009064 	.word	0x08009064
 80040b8:	0800906c 	.word	0x0800906c
 80040bc:	0800907c 	.word	0x0800907c
 80040c0:	4a61      	ldr	r2, [pc, #388]	; (8004248 <cuma+0x560>)
 80040c2:	6493      	str	r3, [r2, #72]	; 0x48
 80040c4:	221c      	movs	r2, #28
 80040c6:	4960      	ldr	r1, [pc, #384]	; (8004248 <cuma+0x560>)
 80040c8:	4860      	ldr	r0, [pc, #384]	; (800424c <cuma+0x564>)
 80040ca:	f001 f9a9 	bl	8005420 <Flash_Write5>
 80040ce:	2001      	movs	r0, #1
 80040d0:	f7fc fa7e 	bl	80005d0 <LCD_Send_Cmd>

															 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 80040d4:	2180      	movs	r1, #128	; 0x80
 80040d6:	485e      	ldr	r0, [pc, #376]	; (8004250 <cuma+0x568>)
 80040d8:	f003 f832 	bl	8007140 <HAL_GPIO_ReadPin>
 80040dc:	4603      	mov	r3, r0
 80040de:	2b01      	cmp	r3, #1
 80040e0:	d105      	bne.n	80040ee <cuma+0x406>
																 degisken13=3;
 80040e2:	4b5c      	ldr	r3, [pc, #368]	; (8004254 <cuma+0x56c>)
 80040e4:	2203      	movs	r2, #3
 80040e6:	701a      	strb	r2, [r3, #0]
																 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80040e8:	2001      	movs	r0, #1
 80040ea:	f7fc fa71 	bl	80005d0 <LCD_Send_Cmd>
															 }
															 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 80040ee:	2140      	movs	r1, #64	; 0x40
 80040f0:	4857      	ldr	r0, [pc, #348]	; (8004250 <cuma+0x568>)
 80040f2:	f003 f825 	bl	8007140 <HAL_GPIO_ReadPin>
 80040f6:	4603      	mov	r3, r0
 80040f8:	2b01      	cmp	r3, #1
 80040fa:	d105      	bne.n	8004108 <cuma+0x420>
																 degisken13=1;
 80040fc:	4b55      	ldr	r3, [pc, #340]	; (8004254 <cuma+0x56c>)
 80040fe:	2201      	movs	r2, #1
 8004100:	701a      	strb	r2, [r3, #0]
																LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004102:	2001      	movs	r0, #1
 8004104:	f7fc fa64 	bl	80005d0 <LCD_Send_Cmd>
																								}
															 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8004108:	2120      	movs	r1, #32
 800410a:	4853      	ldr	r0, [pc, #332]	; (8004258 <cuma+0x570>)
 800410c:	f003 f818 	bl	8007140 <HAL_GPIO_ReadPin>
 8004110:	4603      	mov	r3, r0
 8004112:	2b01      	cmp	r3, #1
 8004114:	d104      	bne.n	8004120 <cuma+0x438>
																									 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004116:	2001      	movs	r0, #1
 8004118:	f7fc fa5a 	bl	80005d0 <LCD_Send_Cmd>
																									 					 	 Ayar_Gun();
 800411c:	f7fc fc4e 	bl	80009bc <Ayar_Gun>
																									 					                                          }
								}


					}
	if(degisken13==3)
 8004120:	4b4c      	ldr	r3, [pc, #304]	; (8004254 <cuma+0x56c>)
 8004122:	781b      	ldrb	r3, [r3, #0]
 8004124:	2b03      	cmp	r3, #3
 8004126:	f47f ae10 	bne.w	8003d4a <cuma+0x62>
						{

						if(cuma_pompa4==0 ){
 800412a:	4b4c      	ldr	r3, [pc, #304]	; (800425c <cuma+0x574>)
 800412c:	681b      	ldr	r3, [r3, #0]
 800412e:	2b00      	cmp	r3, #0
 8004130:	d141      	bne.n	80041b6 <cuma+0x4ce>
							LCD_Send_String_On_Line1("Pmp3");
 8004132:	484b      	ldr	r0, [pc, #300]	; (8004260 <cuma+0x578>)
 8004134:	f7fc fb1c 	bl	8000770 <LCD_Send_String_On_Line1>
							LCD_Send_String_On_Line2(">>Pmp4 Pasif ");
 8004138:	484a      	ldr	r0, [pc, #296]	; (8004264 <cuma+0x57c>)
 800413a:	f7fc fb27 	bl	800078c <LCD_Send_String_On_Line2>



													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){cuma_pompa4=1;veri5[19]=cuma_pompa4;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 800413e:	2110      	movs	r1, #16
 8004140:	4845      	ldr	r0, [pc, #276]	; (8004258 <cuma+0x570>)
 8004142:	f002 fffd 	bl	8007140 <HAL_GPIO_ReadPin>
 8004146:	4603      	mov	r3, r0
 8004148:	2b01      	cmp	r3, #1
 800414a:	d10e      	bne.n	800416a <cuma+0x482>
 800414c:	4b43      	ldr	r3, [pc, #268]	; (800425c <cuma+0x574>)
 800414e:	2201      	movs	r2, #1
 8004150:	601a      	str	r2, [r3, #0]
 8004152:	4b42      	ldr	r3, [pc, #264]	; (800425c <cuma+0x574>)
 8004154:	681b      	ldr	r3, [r3, #0]
 8004156:	4a3c      	ldr	r2, [pc, #240]	; (8004248 <cuma+0x560>)
 8004158:	64d3      	str	r3, [r2, #76]	; 0x4c
 800415a:	221c      	movs	r2, #28
 800415c:	493a      	ldr	r1, [pc, #232]	; (8004248 <cuma+0x560>)
 800415e:	483b      	ldr	r0, [pc, #236]	; (800424c <cuma+0x564>)
 8004160:	f001 f95e 	bl	8005420 <Flash_Write5>
 8004164:	2001      	movs	r0, #1
 8004166:	f7fc fa33 	bl	80005d0 <LCD_Send_Cmd>

													 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 800416a:	2180      	movs	r1, #128	; 0x80
 800416c:	4838      	ldr	r0, [pc, #224]	; (8004250 <cuma+0x568>)
 800416e:	f002 ffe7 	bl	8007140 <HAL_GPIO_ReadPin>
 8004172:	4603      	mov	r3, r0
 8004174:	2b01      	cmp	r3, #1
 8004176:	d105      	bne.n	8004184 <cuma+0x49c>
														 degisken13=0;
 8004178:	4b36      	ldr	r3, [pc, #216]	; (8004254 <cuma+0x56c>)
 800417a:	2200      	movs	r2, #0
 800417c:	701a      	strb	r2, [r3, #0]
														 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800417e:	2001      	movs	r0, #1
 8004180:	f7fc fa26 	bl	80005d0 <LCD_Send_Cmd>
													 }
													 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8004184:	2140      	movs	r1, #64	; 0x40
 8004186:	4832      	ldr	r0, [pc, #200]	; (8004250 <cuma+0x568>)
 8004188:	f002 ffda 	bl	8007140 <HAL_GPIO_ReadPin>
 800418c:	4603      	mov	r3, r0
 800418e:	2b01      	cmp	r3, #1
 8004190:	d105      	bne.n	800419e <cuma+0x4b6>
														 degisken13=2;
 8004192:	4b30      	ldr	r3, [pc, #192]	; (8004254 <cuma+0x56c>)
 8004194:	2202      	movs	r2, #2
 8004196:	701a      	strb	r2, [r3, #0]
																								 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004198:	2001      	movs	r0, #1
 800419a:	f7fc fa19 	bl	80005d0 <LCD_Send_Cmd>
																							 }
													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 800419e:	2120      	movs	r1, #32
 80041a0:	482d      	ldr	r0, [pc, #180]	; (8004258 <cuma+0x570>)
 80041a2:	f002 ffcd 	bl	8007140 <HAL_GPIO_ReadPin>
 80041a6:	4603      	mov	r3, r0
 80041a8:	2b01      	cmp	r3, #1
 80041aa:	d104      	bne.n	80041b6 <cuma+0x4ce>
																							 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80041ac:	2001      	movs	r0, #1
 80041ae:	f7fc fa0f 	bl	80005d0 <LCD_Send_Cmd>
																							 					 	 Ayar_Gun();
 80041b2:	f7fc fc03 	bl	80009bc <Ayar_Gun>
																							 					                                          }
						}
						if(cuma_pompa4==1 ){
 80041b6:	4b29      	ldr	r3, [pc, #164]	; (800425c <cuma+0x574>)
 80041b8:	681b      	ldr	r3, [r3, #0]
 80041ba:	2b01      	cmp	r3, #1
 80041bc:	f47f adc5 	bne.w	8003d4a <cuma+0x62>
										LCD_Send_String_On_Line1("Pmp3");
 80041c0:	4827      	ldr	r0, [pc, #156]	; (8004260 <cuma+0x578>)
 80041c2:	f7fc fad5 	bl	8000770 <LCD_Send_String_On_Line1>
										LCD_Send_String_On_Line2(">>Pmp4 Aktif");
 80041c6:	4828      	ldr	r0, [pc, #160]	; (8004268 <cuma+0x580>)
 80041c8:	f7fc fae0 	bl	800078c <LCD_Send_String_On_Line2>



																 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){cuma_pompa4=0;veri5[19]=cuma_pompa4;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 80041cc:	2110      	movs	r1, #16
 80041ce:	4822      	ldr	r0, [pc, #136]	; (8004258 <cuma+0x570>)
 80041d0:	f002 ffb6 	bl	8007140 <HAL_GPIO_ReadPin>
 80041d4:	4603      	mov	r3, r0
 80041d6:	2b01      	cmp	r3, #1
 80041d8:	d10e      	bne.n	80041f8 <cuma+0x510>
 80041da:	4b20      	ldr	r3, [pc, #128]	; (800425c <cuma+0x574>)
 80041dc:	2200      	movs	r2, #0
 80041de:	601a      	str	r2, [r3, #0]
 80041e0:	4b1e      	ldr	r3, [pc, #120]	; (800425c <cuma+0x574>)
 80041e2:	681b      	ldr	r3, [r3, #0]
 80041e4:	4a18      	ldr	r2, [pc, #96]	; (8004248 <cuma+0x560>)
 80041e6:	64d3      	str	r3, [r2, #76]	; 0x4c
 80041e8:	221c      	movs	r2, #28
 80041ea:	4917      	ldr	r1, [pc, #92]	; (8004248 <cuma+0x560>)
 80041ec:	4817      	ldr	r0, [pc, #92]	; (800424c <cuma+0x564>)
 80041ee:	f001 f917 	bl	8005420 <Flash_Write5>
 80041f2:	2001      	movs	r0, #1
 80041f4:	f7fc f9ec 	bl	80005d0 <LCD_Send_Cmd>

																 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 80041f8:	2180      	movs	r1, #128	; 0x80
 80041fa:	4815      	ldr	r0, [pc, #84]	; (8004250 <cuma+0x568>)
 80041fc:	f002 ffa0 	bl	8007140 <HAL_GPIO_ReadPin>
 8004200:	4603      	mov	r3, r0
 8004202:	2b01      	cmp	r3, #1
 8004204:	d105      	bne.n	8004212 <cuma+0x52a>
																	 degisken13=0;
 8004206:	4b13      	ldr	r3, [pc, #76]	; (8004254 <cuma+0x56c>)
 8004208:	2200      	movs	r2, #0
 800420a:	701a      	strb	r2, [r3, #0]
																	 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800420c:	2001      	movs	r0, #1
 800420e:	f7fc f9df 	bl	80005d0 <LCD_Send_Cmd>
																 }
																 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8004212:	2140      	movs	r1, #64	; 0x40
 8004214:	480e      	ldr	r0, [pc, #56]	; (8004250 <cuma+0x568>)
 8004216:	f002 ff93 	bl	8007140 <HAL_GPIO_ReadPin>
 800421a:	4603      	mov	r3, r0
 800421c:	2b01      	cmp	r3, #1
 800421e:	d105      	bne.n	800422c <cuma+0x544>
																	 degisken13=2;
 8004220:	4b0c      	ldr	r3, [pc, #48]	; (8004254 <cuma+0x56c>)
 8004222:	2202      	movs	r2, #2
 8004224:	701a      	strb	r2, [r3, #0]
																	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004226:	2001      	movs	r0, #1
 8004228:	f7fc f9d2 	bl	80005d0 <LCD_Send_Cmd>
																									}
																 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 800422c:	2120      	movs	r1, #32
 800422e:	480a      	ldr	r0, [pc, #40]	; (8004258 <cuma+0x570>)
 8004230:	f002 ff86 	bl	8007140 <HAL_GPIO_ReadPin>
 8004234:	4603      	mov	r3, r0
 8004236:	2b01      	cmp	r3, #1
 8004238:	f47f ad87 	bne.w	8003d4a <cuma+0x62>
																										 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800423c:	2001      	movs	r0, #1
 800423e:	f7fc f9c7 	bl	80005d0 <LCD_Send_Cmd>
																										 					 	 Ayar_Gun();
 8004242:	f7fc fbbb 	bl	80009bc <Ayar_Gun>
	if(degisken13==0)
 8004246:	e580      	b.n	8003d4a <cuma+0x62>
 8004248:	20000144 	.word	0x20000144
 800424c:	080e0000 	.word	0x080e0000
 8004250:	40020000 	.word	0x40020000
 8004254:	20000043 	.word	0x20000043
 8004258:	40020800 	.word	0x40020800
 800425c:	200000a8 	.word	0x200000a8
 8004260:	08009084 	.word	0x08009084
 8004264:	0800908c 	.word	0x0800908c
 8004268:	0800909c 	.word	0x0800909c

0800426c <cumartesi>:
						}


}
 }
void cumartesi(){
 800426c:	b580      	push	{r7, lr}
 800426e:	b082      	sub	sp, #8
 8004270:	af00      	add	r7, sp, #0
// BURAYA SETLEYİP SIFIR YAPMAMIZ GEREK PAZARTESİ POMPA 1 DEĞERİ İÇİN
	 data5=Flash_Read5(0x080E0000);
 8004272:	481e      	ldr	r0, [pc, #120]	; (80042ec <cumartesi+0x80>)
 8004274:	f001 f984 	bl	8005580 <Flash_Read5>
 8004278:	4603      	mov	r3, r0
 800427a:	4a1d      	ldr	r2, [pc, #116]	; (80042f0 <cumartesi+0x84>)
 800427c:	6013      	str	r3, [r2, #0]
			 		 	                         for(int i=0;i<30;i++){
 800427e:	2300      	movs	r3, #0
 8004280:	607b      	str	r3, [r7, #4]
 8004282:	e00c      	b.n	800429e <cumartesi+0x32>

			 		 	    	 								 		  read5[i]=data5[i];
 8004284:	4b1a      	ldr	r3, [pc, #104]	; (80042f0 <cumartesi+0x84>)
 8004286:	681a      	ldr	r2, [r3, #0]
 8004288:	687b      	ldr	r3, [r7, #4]
 800428a:	009b      	lsls	r3, r3, #2
 800428c:	4413      	add	r3, r2
 800428e:	681a      	ldr	r2, [r3, #0]
 8004290:	4918      	ldr	r1, [pc, #96]	; (80042f4 <cumartesi+0x88>)
 8004292:	687b      	ldr	r3, [r7, #4]
 8004294:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
			 		 	                         for(int i=0;i<30;i++){
 8004298:	687b      	ldr	r3, [r7, #4]
 800429a:	3301      	adds	r3, #1
 800429c:	607b      	str	r3, [r7, #4]
 800429e:	687b      	ldr	r3, [r7, #4]
 80042a0:	2b1d      	cmp	r3, #29
 80042a2:	ddef      	ble.n	8004284 <cumartesi+0x18>
			 		 	    	 								 	   }


			 		 	                      cumartesi_pompa1=read5[20];
 80042a4:	4b13      	ldr	r3, [pc, #76]	; (80042f4 <cumartesi+0x88>)
 80042a6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80042a8:	4a13      	ldr	r2, [pc, #76]	; (80042f8 <cumartesi+0x8c>)
 80042aa:	6013      	str	r3, [r2, #0]
			 		 	                      cumartesi_pompa2=read5[21];
 80042ac:	4b11      	ldr	r3, [pc, #68]	; (80042f4 <cumartesi+0x88>)
 80042ae:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80042b0:	4a12      	ldr	r2, [pc, #72]	; (80042fc <cumartesi+0x90>)
 80042b2:	6013      	str	r3, [r2, #0]
			 		 	                      cumartesi_pompa3=read5[22];
 80042b4:	4b0f      	ldr	r3, [pc, #60]	; (80042f4 <cumartesi+0x88>)
 80042b6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80042b8:	4a11      	ldr	r2, [pc, #68]	; (8004300 <cumartesi+0x94>)
 80042ba:	6013      	str	r3, [r2, #0]
			 		 	                      cumartesi_pompa4=read5[23];
 80042bc:	4b0d      	ldr	r3, [pc, #52]	; (80042f4 <cumartesi+0x88>)
 80042be:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80042c0:	4a10      	ldr	r2, [pc, #64]	; (8004304 <cumartesi+0x98>)
 80042c2:	6013      	str	r3, [r2, #0]
		 		 	                           Flash_Write5(0x080E0000,read5,30);
 80042c4:	221e      	movs	r2, #30
 80042c6:	490b      	ldr	r1, [pc, #44]	; (80042f4 <cumartesi+0x88>)
 80042c8:	4808      	ldr	r0, [pc, #32]	; (80042ec <cumartesi+0x80>)
 80042ca:	f001 f8a9 	bl	8005420 <Flash_Write5>



while(1){
	if(degisken14==0)
 80042ce:	4b0e      	ldr	r3, [pc, #56]	; (8004308 <cumartesi+0x9c>)
 80042d0:	781b      	ldrb	r3, [r3, #0]
 80042d2:	2b00      	cmp	r3, #0
 80042d4:	f040 809c 	bne.w	8004410 <cumartesi+0x1a4>
			{
				 data5=Flash_Read5(0x080E0000);
 80042d8:	4804      	ldr	r0, [pc, #16]	; (80042ec <cumartesi+0x80>)
 80042da:	f001 f951 	bl	8005580 <Flash_Read5>
 80042de:	4603      	mov	r3, r0
 80042e0:	4a03      	ldr	r2, [pc, #12]	; (80042f0 <cumartesi+0x84>)
 80042e2:	6013      	str	r3, [r2, #0]
				 for(int i=0;i<29;i++)
 80042e4:	2300      	movs	r3, #0
 80042e6:	603b      	str	r3, [r7, #0]
 80042e8:	e01d      	b.n	8004326 <cumartesi+0xba>
 80042ea:	bf00      	nop
 80042ec:	080e0000 	.word	0x080e0000
 80042f0:	20000480 	.word	0x20000480
 80042f4:	20000344 	.word	0x20000344
 80042f8:	200000ac 	.word	0x200000ac
 80042fc:	200000b0 	.word	0x200000b0
 8004300:	200000b4 	.word	0x200000b4
 8004304:	200000b8 	.word	0x200000b8
 8004308:	20000044 	.word	0x20000044
				 											 							 	{
				 											 							 	veri5[i]=data5[i];
 800430c:	4bba      	ldr	r3, [pc, #744]	; (80045f8 <cumartesi+0x38c>)
 800430e:	681a      	ldr	r2, [r3, #0]
 8004310:	683b      	ldr	r3, [r7, #0]
 8004312:	009b      	lsls	r3, r3, #2
 8004314:	4413      	add	r3, r2
 8004316:	681a      	ldr	r2, [r3, #0]
 8004318:	49b8      	ldr	r1, [pc, #736]	; (80045fc <cumartesi+0x390>)
 800431a:	683b      	ldr	r3, [r7, #0]
 800431c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
				 for(int i=0;i<29;i++)
 8004320:	683b      	ldr	r3, [r7, #0]
 8004322:	3301      	adds	r3, #1
 8004324:	603b      	str	r3, [r7, #0]
 8004326:	683b      	ldr	r3, [r7, #0]
 8004328:	2b1c      	cmp	r3, #28
 800432a:	ddef      	ble.n	800430c <cumartesi+0xa0>
				 											 							 	}



			if(cumartesi_pompa1==0 ){
 800432c:	4bb4      	ldr	r3, [pc, #720]	; (8004600 <cumartesi+0x394>)
 800432e:	681b      	ldr	r3, [r3, #0]
 8004330:	2b00      	cmp	r3, #0
 8004332:	d134      	bne.n	800439e <cumartesi+0x132>
				LCD_Send_String_On_Line1(">>Pmp1 Pasif");
 8004334:	48b3      	ldr	r0, [pc, #716]	; (8004604 <cumartesi+0x398>)
 8004336:	f7fc fa1b 	bl	8000770 <LCD_Send_String_On_Line1>
				LCD_Send_String_On_Line2("Pmp2");
 800433a:	48b3      	ldr	r0, [pc, #716]	; (8004608 <cumartesi+0x39c>)
 800433c:	f7fc fa26 	bl	800078c <LCD_Send_String_On_Line2>



										 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){cumartesi_pompa1=1;veri5[20]=cumartesi_pompa1;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8004340:	2110      	movs	r1, #16
 8004342:	48b2      	ldr	r0, [pc, #712]	; (800460c <cumartesi+0x3a0>)
 8004344:	f002 fefc 	bl	8007140 <HAL_GPIO_ReadPin>
 8004348:	4603      	mov	r3, r0
 800434a:	2b01      	cmp	r3, #1
 800434c:	d10e      	bne.n	800436c <cumartesi+0x100>
 800434e:	4bac      	ldr	r3, [pc, #688]	; (8004600 <cumartesi+0x394>)
 8004350:	2201      	movs	r2, #1
 8004352:	601a      	str	r2, [r3, #0]
 8004354:	4baa      	ldr	r3, [pc, #680]	; (8004600 <cumartesi+0x394>)
 8004356:	681b      	ldr	r3, [r3, #0]
 8004358:	4aa8      	ldr	r2, [pc, #672]	; (80045fc <cumartesi+0x390>)
 800435a:	6513      	str	r3, [r2, #80]	; 0x50
 800435c:	221c      	movs	r2, #28
 800435e:	49a7      	ldr	r1, [pc, #668]	; (80045fc <cumartesi+0x390>)
 8004360:	48ab      	ldr	r0, [pc, #684]	; (8004610 <cumartesi+0x3a4>)
 8004362:	f001 f85d 	bl	8005420 <Flash_Write5>
 8004366:	2001      	movs	r0, #1
 8004368:	f7fc f932 	bl	80005d0 <LCD_Send_Cmd>

										 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 800436c:	2180      	movs	r1, #128	; 0x80
 800436e:	48a9      	ldr	r0, [pc, #676]	; (8004614 <cumartesi+0x3a8>)
 8004370:	f002 fee6 	bl	8007140 <HAL_GPIO_ReadPin>
 8004374:	4603      	mov	r3, r0
 8004376:	2b01      	cmp	r3, #1
 8004378:	d105      	bne.n	8004386 <cumartesi+0x11a>
											 degisken14=1;
 800437a:	4ba7      	ldr	r3, [pc, #668]	; (8004618 <cumartesi+0x3ac>)
 800437c:	2201      	movs	r2, #1
 800437e:	701a      	strb	r2, [r3, #0]
											 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004380:	2001      	movs	r0, #1
 8004382:	f7fc f925 	bl	80005d0 <LCD_Send_Cmd>

										 }
										 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8004386:	2120      	movs	r1, #32
 8004388:	48a0      	ldr	r0, [pc, #640]	; (800460c <cumartesi+0x3a0>)
 800438a:	f002 fed9 	bl	8007140 <HAL_GPIO_ReadPin>
 800438e:	4603      	mov	r3, r0
 8004390:	2b01      	cmp	r3, #1
 8004392:	d104      	bne.n	800439e <cumartesi+0x132>
																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004394:	2001      	movs	r0, #1
 8004396:	f7fc f91b 	bl	80005d0 <LCD_Send_Cmd>
																				 					 	 Ayar_Gun();
 800439a:	f7fc fb0f 	bl	80009bc <Ayar_Gun>
																				 					                                          }

			}
			if(cumartesi_pompa1==1 ){
 800439e:	4b98      	ldr	r3, [pc, #608]	; (8004600 <cumartesi+0x394>)
 80043a0:	681b      	ldr	r3, [r3, #0]
 80043a2:	2b01      	cmp	r3, #1
 80043a4:	d134      	bne.n	8004410 <cumartesi+0x1a4>
							LCD_Send_String_On_Line1(">>Pmp1 Aktif");
 80043a6:	489d      	ldr	r0, [pc, #628]	; (800461c <cumartesi+0x3b0>)
 80043a8:	f7fc f9e2 	bl	8000770 <LCD_Send_String_On_Line1>
							LCD_Send_String_On_Line2("Pmp2");
 80043ac:	4896      	ldr	r0, [pc, #600]	; (8004608 <cumartesi+0x39c>)
 80043ae:	f7fc f9ed 	bl	800078c <LCD_Send_String_On_Line2>



													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){cumartesi_pompa1=0;veri5[20]=cumartesi_pompa1;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 80043b2:	2110      	movs	r1, #16
 80043b4:	4895      	ldr	r0, [pc, #596]	; (800460c <cumartesi+0x3a0>)
 80043b6:	f002 fec3 	bl	8007140 <HAL_GPIO_ReadPin>
 80043ba:	4603      	mov	r3, r0
 80043bc:	2b01      	cmp	r3, #1
 80043be:	d10e      	bne.n	80043de <cumartesi+0x172>
 80043c0:	4b8f      	ldr	r3, [pc, #572]	; (8004600 <cumartesi+0x394>)
 80043c2:	2200      	movs	r2, #0
 80043c4:	601a      	str	r2, [r3, #0]
 80043c6:	4b8e      	ldr	r3, [pc, #568]	; (8004600 <cumartesi+0x394>)
 80043c8:	681b      	ldr	r3, [r3, #0]
 80043ca:	4a8c      	ldr	r2, [pc, #560]	; (80045fc <cumartesi+0x390>)
 80043cc:	6513      	str	r3, [r2, #80]	; 0x50
 80043ce:	221c      	movs	r2, #28
 80043d0:	498a      	ldr	r1, [pc, #552]	; (80045fc <cumartesi+0x390>)
 80043d2:	488f      	ldr	r0, [pc, #572]	; (8004610 <cumartesi+0x3a4>)
 80043d4:	f001 f824 	bl	8005420 <Flash_Write5>
 80043d8:	2001      	movs	r0, #1
 80043da:	f7fc f8f9 	bl	80005d0 <LCD_Send_Cmd>

													 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 80043de:	2180      	movs	r1, #128	; 0x80
 80043e0:	488c      	ldr	r0, [pc, #560]	; (8004614 <cumartesi+0x3a8>)
 80043e2:	f002 fead 	bl	8007140 <HAL_GPIO_ReadPin>
 80043e6:	4603      	mov	r3, r0
 80043e8:	2b01      	cmp	r3, #1
 80043ea:	d105      	bne.n	80043f8 <cumartesi+0x18c>
														 degisken14=1;
 80043ec:	4b8a      	ldr	r3, [pc, #552]	; (8004618 <cumartesi+0x3ac>)
 80043ee:	2201      	movs	r2, #1
 80043f0:	701a      	strb	r2, [r3, #0]
														 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80043f2:	2001      	movs	r0, #1
 80043f4:	f7fc f8ec 	bl	80005d0 <LCD_Send_Cmd>

													 }
													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 80043f8:	2120      	movs	r1, #32
 80043fa:	4884      	ldr	r0, [pc, #528]	; (800460c <cumartesi+0x3a0>)
 80043fc:	f002 fea0 	bl	8007140 <HAL_GPIO_ReadPin>
 8004400:	4603      	mov	r3, r0
 8004402:	2b01      	cmp	r3, #1
 8004404:	d104      	bne.n	8004410 <cumartesi+0x1a4>
																							 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004406:	2001      	movs	r0, #1
 8004408:	f7fc f8e2 	bl	80005d0 <LCD_Send_Cmd>
																							 					 	 Ayar_Gun();
 800440c:	f7fc fad6 	bl	80009bc <Ayar_Gun>
						}


			}

	if(degisken14==1)
 8004410:	4b81      	ldr	r3, [pc, #516]	; (8004618 <cumartesi+0x3ac>)
 8004412:	781b      	ldrb	r3, [r3, #0]
 8004414:	2b01      	cmp	r3, #1
 8004416:	f040 808c 	bne.w	8004532 <cumartesi+0x2c6>
				{

				if(cumartesi_pompa2==0 ){
 800441a:	4b81      	ldr	r3, [pc, #516]	; (8004620 <cumartesi+0x3b4>)
 800441c:	681b      	ldr	r3, [r3, #0]
 800441e:	2b00      	cmp	r3, #0
 8004420:	d141      	bne.n	80044a6 <cumartesi+0x23a>
					LCD_Send_String_On_Line1("Pmp1");
 8004422:	4880      	ldr	r0, [pc, #512]	; (8004624 <cumartesi+0x3b8>)
 8004424:	f7fc f9a4 	bl	8000770 <LCD_Send_String_On_Line1>
					LCD_Send_String_On_Line2(">>Pmp2 Pasif");
 8004428:	487f      	ldr	r0, [pc, #508]	; (8004628 <cumartesi+0x3bc>)
 800442a:	f7fc f9af 	bl	800078c <LCD_Send_String_On_Line2>



											 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){cumartesi_pompa2=1;veri5[21]=cumartesi_pompa2;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 800442e:	2110      	movs	r1, #16
 8004430:	4876      	ldr	r0, [pc, #472]	; (800460c <cumartesi+0x3a0>)
 8004432:	f002 fe85 	bl	8007140 <HAL_GPIO_ReadPin>
 8004436:	4603      	mov	r3, r0
 8004438:	2b01      	cmp	r3, #1
 800443a:	d10e      	bne.n	800445a <cumartesi+0x1ee>
 800443c:	4b78      	ldr	r3, [pc, #480]	; (8004620 <cumartesi+0x3b4>)
 800443e:	2201      	movs	r2, #1
 8004440:	601a      	str	r2, [r3, #0]
 8004442:	4b77      	ldr	r3, [pc, #476]	; (8004620 <cumartesi+0x3b4>)
 8004444:	681b      	ldr	r3, [r3, #0]
 8004446:	4a6d      	ldr	r2, [pc, #436]	; (80045fc <cumartesi+0x390>)
 8004448:	6553      	str	r3, [r2, #84]	; 0x54
 800444a:	221c      	movs	r2, #28
 800444c:	496b      	ldr	r1, [pc, #428]	; (80045fc <cumartesi+0x390>)
 800444e:	4870      	ldr	r0, [pc, #448]	; (8004610 <cumartesi+0x3a4>)
 8004450:	f000 ffe6 	bl	8005420 <Flash_Write5>
 8004454:	2001      	movs	r0, #1
 8004456:	f7fc f8bb 	bl	80005d0 <LCD_Send_Cmd>

											 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 800445a:	2180      	movs	r1, #128	; 0x80
 800445c:	486d      	ldr	r0, [pc, #436]	; (8004614 <cumartesi+0x3a8>)
 800445e:	f002 fe6f 	bl	8007140 <HAL_GPIO_ReadPin>
 8004462:	4603      	mov	r3, r0
 8004464:	2b01      	cmp	r3, #1
 8004466:	d105      	bne.n	8004474 <cumartesi+0x208>
												 degisken14=2;
 8004468:	4b6b      	ldr	r3, [pc, #428]	; (8004618 <cumartesi+0x3ac>)
 800446a:	2202      	movs	r2, #2
 800446c:	701a      	strb	r2, [r3, #0]
												 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800446e:	2001      	movs	r0, #1
 8004470:	f7fc f8ae 	bl	80005d0 <LCD_Send_Cmd>
											 }
											 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8004474:	2140      	movs	r1, #64	; 0x40
 8004476:	4867      	ldr	r0, [pc, #412]	; (8004614 <cumartesi+0x3a8>)
 8004478:	f002 fe62 	bl	8007140 <HAL_GPIO_ReadPin>
 800447c:	4603      	mov	r3, r0
 800447e:	2b01      	cmp	r3, #1
 8004480:	d105      	bne.n	800448e <cumartesi+0x222>
																						 degisken14=1;
 8004482:	4b65      	ldr	r3, [pc, #404]	; (8004618 <cumartesi+0x3ac>)
 8004484:	2201      	movs	r2, #1
 8004486:	701a      	strb	r2, [r3, #0]
																						 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004488:	2001      	movs	r0, #1
 800448a:	f7fc f8a1 	bl	80005d0 <LCD_Send_Cmd>
																					 }
											 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 800448e:	2120      	movs	r1, #32
 8004490:	485e      	ldr	r0, [pc, #376]	; (800460c <cumartesi+0x3a0>)
 8004492:	f002 fe55 	bl	8007140 <HAL_GPIO_ReadPin>
 8004496:	4603      	mov	r3, r0
 8004498:	2b01      	cmp	r3, #1
 800449a:	d104      	bne.n	80044a6 <cumartesi+0x23a>
																					 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800449c:	2001      	movs	r0, #1
 800449e:	f7fc f897 	bl	80005d0 <LCD_Send_Cmd>
																					 					 	 Ayar_Gun();
 80044a2:	f7fc fa8b 	bl	80009bc <Ayar_Gun>
																					 					                                          }
				}
				if(cumartesi_pompa2==1 ){
 80044a6:	4b5e      	ldr	r3, [pc, #376]	; (8004620 <cumartesi+0x3b4>)
 80044a8:	681b      	ldr	r3, [r3, #0]
 80044aa:	2b01      	cmp	r3, #1
 80044ac:	d135      	bne.n	800451a <cumartesi+0x2ae>
								LCD_Send_String_On_Line1("Pmp1");
 80044ae:	485d      	ldr	r0, [pc, #372]	; (8004624 <cumartesi+0x3b8>)
 80044b0:	f7fc f95e 	bl	8000770 <LCD_Send_String_On_Line1>
								LCD_Send_String_On_Line2(">>Pmp2 Aktif");
 80044b4:	485d      	ldr	r0, [pc, #372]	; (800462c <cumartesi+0x3c0>)
 80044b6:	f7fc f969 	bl	800078c <LCD_Send_String_On_Line2>



														 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){cumartesi_pompa2=0;veri5[21]=cumartesi_pompa2;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 80044ba:	2110      	movs	r1, #16
 80044bc:	4853      	ldr	r0, [pc, #332]	; (800460c <cumartesi+0x3a0>)
 80044be:	f002 fe3f 	bl	8007140 <HAL_GPIO_ReadPin>
 80044c2:	4603      	mov	r3, r0
 80044c4:	2b01      	cmp	r3, #1
 80044c6:	d10e      	bne.n	80044e6 <cumartesi+0x27a>
 80044c8:	4b55      	ldr	r3, [pc, #340]	; (8004620 <cumartesi+0x3b4>)
 80044ca:	2200      	movs	r2, #0
 80044cc:	601a      	str	r2, [r3, #0]
 80044ce:	4b54      	ldr	r3, [pc, #336]	; (8004620 <cumartesi+0x3b4>)
 80044d0:	681b      	ldr	r3, [r3, #0]
 80044d2:	4a4a      	ldr	r2, [pc, #296]	; (80045fc <cumartesi+0x390>)
 80044d4:	6553      	str	r3, [r2, #84]	; 0x54
 80044d6:	221c      	movs	r2, #28
 80044d8:	4948      	ldr	r1, [pc, #288]	; (80045fc <cumartesi+0x390>)
 80044da:	484d      	ldr	r0, [pc, #308]	; (8004610 <cumartesi+0x3a4>)
 80044dc:	f000 ffa0 	bl	8005420 <Flash_Write5>
 80044e0:	2001      	movs	r0, #1
 80044e2:	f7fc f875 	bl	80005d0 <LCD_Send_Cmd>

														 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 80044e6:	2180      	movs	r1, #128	; 0x80
 80044e8:	484a      	ldr	r0, [pc, #296]	; (8004614 <cumartesi+0x3a8>)
 80044ea:	f002 fe29 	bl	8007140 <HAL_GPIO_ReadPin>
 80044ee:	4603      	mov	r3, r0
 80044f0:	2b01      	cmp	r3, #1
 80044f2:	d105      	bne.n	8004500 <cumartesi+0x294>
															 degisken14=2;
 80044f4:	4b48      	ldr	r3, [pc, #288]	; (8004618 <cumartesi+0x3ac>)
 80044f6:	2202      	movs	r2, #2
 80044f8:	701a      	strb	r2, [r3, #0]
															 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80044fa:	2001      	movs	r0, #1
 80044fc:	f7fc f868 	bl	80005d0 <LCD_Send_Cmd>
														 }
														 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8004500:	2140      	movs	r1, #64	; 0x40
 8004502:	4844      	ldr	r0, [pc, #272]	; (8004614 <cumartesi+0x3a8>)
 8004504:	f002 fe1c 	bl	8007140 <HAL_GPIO_ReadPin>
 8004508:	4603      	mov	r3, r0
 800450a:	2b01      	cmp	r3, #1
 800450c:	d105      	bne.n	800451a <cumartesi+0x2ae>
															 degisken14=0;
 800450e:	4b42      	ldr	r3, [pc, #264]	; (8004618 <cumartesi+0x3ac>)
 8004510:	2200      	movs	r2, #0
 8004512:	701a      	strb	r2, [r3, #0]
															LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004514:	2001      	movs	r0, #1
 8004516:	f7fc f85b 	bl	80005d0 <LCD_Send_Cmd>
																							}

							}

				 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 800451a:	2120      	movs	r1, #32
 800451c:	483b      	ldr	r0, [pc, #236]	; (800460c <cumartesi+0x3a0>)
 800451e:	f002 fe0f 	bl	8007140 <HAL_GPIO_ReadPin>
 8004522:	4603      	mov	r3, r0
 8004524:	2b01      	cmp	r3, #1
 8004526:	d104      	bne.n	8004532 <cumartesi+0x2c6>
														 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004528:	2001      	movs	r0, #1
 800452a:	f7fc f851 	bl	80005d0 <LCD_Send_Cmd>
														 					 	 Ayar_Gun();
 800452e:	f7fc fa45 	bl	80009bc <Ayar_Gun>
														 					                                          }
				}



	if(degisken14==2)
 8004532:	4b39      	ldr	r3, [pc, #228]	; (8004618 <cumartesi+0x3ac>)
 8004534:	781b      	ldrb	r3, [r3, #0]
 8004536:	2b02      	cmp	r3, #2
 8004538:	f040 80b4 	bne.w	80046a4 <cumartesi+0x438>
					{

					if(cumartesi_pompa3==0 ){
 800453c:	4b3c      	ldr	r3, [pc, #240]	; (8004630 <cumartesi+0x3c4>)
 800453e:	681b      	ldr	r3, [r3, #0]
 8004540:	2b00      	cmp	r3, #0
 8004542:	d141      	bne.n	80045c8 <cumartesi+0x35c>
						LCD_Send_String_On_Line1(">>Pmp3 Pasif");
 8004544:	483b      	ldr	r0, [pc, #236]	; (8004634 <cumartesi+0x3c8>)
 8004546:	f7fc f913 	bl	8000770 <LCD_Send_String_On_Line1>
						LCD_Send_String_On_Line2("Pmp4 ");
 800454a:	483b      	ldr	r0, [pc, #236]	; (8004638 <cumartesi+0x3cc>)
 800454c:	f7fc f91e 	bl	800078c <LCD_Send_String_On_Line2>



												 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){cumartesi_pompa3=1;veri5[22]=cumartesi_pompa3;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8004550:	2110      	movs	r1, #16
 8004552:	482e      	ldr	r0, [pc, #184]	; (800460c <cumartesi+0x3a0>)
 8004554:	f002 fdf4 	bl	8007140 <HAL_GPIO_ReadPin>
 8004558:	4603      	mov	r3, r0
 800455a:	2b01      	cmp	r3, #1
 800455c:	d10e      	bne.n	800457c <cumartesi+0x310>
 800455e:	4b34      	ldr	r3, [pc, #208]	; (8004630 <cumartesi+0x3c4>)
 8004560:	2201      	movs	r2, #1
 8004562:	601a      	str	r2, [r3, #0]
 8004564:	4b32      	ldr	r3, [pc, #200]	; (8004630 <cumartesi+0x3c4>)
 8004566:	681b      	ldr	r3, [r3, #0]
 8004568:	4a24      	ldr	r2, [pc, #144]	; (80045fc <cumartesi+0x390>)
 800456a:	6593      	str	r3, [r2, #88]	; 0x58
 800456c:	221c      	movs	r2, #28
 800456e:	4923      	ldr	r1, [pc, #140]	; (80045fc <cumartesi+0x390>)
 8004570:	4827      	ldr	r0, [pc, #156]	; (8004610 <cumartesi+0x3a4>)
 8004572:	f000 ff55 	bl	8005420 <Flash_Write5>
 8004576:	2001      	movs	r0, #1
 8004578:	f7fc f82a 	bl	80005d0 <LCD_Send_Cmd>

												 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 800457c:	2180      	movs	r1, #128	; 0x80
 800457e:	4825      	ldr	r0, [pc, #148]	; (8004614 <cumartesi+0x3a8>)
 8004580:	f002 fdde 	bl	8007140 <HAL_GPIO_ReadPin>
 8004584:	4603      	mov	r3, r0
 8004586:	2b01      	cmp	r3, #1
 8004588:	d105      	bne.n	8004596 <cumartesi+0x32a>
													 degisken14=3;
 800458a:	4b23      	ldr	r3, [pc, #140]	; (8004618 <cumartesi+0x3ac>)
 800458c:	2203      	movs	r2, #3
 800458e:	701a      	strb	r2, [r3, #0]
													 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004590:	2001      	movs	r0, #1
 8004592:	f7fc f81d 	bl	80005d0 <LCD_Send_Cmd>
												 }
												 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8004596:	2140      	movs	r1, #64	; 0x40
 8004598:	481e      	ldr	r0, [pc, #120]	; (8004614 <cumartesi+0x3a8>)
 800459a:	f002 fdd1 	bl	8007140 <HAL_GPIO_ReadPin>
 800459e:	4603      	mov	r3, r0
 80045a0:	2b01      	cmp	r3, #1
 80045a2:	d111      	bne.n	80045c8 <cumartesi+0x35c>
													 degisken14=1;
 80045a4:	4b1c      	ldr	r3, [pc, #112]	; (8004618 <cumartesi+0x3ac>)
 80045a6:	2201      	movs	r2, #1
 80045a8:	701a      	strb	r2, [r3, #0]
																							 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80045aa:	2001      	movs	r0, #1
 80045ac:	f7fc f810 	bl	80005d0 <LCD_Send_Cmd>
																							 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 80045b0:	2120      	movs	r1, #32
 80045b2:	4816      	ldr	r0, [pc, #88]	; (800460c <cumartesi+0x3a0>)
 80045b4:	f002 fdc4 	bl	8007140 <HAL_GPIO_ReadPin>
 80045b8:	4603      	mov	r3, r0
 80045ba:	2b01      	cmp	r3, #1
 80045bc:	d104      	bne.n	80045c8 <cumartesi+0x35c>
																																	 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80045be:	2001      	movs	r0, #1
 80045c0:	f7fc f806 	bl	80005d0 <LCD_Send_Cmd>
																																	 					 	 Ayar_Gun();
 80045c4:	f7fc f9fa 	bl	80009bc <Ayar_Gun>
																																	 					                                          }													 }

					}
					if(cumartesi_pompa3==1 ){
 80045c8:	4b19      	ldr	r3, [pc, #100]	; (8004630 <cumartesi+0x3c4>)
 80045ca:	681b      	ldr	r3, [r3, #0]
 80045cc:	2b01      	cmp	r3, #1
 80045ce:	d169      	bne.n	80046a4 <cumartesi+0x438>
									LCD_Send_String_On_Line1(">>Pmp3 Aktif");
 80045d0:	481a      	ldr	r0, [pc, #104]	; (800463c <cumartesi+0x3d0>)
 80045d2:	f7fc f8cd 	bl	8000770 <LCD_Send_String_On_Line1>
									LCD_Send_String_On_Line2("Pmp4");
 80045d6:	481a      	ldr	r0, [pc, #104]	; (8004640 <cumartesi+0x3d4>)
 80045d8:	f7fc f8d8 	bl	800078c <LCD_Send_String_On_Line2>



															 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){cumartesi_pompa3=0;veri5[22]=cumartesi_pompa3;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 80045dc:	2110      	movs	r1, #16
 80045de:	480b      	ldr	r0, [pc, #44]	; (800460c <cumartesi+0x3a0>)
 80045e0:	f002 fdae 	bl	8007140 <HAL_GPIO_ReadPin>
 80045e4:	4603      	mov	r3, r0
 80045e6:	2b01      	cmp	r3, #1
 80045e8:	d136      	bne.n	8004658 <cumartesi+0x3ec>
 80045ea:	4b11      	ldr	r3, [pc, #68]	; (8004630 <cumartesi+0x3c4>)
 80045ec:	2200      	movs	r2, #0
 80045ee:	601a      	str	r2, [r3, #0]
 80045f0:	4b0f      	ldr	r3, [pc, #60]	; (8004630 <cumartesi+0x3c4>)
 80045f2:	681b      	ldr	r3, [r3, #0]
 80045f4:	e026      	b.n	8004644 <cumartesi+0x3d8>
 80045f6:	bf00      	nop
 80045f8:	20000480 	.word	0x20000480
 80045fc:	20000144 	.word	0x20000144
 8004600:	200000ac 	.word	0x200000ac
 8004604:	08009004 	.word	0x08009004
 8004608:	08009014 	.word	0x08009014
 800460c:	40020800 	.word	0x40020800
 8004610:	080e0000 	.word	0x080e0000
 8004614:	40020000 	.word	0x40020000
 8004618:	20000044 	.word	0x20000044
 800461c:	0800901c 	.word	0x0800901c
 8004620:	200000b0 	.word	0x200000b0
 8004624:	0800902c 	.word	0x0800902c
 8004628:	08009034 	.word	0x08009034
 800462c:	08009044 	.word	0x08009044
 8004630:	200000b4 	.word	0x200000b4
 8004634:	08009054 	.word	0x08009054
 8004638:	08009064 	.word	0x08009064
 800463c:	0800906c 	.word	0x0800906c
 8004640:	0800907c 	.word	0x0800907c
 8004644:	4a61      	ldr	r2, [pc, #388]	; (80047cc <cumartesi+0x560>)
 8004646:	6593      	str	r3, [r2, #88]	; 0x58
 8004648:	221c      	movs	r2, #28
 800464a:	4960      	ldr	r1, [pc, #384]	; (80047cc <cumartesi+0x560>)
 800464c:	4860      	ldr	r0, [pc, #384]	; (80047d0 <cumartesi+0x564>)
 800464e:	f000 fee7 	bl	8005420 <Flash_Write5>
 8004652:	2001      	movs	r0, #1
 8004654:	f7fb ffbc 	bl	80005d0 <LCD_Send_Cmd>

															 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8004658:	2180      	movs	r1, #128	; 0x80
 800465a:	485e      	ldr	r0, [pc, #376]	; (80047d4 <cumartesi+0x568>)
 800465c:	f002 fd70 	bl	8007140 <HAL_GPIO_ReadPin>
 8004660:	4603      	mov	r3, r0
 8004662:	2b01      	cmp	r3, #1
 8004664:	d105      	bne.n	8004672 <cumartesi+0x406>
																 degisken14=3;
 8004666:	4b5c      	ldr	r3, [pc, #368]	; (80047d8 <cumartesi+0x56c>)
 8004668:	2203      	movs	r2, #3
 800466a:	701a      	strb	r2, [r3, #0]
																 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800466c:	2001      	movs	r0, #1
 800466e:	f7fb ffaf 	bl	80005d0 <LCD_Send_Cmd>
															 }
															 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8004672:	2140      	movs	r1, #64	; 0x40
 8004674:	4857      	ldr	r0, [pc, #348]	; (80047d4 <cumartesi+0x568>)
 8004676:	f002 fd63 	bl	8007140 <HAL_GPIO_ReadPin>
 800467a:	4603      	mov	r3, r0
 800467c:	2b01      	cmp	r3, #1
 800467e:	d105      	bne.n	800468c <cumartesi+0x420>
																 degisken14=1;
 8004680:	4b55      	ldr	r3, [pc, #340]	; (80047d8 <cumartesi+0x56c>)
 8004682:	2201      	movs	r2, #1
 8004684:	701a      	strb	r2, [r3, #0]
																LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004686:	2001      	movs	r0, #1
 8004688:	f7fb ffa2 	bl	80005d0 <LCD_Send_Cmd>
																								}
															 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 800468c:	2120      	movs	r1, #32
 800468e:	4853      	ldr	r0, [pc, #332]	; (80047dc <cumartesi+0x570>)
 8004690:	f002 fd56 	bl	8007140 <HAL_GPIO_ReadPin>
 8004694:	4603      	mov	r3, r0
 8004696:	2b01      	cmp	r3, #1
 8004698:	d104      	bne.n	80046a4 <cumartesi+0x438>
																									 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800469a:	2001      	movs	r0, #1
 800469c:	f7fb ff98 	bl	80005d0 <LCD_Send_Cmd>
																									 					 	 Ayar_Gun();
 80046a0:	f7fc f98c 	bl	80009bc <Ayar_Gun>
																									 					                                          }
								}


					}
	if(degisken14==3)
 80046a4:	4b4c      	ldr	r3, [pc, #304]	; (80047d8 <cumartesi+0x56c>)
 80046a6:	781b      	ldrb	r3, [r3, #0]
 80046a8:	2b03      	cmp	r3, #3
 80046aa:	f47f ae10 	bne.w	80042ce <cumartesi+0x62>
						{

						if(cumartesi_pompa4==0 ){
 80046ae:	4b4c      	ldr	r3, [pc, #304]	; (80047e0 <cumartesi+0x574>)
 80046b0:	681b      	ldr	r3, [r3, #0]
 80046b2:	2b00      	cmp	r3, #0
 80046b4:	d141      	bne.n	800473a <cumartesi+0x4ce>
							LCD_Send_String_On_Line1("Pmp3");
 80046b6:	484b      	ldr	r0, [pc, #300]	; (80047e4 <cumartesi+0x578>)
 80046b8:	f7fc f85a 	bl	8000770 <LCD_Send_String_On_Line1>
							LCD_Send_String_On_Line2(">>Pmp4 Pasif ");
 80046bc:	484a      	ldr	r0, [pc, #296]	; (80047e8 <cumartesi+0x57c>)
 80046be:	f7fc f865 	bl	800078c <LCD_Send_String_On_Line2>



													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){cumartesi_pompa4=1;veri5[23]=cumartesi_pompa4;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 80046c2:	2110      	movs	r1, #16
 80046c4:	4845      	ldr	r0, [pc, #276]	; (80047dc <cumartesi+0x570>)
 80046c6:	f002 fd3b 	bl	8007140 <HAL_GPIO_ReadPin>
 80046ca:	4603      	mov	r3, r0
 80046cc:	2b01      	cmp	r3, #1
 80046ce:	d10e      	bne.n	80046ee <cumartesi+0x482>
 80046d0:	4b43      	ldr	r3, [pc, #268]	; (80047e0 <cumartesi+0x574>)
 80046d2:	2201      	movs	r2, #1
 80046d4:	601a      	str	r2, [r3, #0]
 80046d6:	4b42      	ldr	r3, [pc, #264]	; (80047e0 <cumartesi+0x574>)
 80046d8:	681b      	ldr	r3, [r3, #0]
 80046da:	4a3c      	ldr	r2, [pc, #240]	; (80047cc <cumartesi+0x560>)
 80046dc:	65d3      	str	r3, [r2, #92]	; 0x5c
 80046de:	221c      	movs	r2, #28
 80046e0:	493a      	ldr	r1, [pc, #232]	; (80047cc <cumartesi+0x560>)
 80046e2:	483b      	ldr	r0, [pc, #236]	; (80047d0 <cumartesi+0x564>)
 80046e4:	f000 fe9c 	bl	8005420 <Flash_Write5>
 80046e8:	2001      	movs	r0, #1
 80046ea:	f7fb ff71 	bl	80005d0 <LCD_Send_Cmd>

													 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 80046ee:	2180      	movs	r1, #128	; 0x80
 80046f0:	4838      	ldr	r0, [pc, #224]	; (80047d4 <cumartesi+0x568>)
 80046f2:	f002 fd25 	bl	8007140 <HAL_GPIO_ReadPin>
 80046f6:	4603      	mov	r3, r0
 80046f8:	2b01      	cmp	r3, #1
 80046fa:	d105      	bne.n	8004708 <cumartesi+0x49c>
														 degisken14=0;
 80046fc:	4b36      	ldr	r3, [pc, #216]	; (80047d8 <cumartesi+0x56c>)
 80046fe:	2200      	movs	r2, #0
 8004700:	701a      	strb	r2, [r3, #0]
														 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004702:	2001      	movs	r0, #1
 8004704:	f7fb ff64 	bl	80005d0 <LCD_Send_Cmd>
													 }
													 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8004708:	2140      	movs	r1, #64	; 0x40
 800470a:	4832      	ldr	r0, [pc, #200]	; (80047d4 <cumartesi+0x568>)
 800470c:	f002 fd18 	bl	8007140 <HAL_GPIO_ReadPin>
 8004710:	4603      	mov	r3, r0
 8004712:	2b01      	cmp	r3, #1
 8004714:	d105      	bne.n	8004722 <cumartesi+0x4b6>
														 degisken14=2;
 8004716:	4b30      	ldr	r3, [pc, #192]	; (80047d8 <cumartesi+0x56c>)
 8004718:	2202      	movs	r2, #2
 800471a:	701a      	strb	r2, [r3, #0]
																								 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800471c:	2001      	movs	r0, #1
 800471e:	f7fb ff57 	bl	80005d0 <LCD_Send_Cmd>
																							 }
													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8004722:	2120      	movs	r1, #32
 8004724:	482d      	ldr	r0, [pc, #180]	; (80047dc <cumartesi+0x570>)
 8004726:	f002 fd0b 	bl	8007140 <HAL_GPIO_ReadPin>
 800472a:	4603      	mov	r3, r0
 800472c:	2b01      	cmp	r3, #1
 800472e:	d104      	bne.n	800473a <cumartesi+0x4ce>
																							 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004730:	2001      	movs	r0, #1
 8004732:	f7fb ff4d 	bl	80005d0 <LCD_Send_Cmd>
																							 					 	 Ayar_Gun();
 8004736:	f7fc f941 	bl	80009bc <Ayar_Gun>
																							 					                                          }
						}
						if(cumartesi_pompa4==1 ){
 800473a:	4b29      	ldr	r3, [pc, #164]	; (80047e0 <cumartesi+0x574>)
 800473c:	681b      	ldr	r3, [r3, #0]
 800473e:	2b01      	cmp	r3, #1
 8004740:	f47f adc5 	bne.w	80042ce <cumartesi+0x62>
										LCD_Send_String_On_Line1("Pmp3");
 8004744:	4827      	ldr	r0, [pc, #156]	; (80047e4 <cumartesi+0x578>)
 8004746:	f7fc f813 	bl	8000770 <LCD_Send_String_On_Line1>
										LCD_Send_String_On_Line2(">>Pmp4 Aktif");
 800474a:	4828      	ldr	r0, [pc, #160]	; (80047ec <cumartesi+0x580>)
 800474c:	f7fc f81e 	bl	800078c <LCD_Send_String_On_Line2>



																 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){cumartesi_pompa4=0;veri5[23]=cumartesi_pompa4;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8004750:	2110      	movs	r1, #16
 8004752:	4822      	ldr	r0, [pc, #136]	; (80047dc <cumartesi+0x570>)
 8004754:	f002 fcf4 	bl	8007140 <HAL_GPIO_ReadPin>
 8004758:	4603      	mov	r3, r0
 800475a:	2b01      	cmp	r3, #1
 800475c:	d10e      	bne.n	800477c <cumartesi+0x510>
 800475e:	4b20      	ldr	r3, [pc, #128]	; (80047e0 <cumartesi+0x574>)
 8004760:	2200      	movs	r2, #0
 8004762:	601a      	str	r2, [r3, #0]
 8004764:	4b1e      	ldr	r3, [pc, #120]	; (80047e0 <cumartesi+0x574>)
 8004766:	681b      	ldr	r3, [r3, #0]
 8004768:	4a18      	ldr	r2, [pc, #96]	; (80047cc <cumartesi+0x560>)
 800476a:	65d3      	str	r3, [r2, #92]	; 0x5c
 800476c:	221c      	movs	r2, #28
 800476e:	4917      	ldr	r1, [pc, #92]	; (80047cc <cumartesi+0x560>)
 8004770:	4817      	ldr	r0, [pc, #92]	; (80047d0 <cumartesi+0x564>)
 8004772:	f000 fe55 	bl	8005420 <Flash_Write5>
 8004776:	2001      	movs	r0, #1
 8004778:	f7fb ff2a 	bl	80005d0 <LCD_Send_Cmd>

																 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 800477c:	2180      	movs	r1, #128	; 0x80
 800477e:	4815      	ldr	r0, [pc, #84]	; (80047d4 <cumartesi+0x568>)
 8004780:	f002 fcde 	bl	8007140 <HAL_GPIO_ReadPin>
 8004784:	4603      	mov	r3, r0
 8004786:	2b01      	cmp	r3, #1
 8004788:	d105      	bne.n	8004796 <cumartesi+0x52a>
																	 degisken14=0;
 800478a:	4b13      	ldr	r3, [pc, #76]	; (80047d8 <cumartesi+0x56c>)
 800478c:	2200      	movs	r2, #0
 800478e:	701a      	strb	r2, [r3, #0]
																	 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004790:	2001      	movs	r0, #1
 8004792:	f7fb ff1d 	bl	80005d0 <LCD_Send_Cmd>
																 }
																 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8004796:	2140      	movs	r1, #64	; 0x40
 8004798:	480e      	ldr	r0, [pc, #56]	; (80047d4 <cumartesi+0x568>)
 800479a:	f002 fcd1 	bl	8007140 <HAL_GPIO_ReadPin>
 800479e:	4603      	mov	r3, r0
 80047a0:	2b01      	cmp	r3, #1
 80047a2:	d105      	bne.n	80047b0 <cumartesi+0x544>
																	 degisken14=2;
 80047a4:	4b0c      	ldr	r3, [pc, #48]	; (80047d8 <cumartesi+0x56c>)
 80047a6:	2202      	movs	r2, #2
 80047a8:	701a      	strb	r2, [r3, #0]
																	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80047aa:	2001      	movs	r0, #1
 80047ac:	f7fb ff10 	bl	80005d0 <LCD_Send_Cmd>
																									}
																 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 80047b0:	2120      	movs	r1, #32
 80047b2:	480a      	ldr	r0, [pc, #40]	; (80047dc <cumartesi+0x570>)
 80047b4:	f002 fcc4 	bl	8007140 <HAL_GPIO_ReadPin>
 80047b8:	4603      	mov	r3, r0
 80047ba:	2b01      	cmp	r3, #1
 80047bc:	f47f ad87 	bne.w	80042ce <cumartesi+0x62>
																										 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80047c0:	2001      	movs	r0, #1
 80047c2:	f7fb ff05 	bl	80005d0 <LCD_Send_Cmd>
																										 					 	 Ayar_Gun();
 80047c6:	f7fc f8f9 	bl	80009bc <Ayar_Gun>
	if(degisken14==0)
 80047ca:	e580      	b.n	80042ce <cumartesi+0x62>
 80047cc:	20000144 	.word	0x20000144
 80047d0:	080e0000 	.word	0x080e0000
 80047d4:	40020000 	.word	0x40020000
 80047d8:	20000044 	.word	0x20000044
 80047dc:	40020800 	.word	0x40020800
 80047e0:	200000b8 	.word	0x200000b8
 80047e4:	08009084 	.word	0x08009084
 80047e8:	0800908c 	.word	0x0800908c
 80047ec:	0800909c 	.word	0x0800909c

080047f0 <pazar>:
						}


}
 }
void pazar(){
 80047f0:	b580      	push	{r7, lr}
 80047f2:	b082      	sub	sp, #8
 80047f4:	af00      	add	r7, sp, #0
// BURAYA SETLEYİP SIFIR YAPMAMIZ GEREK PAZARTESİ POMPA 1 DEĞERİ İÇİN

		                                      data5=Flash_Read5(0x080E0000);
 80047f6:	481e      	ldr	r0, [pc, #120]	; (8004870 <pazar+0x80>)
 80047f8:	f000 fec2 	bl	8005580 <Flash_Read5>
 80047fc:	4603      	mov	r3, r0
 80047fe:	4a1d      	ldr	r2, [pc, #116]	; (8004874 <pazar+0x84>)
 8004800:	6013      	str	r3, [r2, #0]
			 		 	                         for(int i=0;i<30;i++){
 8004802:	2300      	movs	r3, #0
 8004804:	607b      	str	r3, [r7, #4]
 8004806:	e00c      	b.n	8004822 <pazar+0x32>

			 		 	    	 								 		  read5[i]=data5[i];
 8004808:	4b1a      	ldr	r3, [pc, #104]	; (8004874 <pazar+0x84>)
 800480a:	681a      	ldr	r2, [r3, #0]
 800480c:	687b      	ldr	r3, [r7, #4]
 800480e:	009b      	lsls	r3, r3, #2
 8004810:	4413      	add	r3, r2
 8004812:	681a      	ldr	r2, [r3, #0]
 8004814:	4918      	ldr	r1, [pc, #96]	; (8004878 <pazar+0x88>)
 8004816:	687b      	ldr	r3, [r7, #4]
 8004818:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
			 		 	                         for(int i=0;i<30;i++){
 800481c:	687b      	ldr	r3, [r7, #4]
 800481e:	3301      	adds	r3, #1
 8004820:	607b      	str	r3, [r7, #4]
 8004822:	687b      	ldr	r3, [r7, #4]
 8004824:	2b1d      	cmp	r3, #29
 8004826:	ddef      	ble.n	8004808 <pazar+0x18>
			 		 	    	 								 	   }

			 		 	                       pazar_pompa1=read5[24];
 8004828:	4b13      	ldr	r3, [pc, #76]	; (8004878 <pazar+0x88>)
 800482a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800482c:	4a13      	ldr	r2, [pc, #76]	; (800487c <pazar+0x8c>)
 800482e:	6013      	str	r3, [r2, #0]
     			 		 	                       pazar_pompa2=read5[25];
 8004830:	4b11      	ldr	r3, [pc, #68]	; (8004878 <pazar+0x88>)
 8004832:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004834:	4a12      	ldr	r2, [pc, #72]	; (8004880 <pazar+0x90>)
 8004836:	6013      	str	r3, [r2, #0]
     			 		 	                       pazar_pompa3=read5[26];
 8004838:	4b0f      	ldr	r3, [pc, #60]	; (8004878 <pazar+0x88>)
 800483a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800483c:	4a11      	ldr	r2, [pc, #68]	; (8004884 <pazar+0x94>)
 800483e:	6013      	str	r3, [r2, #0]
     			 		 	                       pazar_pompa4=read5[27];
 8004840:	4b0d      	ldr	r3, [pc, #52]	; (8004878 <pazar+0x88>)
 8004842:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8004844:	4a10      	ldr	r2, [pc, #64]	; (8004888 <pazar+0x98>)
 8004846:	6013      	str	r3, [r2, #0]

		 		 	                           Flash_Write5(0x080E0000,read5,30);
 8004848:	221e      	movs	r2, #30
 800484a:	490b      	ldr	r1, [pc, #44]	; (8004878 <pazar+0x88>)
 800484c:	4808      	ldr	r0, [pc, #32]	; (8004870 <pazar+0x80>)
 800484e:	f000 fde7 	bl	8005420 <Flash_Write5>




while(1){
	if(degisken15==0)
 8004852:	4b0e      	ldr	r3, [pc, #56]	; (800488c <pazar+0x9c>)
 8004854:	781b      	ldrb	r3, [r3, #0]
 8004856:	2b00      	cmp	r3, #0
 8004858:	f040 809c 	bne.w	8004994 <pazar+0x1a4>
			{
				 data5=Flash_Read5(0x080E0000);
 800485c:	4804      	ldr	r0, [pc, #16]	; (8004870 <pazar+0x80>)
 800485e:	f000 fe8f 	bl	8005580 <Flash_Read5>
 8004862:	4603      	mov	r3, r0
 8004864:	4a03      	ldr	r2, [pc, #12]	; (8004874 <pazar+0x84>)
 8004866:	6013      	str	r3, [r2, #0]
				 for(int i=0;i<29;i++)
 8004868:	2300      	movs	r3, #0
 800486a:	603b      	str	r3, [r7, #0]
 800486c:	e01d      	b.n	80048aa <pazar+0xba>
 800486e:	bf00      	nop
 8004870:	080e0000 	.word	0x080e0000
 8004874:	20000480 	.word	0x20000480
 8004878:	20000344 	.word	0x20000344
 800487c:	200000bc 	.word	0x200000bc
 8004880:	200000c0 	.word	0x200000c0
 8004884:	200000c4 	.word	0x200000c4
 8004888:	200000c8 	.word	0x200000c8
 800488c:	20000045 	.word	0x20000045
				 											 							 	{
				 											 							 	veri5[i]=data5[i];
 8004890:	4bba      	ldr	r3, [pc, #744]	; (8004b7c <pazar+0x38c>)
 8004892:	681a      	ldr	r2, [r3, #0]
 8004894:	683b      	ldr	r3, [r7, #0]
 8004896:	009b      	lsls	r3, r3, #2
 8004898:	4413      	add	r3, r2
 800489a:	681a      	ldr	r2, [r3, #0]
 800489c:	49b8      	ldr	r1, [pc, #736]	; (8004b80 <pazar+0x390>)
 800489e:	683b      	ldr	r3, [r7, #0]
 80048a0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
				 for(int i=0;i<29;i++)
 80048a4:	683b      	ldr	r3, [r7, #0]
 80048a6:	3301      	adds	r3, #1
 80048a8:	603b      	str	r3, [r7, #0]
 80048aa:	683b      	ldr	r3, [r7, #0]
 80048ac:	2b1c      	cmp	r3, #28
 80048ae:	ddef      	ble.n	8004890 <pazar+0xa0>
				 											 							 	}



			if(pazar_pompa1==0 ){
 80048b0:	4bb4      	ldr	r3, [pc, #720]	; (8004b84 <pazar+0x394>)
 80048b2:	681b      	ldr	r3, [r3, #0]
 80048b4:	2b00      	cmp	r3, #0
 80048b6:	d134      	bne.n	8004922 <pazar+0x132>
				LCD_Send_String_On_Line1(">>Pmp1 Pasif");
 80048b8:	48b3      	ldr	r0, [pc, #716]	; (8004b88 <pazar+0x398>)
 80048ba:	f7fb ff59 	bl	8000770 <LCD_Send_String_On_Line1>
				LCD_Send_String_On_Line2("Pmp2");
 80048be:	48b3      	ldr	r0, [pc, #716]	; (8004b8c <pazar+0x39c>)
 80048c0:	f7fb ff64 	bl	800078c <LCD_Send_String_On_Line2>



										 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){pazar_pompa1=1;veri5[24]=pazar_pompa1;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 80048c4:	2110      	movs	r1, #16
 80048c6:	48b2      	ldr	r0, [pc, #712]	; (8004b90 <pazar+0x3a0>)
 80048c8:	f002 fc3a 	bl	8007140 <HAL_GPIO_ReadPin>
 80048cc:	4603      	mov	r3, r0
 80048ce:	2b01      	cmp	r3, #1
 80048d0:	d10e      	bne.n	80048f0 <pazar+0x100>
 80048d2:	4bac      	ldr	r3, [pc, #688]	; (8004b84 <pazar+0x394>)
 80048d4:	2201      	movs	r2, #1
 80048d6:	601a      	str	r2, [r3, #0]
 80048d8:	4baa      	ldr	r3, [pc, #680]	; (8004b84 <pazar+0x394>)
 80048da:	681b      	ldr	r3, [r3, #0]
 80048dc:	4aa8      	ldr	r2, [pc, #672]	; (8004b80 <pazar+0x390>)
 80048de:	6613      	str	r3, [r2, #96]	; 0x60
 80048e0:	221c      	movs	r2, #28
 80048e2:	49a7      	ldr	r1, [pc, #668]	; (8004b80 <pazar+0x390>)
 80048e4:	48ab      	ldr	r0, [pc, #684]	; (8004b94 <pazar+0x3a4>)
 80048e6:	f000 fd9b 	bl	8005420 <Flash_Write5>
 80048ea:	2001      	movs	r0, #1
 80048ec:	f7fb fe70 	bl	80005d0 <LCD_Send_Cmd>

										 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 80048f0:	2180      	movs	r1, #128	; 0x80
 80048f2:	48a9      	ldr	r0, [pc, #676]	; (8004b98 <pazar+0x3a8>)
 80048f4:	f002 fc24 	bl	8007140 <HAL_GPIO_ReadPin>
 80048f8:	4603      	mov	r3, r0
 80048fa:	2b01      	cmp	r3, #1
 80048fc:	d105      	bne.n	800490a <pazar+0x11a>
											 degisken15=1;
 80048fe:	4ba7      	ldr	r3, [pc, #668]	; (8004b9c <pazar+0x3ac>)
 8004900:	2201      	movs	r2, #1
 8004902:	701a      	strb	r2, [r3, #0]
											 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004904:	2001      	movs	r0, #1
 8004906:	f7fb fe63 	bl	80005d0 <LCD_Send_Cmd>

										 }
										 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 800490a:	2120      	movs	r1, #32
 800490c:	48a0      	ldr	r0, [pc, #640]	; (8004b90 <pazar+0x3a0>)
 800490e:	f002 fc17 	bl	8007140 <HAL_GPIO_ReadPin>
 8004912:	4603      	mov	r3, r0
 8004914:	2b01      	cmp	r3, #1
 8004916:	d104      	bne.n	8004922 <pazar+0x132>
																				 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004918:	2001      	movs	r0, #1
 800491a:	f7fb fe59 	bl	80005d0 <LCD_Send_Cmd>
																				 					 	 Ayar_Gun();
 800491e:	f7fc f84d 	bl	80009bc <Ayar_Gun>
																				 					                                          }

			}
			if(pazar_pompa1==1 ){
 8004922:	4b98      	ldr	r3, [pc, #608]	; (8004b84 <pazar+0x394>)
 8004924:	681b      	ldr	r3, [r3, #0]
 8004926:	2b01      	cmp	r3, #1
 8004928:	d134      	bne.n	8004994 <pazar+0x1a4>
							LCD_Send_String_On_Line1(">>Pmp1 Aktif");
 800492a:	489d      	ldr	r0, [pc, #628]	; (8004ba0 <pazar+0x3b0>)
 800492c:	f7fb ff20 	bl	8000770 <LCD_Send_String_On_Line1>
							LCD_Send_String_On_Line2("Pmp2");
 8004930:	4896      	ldr	r0, [pc, #600]	; (8004b8c <pazar+0x39c>)
 8004932:	f7fb ff2b 	bl	800078c <LCD_Send_String_On_Line2>



													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){pazar_pompa1=0;veri5[24]=pazar_pompa1;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8004936:	2110      	movs	r1, #16
 8004938:	4895      	ldr	r0, [pc, #596]	; (8004b90 <pazar+0x3a0>)
 800493a:	f002 fc01 	bl	8007140 <HAL_GPIO_ReadPin>
 800493e:	4603      	mov	r3, r0
 8004940:	2b01      	cmp	r3, #1
 8004942:	d10e      	bne.n	8004962 <pazar+0x172>
 8004944:	4b8f      	ldr	r3, [pc, #572]	; (8004b84 <pazar+0x394>)
 8004946:	2200      	movs	r2, #0
 8004948:	601a      	str	r2, [r3, #0]
 800494a:	4b8e      	ldr	r3, [pc, #568]	; (8004b84 <pazar+0x394>)
 800494c:	681b      	ldr	r3, [r3, #0]
 800494e:	4a8c      	ldr	r2, [pc, #560]	; (8004b80 <pazar+0x390>)
 8004950:	6613      	str	r3, [r2, #96]	; 0x60
 8004952:	221c      	movs	r2, #28
 8004954:	498a      	ldr	r1, [pc, #552]	; (8004b80 <pazar+0x390>)
 8004956:	488f      	ldr	r0, [pc, #572]	; (8004b94 <pazar+0x3a4>)
 8004958:	f000 fd62 	bl	8005420 <Flash_Write5>
 800495c:	2001      	movs	r0, #1
 800495e:	f7fb fe37 	bl	80005d0 <LCD_Send_Cmd>

													 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8004962:	2180      	movs	r1, #128	; 0x80
 8004964:	488c      	ldr	r0, [pc, #560]	; (8004b98 <pazar+0x3a8>)
 8004966:	f002 fbeb 	bl	8007140 <HAL_GPIO_ReadPin>
 800496a:	4603      	mov	r3, r0
 800496c:	2b01      	cmp	r3, #1
 800496e:	d105      	bne.n	800497c <pazar+0x18c>
														 degisken15=1;
 8004970:	4b8a      	ldr	r3, [pc, #552]	; (8004b9c <pazar+0x3ac>)
 8004972:	2201      	movs	r2, #1
 8004974:	701a      	strb	r2, [r3, #0]
														 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004976:	2001      	movs	r0, #1
 8004978:	f7fb fe2a 	bl	80005d0 <LCD_Send_Cmd>

													 }
													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 800497c:	2120      	movs	r1, #32
 800497e:	4884      	ldr	r0, [pc, #528]	; (8004b90 <pazar+0x3a0>)
 8004980:	f002 fbde 	bl	8007140 <HAL_GPIO_ReadPin>
 8004984:	4603      	mov	r3, r0
 8004986:	2b01      	cmp	r3, #1
 8004988:	d104      	bne.n	8004994 <pazar+0x1a4>
																							 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800498a:	2001      	movs	r0, #1
 800498c:	f7fb fe20 	bl	80005d0 <LCD_Send_Cmd>
																							 					 	 Ayar_Gun();
 8004990:	f7fc f814 	bl	80009bc <Ayar_Gun>
						}


			}

	if(degisken15==1)
 8004994:	4b81      	ldr	r3, [pc, #516]	; (8004b9c <pazar+0x3ac>)
 8004996:	781b      	ldrb	r3, [r3, #0]
 8004998:	2b01      	cmp	r3, #1
 800499a:	f040 808c 	bne.w	8004ab6 <pazar+0x2c6>
				{

				if(pazar_pompa2==0 ){
 800499e:	4b81      	ldr	r3, [pc, #516]	; (8004ba4 <pazar+0x3b4>)
 80049a0:	681b      	ldr	r3, [r3, #0]
 80049a2:	2b00      	cmp	r3, #0
 80049a4:	d141      	bne.n	8004a2a <pazar+0x23a>
					LCD_Send_String_On_Line1("Pmp1");
 80049a6:	4880      	ldr	r0, [pc, #512]	; (8004ba8 <pazar+0x3b8>)
 80049a8:	f7fb fee2 	bl	8000770 <LCD_Send_String_On_Line1>
					LCD_Send_String_On_Line2(">>Pmp2 Pasif");
 80049ac:	487f      	ldr	r0, [pc, #508]	; (8004bac <pazar+0x3bc>)
 80049ae:	f7fb feed 	bl	800078c <LCD_Send_String_On_Line2>



											 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){pazar_pompa2=1;veri5[25]=pazar_pompa2;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 80049b2:	2110      	movs	r1, #16
 80049b4:	4876      	ldr	r0, [pc, #472]	; (8004b90 <pazar+0x3a0>)
 80049b6:	f002 fbc3 	bl	8007140 <HAL_GPIO_ReadPin>
 80049ba:	4603      	mov	r3, r0
 80049bc:	2b01      	cmp	r3, #1
 80049be:	d10e      	bne.n	80049de <pazar+0x1ee>
 80049c0:	4b78      	ldr	r3, [pc, #480]	; (8004ba4 <pazar+0x3b4>)
 80049c2:	2201      	movs	r2, #1
 80049c4:	601a      	str	r2, [r3, #0]
 80049c6:	4b77      	ldr	r3, [pc, #476]	; (8004ba4 <pazar+0x3b4>)
 80049c8:	681b      	ldr	r3, [r3, #0]
 80049ca:	4a6d      	ldr	r2, [pc, #436]	; (8004b80 <pazar+0x390>)
 80049cc:	6653      	str	r3, [r2, #100]	; 0x64
 80049ce:	221c      	movs	r2, #28
 80049d0:	496b      	ldr	r1, [pc, #428]	; (8004b80 <pazar+0x390>)
 80049d2:	4870      	ldr	r0, [pc, #448]	; (8004b94 <pazar+0x3a4>)
 80049d4:	f000 fd24 	bl	8005420 <Flash_Write5>
 80049d8:	2001      	movs	r0, #1
 80049da:	f7fb fdf9 	bl	80005d0 <LCD_Send_Cmd>

											 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 80049de:	2180      	movs	r1, #128	; 0x80
 80049e0:	486d      	ldr	r0, [pc, #436]	; (8004b98 <pazar+0x3a8>)
 80049e2:	f002 fbad 	bl	8007140 <HAL_GPIO_ReadPin>
 80049e6:	4603      	mov	r3, r0
 80049e8:	2b01      	cmp	r3, #1
 80049ea:	d105      	bne.n	80049f8 <pazar+0x208>
												 degisken15=2;
 80049ec:	4b6b      	ldr	r3, [pc, #428]	; (8004b9c <pazar+0x3ac>)
 80049ee:	2202      	movs	r2, #2
 80049f0:	701a      	strb	r2, [r3, #0]
												 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80049f2:	2001      	movs	r0, #1
 80049f4:	f7fb fdec 	bl	80005d0 <LCD_Send_Cmd>
											 }
											 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 80049f8:	2140      	movs	r1, #64	; 0x40
 80049fa:	4867      	ldr	r0, [pc, #412]	; (8004b98 <pazar+0x3a8>)
 80049fc:	f002 fba0 	bl	8007140 <HAL_GPIO_ReadPin>
 8004a00:	4603      	mov	r3, r0
 8004a02:	2b01      	cmp	r3, #1
 8004a04:	d105      	bne.n	8004a12 <pazar+0x222>
																						 degisken15=1;
 8004a06:	4b65      	ldr	r3, [pc, #404]	; (8004b9c <pazar+0x3ac>)
 8004a08:	2201      	movs	r2, #1
 8004a0a:	701a      	strb	r2, [r3, #0]
																						 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004a0c:	2001      	movs	r0, #1
 8004a0e:	f7fb fddf 	bl	80005d0 <LCD_Send_Cmd>
																					 }
											 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8004a12:	2120      	movs	r1, #32
 8004a14:	485e      	ldr	r0, [pc, #376]	; (8004b90 <pazar+0x3a0>)
 8004a16:	f002 fb93 	bl	8007140 <HAL_GPIO_ReadPin>
 8004a1a:	4603      	mov	r3, r0
 8004a1c:	2b01      	cmp	r3, #1
 8004a1e:	d104      	bne.n	8004a2a <pazar+0x23a>
																					 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004a20:	2001      	movs	r0, #1
 8004a22:	f7fb fdd5 	bl	80005d0 <LCD_Send_Cmd>
																					 					 	 Ayar_Gun();
 8004a26:	f7fb ffc9 	bl	80009bc <Ayar_Gun>
																					 					                                          }
				}
				if(pazar_pompa2==1 ){
 8004a2a:	4b5e      	ldr	r3, [pc, #376]	; (8004ba4 <pazar+0x3b4>)
 8004a2c:	681b      	ldr	r3, [r3, #0]
 8004a2e:	2b01      	cmp	r3, #1
 8004a30:	d141      	bne.n	8004ab6 <pazar+0x2c6>
								LCD_Send_String_On_Line1("Pmp1");
 8004a32:	485d      	ldr	r0, [pc, #372]	; (8004ba8 <pazar+0x3b8>)
 8004a34:	f7fb fe9c 	bl	8000770 <LCD_Send_String_On_Line1>
								LCD_Send_String_On_Line2(">>Pmp2 Aktif");
 8004a38:	485d      	ldr	r0, [pc, #372]	; (8004bb0 <pazar+0x3c0>)
 8004a3a:	f7fb fea7 	bl	800078c <LCD_Send_String_On_Line2>



														 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){pazar_pompa2=0;veri5[25]=pazar_pompa2;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8004a3e:	2110      	movs	r1, #16
 8004a40:	4853      	ldr	r0, [pc, #332]	; (8004b90 <pazar+0x3a0>)
 8004a42:	f002 fb7d 	bl	8007140 <HAL_GPIO_ReadPin>
 8004a46:	4603      	mov	r3, r0
 8004a48:	2b01      	cmp	r3, #1
 8004a4a:	d10e      	bne.n	8004a6a <pazar+0x27a>
 8004a4c:	4b55      	ldr	r3, [pc, #340]	; (8004ba4 <pazar+0x3b4>)
 8004a4e:	2200      	movs	r2, #0
 8004a50:	601a      	str	r2, [r3, #0]
 8004a52:	4b54      	ldr	r3, [pc, #336]	; (8004ba4 <pazar+0x3b4>)
 8004a54:	681b      	ldr	r3, [r3, #0]
 8004a56:	4a4a      	ldr	r2, [pc, #296]	; (8004b80 <pazar+0x390>)
 8004a58:	6653      	str	r3, [r2, #100]	; 0x64
 8004a5a:	221c      	movs	r2, #28
 8004a5c:	4948      	ldr	r1, [pc, #288]	; (8004b80 <pazar+0x390>)
 8004a5e:	484d      	ldr	r0, [pc, #308]	; (8004b94 <pazar+0x3a4>)
 8004a60:	f000 fcde 	bl	8005420 <Flash_Write5>
 8004a64:	2001      	movs	r0, #1
 8004a66:	f7fb fdb3 	bl	80005d0 <LCD_Send_Cmd>

														 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8004a6a:	2180      	movs	r1, #128	; 0x80
 8004a6c:	484a      	ldr	r0, [pc, #296]	; (8004b98 <pazar+0x3a8>)
 8004a6e:	f002 fb67 	bl	8007140 <HAL_GPIO_ReadPin>
 8004a72:	4603      	mov	r3, r0
 8004a74:	2b01      	cmp	r3, #1
 8004a76:	d105      	bne.n	8004a84 <pazar+0x294>
															 degisken15=2;
 8004a78:	4b48      	ldr	r3, [pc, #288]	; (8004b9c <pazar+0x3ac>)
 8004a7a:	2202      	movs	r2, #2
 8004a7c:	701a      	strb	r2, [r3, #0]
															 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004a7e:	2001      	movs	r0, #1
 8004a80:	f7fb fda6 	bl	80005d0 <LCD_Send_Cmd>
														 }
														 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8004a84:	2140      	movs	r1, #64	; 0x40
 8004a86:	4844      	ldr	r0, [pc, #272]	; (8004b98 <pazar+0x3a8>)
 8004a88:	f002 fb5a 	bl	8007140 <HAL_GPIO_ReadPin>
 8004a8c:	4603      	mov	r3, r0
 8004a8e:	2b01      	cmp	r3, #1
 8004a90:	d105      	bne.n	8004a9e <pazar+0x2ae>
															 degisken15=0;
 8004a92:	4b42      	ldr	r3, [pc, #264]	; (8004b9c <pazar+0x3ac>)
 8004a94:	2200      	movs	r2, #0
 8004a96:	701a      	strb	r2, [r3, #0]
															LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004a98:	2001      	movs	r0, #1
 8004a9a:	f7fb fd99 	bl	80005d0 <LCD_Send_Cmd>
																							}
														 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8004a9e:	2120      	movs	r1, #32
 8004aa0:	483b      	ldr	r0, [pc, #236]	; (8004b90 <pazar+0x3a0>)
 8004aa2:	f002 fb4d 	bl	8007140 <HAL_GPIO_ReadPin>
 8004aa6:	4603      	mov	r3, r0
 8004aa8:	2b01      	cmp	r3, #1
 8004aaa:	d104      	bne.n	8004ab6 <pazar+0x2c6>
																								 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004aac:	2001      	movs	r0, #1
 8004aae:	f7fb fd8f 	bl	80005d0 <LCD_Send_Cmd>
																								 					 	 Ayar_Gun();
 8004ab2:	f7fb ff83 	bl	80009bc <Ayar_Gun>

				}



	if(degisken15==2)
 8004ab6:	4b39      	ldr	r3, [pc, #228]	; (8004b9c <pazar+0x3ac>)
 8004ab8:	781b      	ldrb	r3, [r3, #0]
 8004aba:	2b02      	cmp	r3, #2
 8004abc:	f040 80b4 	bne.w	8004c28 <pazar+0x438>
					{

					if(pazar_pompa3==0 ){
 8004ac0:	4b3c      	ldr	r3, [pc, #240]	; (8004bb4 <pazar+0x3c4>)
 8004ac2:	681b      	ldr	r3, [r3, #0]
 8004ac4:	2b00      	cmp	r3, #0
 8004ac6:	d141      	bne.n	8004b4c <pazar+0x35c>
						LCD_Send_String_On_Line1(">>Pmp3 Pasif");
 8004ac8:	483b      	ldr	r0, [pc, #236]	; (8004bb8 <pazar+0x3c8>)
 8004aca:	f7fb fe51 	bl	8000770 <LCD_Send_String_On_Line1>
						LCD_Send_String_On_Line2("Pmp4 ");
 8004ace:	483b      	ldr	r0, [pc, #236]	; (8004bbc <pazar+0x3cc>)
 8004ad0:	f7fb fe5c 	bl	800078c <LCD_Send_String_On_Line2>



												 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){pazar_pompa3=1;veri5[26]=pazar_pompa3;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8004ad4:	2110      	movs	r1, #16
 8004ad6:	482e      	ldr	r0, [pc, #184]	; (8004b90 <pazar+0x3a0>)
 8004ad8:	f002 fb32 	bl	8007140 <HAL_GPIO_ReadPin>
 8004adc:	4603      	mov	r3, r0
 8004ade:	2b01      	cmp	r3, #1
 8004ae0:	d10e      	bne.n	8004b00 <pazar+0x310>
 8004ae2:	4b34      	ldr	r3, [pc, #208]	; (8004bb4 <pazar+0x3c4>)
 8004ae4:	2201      	movs	r2, #1
 8004ae6:	601a      	str	r2, [r3, #0]
 8004ae8:	4b32      	ldr	r3, [pc, #200]	; (8004bb4 <pazar+0x3c4>)
 8004aea:	681b      	ldr	r3, [r3, #0]
 8004aec:	4a24      	ldr	r2, [pc, #144]	; (8004b80 <pazar+0x390>)
 8004aee:	6693      	str	r3, [r2, #104]	; 0x68
 8004af0:	221c      	movs	r2, #28
 8004af2:	4923      	ldr	r1, [pc, #140]	; (8004b80 <pazar+0x390>)
 8004af4:	4827      	ldr	r0, [pc, #156]	; (8004b94 <pazar+0x3a4>)
 8004af6:	f000 fc93 	bl	8005420 <Flash_Write5>
 8004afa:	2001      	movs	r0, #1
 8004afc:	f7fb fd68 	bl	80005d0 <LCD_Send_Cmd>

												 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8004b00:	2180      	movs	r1, #128	; 0x80
 8004b02:	4825      	ldr	r0, [pc, #148]	; (8004b98 <pazar+0x3a8>)
 8004b04:	f002 fb1c 	bl	8007140 <HAL_GPIO_ReadPin>
 8004b08:	4603      	mov	r3, r0
 8004b0a:	2b01      	cmp	r3, #1
 8004b0c:	d105      	bne.n	8004b1a <pazar+0x32a>
													 degisken15=3;
 8004b0e:	4b23      	ldr	r3, [pc, #140]	; (8004b9c <pazar+0x3ac>)
 8004b10:	2203      	movs	r2, #3
 8004b12:	701a      	strb	r2, [r3, #0]
													 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004b14:	2001      	movs	r0, #1
 8004b16:	f7fb fd5b 	bl	80005d0 <LCD_Send_Cmd>
												 }
												 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8004b1a:	2140      	movs	r1, #64	; 0x40
 8004b1c:	481e      	ldr	r0, [pc, #120]	; (8004b98 <pazar+0x3a8>)
 8004b1e:	f002 fb0f 	bl	8007140 <HAL_GPIO_ReadPin>
 8004b22:	4603      	mov	r3, r0
 8004b24:	2b01      	cmp	r3, #1
 8004b26:	d105      	bne.n	8004b34 <pazar+0x344>
													 degisken15=1;
 8004b28:	4b1c      	ldr	r3, [pc, #112]	; (8004b9c <pazar+0x3ac>)
 8004b2a:	2201      	movs	r2, #1
 8004b2c:	701a      	strb	r2, [r3, #0]
																							 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004b2e:	2001      	movs	r0, #1
 8004b30:	f7fb fd4e 	bl	80005d0 <LCD_Send_Cmd>
																						 }
												 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8004b34:	2120      	movs	r1, #32
 8004b36:	4816      	ldr	r0, [pc, #88]	; (8004b90 <pazar+0x3a0>)
 8004b38:	f002 fb02 	bl	8007140 <HAL_GPIO_ReadPin>
 8004b3c:	4603      	mov	r3, r0
 8004b3e:	2b01      	cmp	r3, #1
 8004b40:	d104      	bne.n	8004b4c <pazar+0x35c>
																						 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004b42:	2001      	movs	r0, #1
 8004b44:	f7fb fd44 	bl	80005d0 <LCD_Send_Cmd>
																						 					 	 Ayar_Gun();
 8004b48:	f7fb ff38 	bl	80009bc <Ayar_Gun>
																						 					                                          }
					}
					if(pazar_pompa3==1 ){
 8004b4c:	4b19      	ldr	r3, [pc, #100]	; (8004bb4 <pazar+0x3c4>)
 8004b4e:	681b      	ldr	r3, [r3, #0]
 8004b50:	2b01      	cmp	r3, #1
 8004b52:	d169      	bne.n	8004c28 <pazar+0x438>
									LCD_Send_String_On_Line1(">>Pmp3 Aktif");
 8004b54:	481a      	ldr	r0, [pc, #104]	; (8004bc0 <pazar+0x3d0>)
 8004b56:	f7fb fe0b 	bl	8000770 <LCD_Send_String_On_Line1>
									LCD_Send_String_On_Line2("Pmp4");
 8004b5a:	481a      	ldr	r0, [pc, #104]	; (8004bc4 <pazar+0x3d4>)
 8004b5c:	f7fb fe16 	bl	800078c <LCD_Send_String_On_Line2>



															 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){pazar_pompa3=0;veri5[26]=pazar_pompa3;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8004b60:	2110      	movs	r1, #16
 8004b62:	480b      	ldr	r0, [pc, #44]	; (8004b90 <pazar+0x3a0>)
 8004b64:	f002 faec 	bl	8007140 <HAL_GPIO_ReadPin>
 8004b68:	4603      	mov	r3, r0
 8004b6a:	2b01      	cmp	r3, #1
 8004b6c:	d136      	bne.n	8004bdc <pazar+0x3ec>
 8004b6e:	4b11      	ldr	r3, [pc, #68]	; (8004bb4 <pazar+0x3c4>)
 8004b70:	2200      	movs	r2, #0
 8004b72:	601a      	str	r2, [r3, #0]
 8004b74:	4b0f      	ldr	r3, [pc, #60]	; (8004bb4 <pazar+0x3c4>)
 8004b76:	681b      	ldr	r3, [r3, #0]
 8004b78:	e026      	b.n	8004bc8 <pazar+0x3d8>
 8004b7a:	bf00      	nop
 8004b7c:	20000480 	.word	0x20000480
 8004b80:	20000144 	.word	0x20000144
 8004b84:	200000bc 	.word	0x200000bc
 8004b88:	08009004 	.word	0x08009004
 8004b8c:	08009014 	.word	0x08009014
 8004b90:	40020800 	.word	0x40020800
 8004b94:	080e0000 	.word	0x080e0000
 8004b98:	40020000 	.word	0x40020000
 8004b9c:	20000045 	.word	0x20000045
 8004ba0:	0800901c 	.word	0x0800901c
 8004ba4:	200000c0 	.word	0x200000c0
 8004ba8:	0800902c 	.word	0x0800902c
 8004bac:	08009034 	.word	0x08009034
 8004bb0:	08009044 	.word	0x08009044
 8004bb4:	200000c4 	.word	0x200000c4
 8004bb8:	08009054 	.word	0x08009054
 8004bbc:	08009064 	.word	0x08009064
 8004bc0:	0800906c 	.word	0x0800906c
 8004bc4:	0800907c 	.word	0x0800907c
 8004bc8:	4a61      	ldr	r2, [pc, #388]	; (8004d50 <pazar+0x560>)
 8004bca:	6693      	str	r3, [r2, #104]	; 0x68
 8004bcc:	221c      	movs	r2, #28
 8004bce:	4960      	ldr	r1, [pc, #384]	; (8004d50 <pazar+0x560>)
 8004bd0:	4860      	ldr	r0, [pc, #384]	; (8004d54 <pazar+0x564>)
 8004bd2:	f000 fc25 	bl	8005420 <Flash_Write5>
 8004bd6:	2001      	movs	r0, #1
 8004bd8:	f7fb fcfa 	bl	80005d0 <LCD_Send_Cmd>

															 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8004bdc:	2180      	movs	r1, #128	; 0x80
 8004bde:	485e      	ldr	r0, [pc, #376]	; (8004d58 <pazar+0x568>)
 8004be0:	f002 faae 	bl	8007140 <HAL_GPIO_ReadPin>
 8004be4:	4603      	mov	r3, r0
 8004be6:	2b01      	cmp	r3, #1
 8004be8:	d105      	bne.n	8004bf6 <pazar+0x406>
																 degisken15=3;
 8004bea:	4b5c      	ldr	r3, [pc, #368]	; (8004d5c <pazar+0x56c>)
 8004bec:	2203      	movs	r2, #3
 8004bee:	701a      	strb	r2, [r3, #0]
																 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004bf0:	2001      	movs	r0, #1
 8004bf2:	f7fb fced 	bl	80005d0 <LCD_Send_Cmd>
															 }
															 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8004bf6:	2140      	movs	r1, #64	; 0x40
 8004bf8:	4857      	ldr	r0, [pc, #348]	; (8004d58 <pazar+0x568>)
 8004bfa:	f002 faa1 	bl	8007140 <HAL_GPIO_ReadPin>
 8004bfe:	4603      	mov	r3, r0
 8004c00:	2b01      	cmp	r3, #1
 8004c02:	d105      	bne.n	8004c10 <pazar+0x420>
																 degisken15=1;
 8004c04:	4b55      	ldr	r3, [pc, #340]	; (8004d5c <pazar+0x56c>)
 8004c06:	2201      	movs	r2, #1
 8004c08:	701a      	strb	r2, [r3, #0]
																LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004c0a:	2001      	movs	r0, #1
 8004c0c:	f7fb fce0 	bl	80005d0 <LCD_Send_Cmd>
																								}
															 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8004c10:	2120      	movs	r1, #32
 8004c12:	4853      	ldr	r0, [pc, #332]	; (8004d60 <pazar+0x570>)
 8004c14:	f002 fa94 	bl	8007140 <HAL_GPIO_ReadPin>
 8004c18:	4603      	mov	r3, r0
 8004c1a:	2b01      	cmp	r3, #1
 8004c1c:	d104      	bne.n	8004c28 <pazar+0x438>
																									 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004c1e:	2001      	movs	r0, #1
 8004c20:	f7fb fcd6 	bl	80005d0 <LCD_Send_Cmd>
																									 					 	 Ayar_Gun();
 8004c24:	f7fb feca 	bl	80009bc <Ayar_Gun>
																									 					                                          }
								}


					}
	if(degisken15==3)
 8004c28:	4b4c      	ldr	r3, [pc, #304]	; (8004d5c <pazar+0x56c>)
 8004c2a:	781b      	ldrb	r3, [r3, #0]
 8004c2c:	2b03      	cmp	r3, #3
 8004c2e:	f47f ae10 	bne.w	8004852 <pazar+0x62>
						{

						if(pazar_pompa4==0 ){
 8004c32:	4b4c      	ldr	r3, [pc, #304]	; (8004d64 <pazar+0x574>)
 8004c34:	681b      	ldr	r3, [r3, #0]
 8004c36:	2b00      	cmp	r3, #0
 8004c38:	d141      	bne.n	8004cbe <pazar+0x4ce>
							LCD_Send_String_On_Line1("Pmp3");
 8004c3a:	484b      	ldr	r0, [pc, #300]	; (8004d68 <pazar+0x578>)
 8004c3c:	f7fb fd98 	bl	8000770 <LCD_Send_String_On_Line1>
							LCD_Send_String_On_Line2(">>Pmp4 Pasif ");
 8004c40:	484a      	ldr	r0, [pc, #296]	; (8004d6c <pazar+0x57c>)
 8004c42:	f7fb fda3 	bl	800078c <LCD_Send_String_On_Line2>



													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){pazar_pompa4=1;veri5[27]=pazar_pompa4;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8004c46:	2110      	movs	r1, #16
 8004c48:	4845      	ldr	r0, [pc, #276]	; (8004d60 <pazar+0x570>)
 8004c4a:	f002 fa79 	bl	8007140 <HAL_GPIO_ReadPin>
 8004c4e:	4603      	mov	r3, r0
 8004c50:	2b01      	cmp	r3, #1
 8004c52:	d10e      	bne.n	8004c72 <pazar+0x482>
 8004c54:	4b43      	ldr	r3, [pc, #268]	; (8004d64 <pazar+0x574>)
 8004c56:	2201      	movs	r2, #1
 8004c58:	601a      	str	r2, [r3, #0]
 8004c5a:	4b42      	ldr	r3, [pc, #264]	; (8004d64 <pazar+0x574>)
 8004c5c:	681b      	ldr	r3, [r3, #0]
 8004c5e:	4a3c      	ldr	r2, [pc, #240]	; (8004d50 <pazar+0x560>)
 8004c60:	66d3      	str	r3, [r2, #108]	; 0x6c
 8004c62:	221c      	movs	r2, #28
 8004c64:	493a      	ldr	r1, [pc, #232]	; (8004d50 <pazar+0x560>)
 8004c66:	483b      	ldr	r0, [pc, #236]	; (8004d54 <pazar+0x564>)
 8004c68:	f000 fbda 	bl	8005420 <Flash_Write5>
 8004c6c:	2001      	movs	r0, #1
 8004c6e:	f7fb fcaf 	bl	80005d0 <LCD_Send_Cmd>

													 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8004c72:	2180      	movs	r1, #128	; 0x80
 8004c74:	4838      	ldr	r0, [pc, #224]	; (8004d58 <pazar+0x568>)
 8004c76:	f002 fa63 	bl	8007140 <HAL_GPIO_ReadPin>
 8004c7a:	4603      	mov	r3, r0
 8004c7c:	2b01      	cmp	r3, #1
 8004c7e:	d105      	bne.n	8004c8c <pazar+0x49c>
														 degisken15=0;
 8004c80:	4b36      	ldr	r3, [pc, #216]	; (8004d5c <pazar+0x56c>)
 8004c82:	2200      	movs	r2, #0
 8004c84:	701a      	strb	r2, [r3, #0]
														 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004c86:	2001      	movs	r0, #1
 8004c88:	f7fb fca2 	bl	80005d0 <LCD_Send_Cmd>
													 }
													 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8004c8c:	2140      	movs	r1, #64	; 0x40
 8004c8e:	4832      	ldr	r0, [pc, #200]	; (8004d58 <pazar+0x568>)
 8004c90:	f002 fa56 	bl	8007140 <HAL_GPIO_ReadPin>
 8004c94:	4603      	mov	r3, r0
 8004c96:	2b01      	cmp	r3, #1
 8004c98:	d105      	bne.n	8004ca6 <pazar+0x4b6>
														 degisken15=2;
 8004c9a:	4b30      	ldr	r3, [pc, #192]	; (8004d5c <pazar+0x56c>)
 8004c9c:	2202      	movs	r2, #2
 8004c9e:	701a      	strb	r2, [r3, #0]
																								 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004ca0:	2001      	movs	r0, #1
 8004ca2:	f7fb fc95 	bl	80005d0 <LCD_Send_Cmd>
																							 }
													 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8004ca6:	2120      	movs	r1, #32
 8004ca8:	482d      	ldr	r0, [pc, #180]	; (8004d60 <pazar+0x570>)
 8004caa:	f002 fa49 	bl	8007140 <HAL_GPIO_ReadPin>
 8004cae:	4603      	mov	r3, r0
 8004cb0:	2b01      	cmp	r3, #1
 8004cb2:	d104      	bne.n	8004cbe <pazar+0x4ce>
																							 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004cb4:	2001      	movs	r0, #1
 8004cb6:	f7fb fc8b 	bl	80005d0 <LCD_Send_Cmd>
																							 					 	 Ayar_Gun();
 8004cba:	f7fb fe7f 	bl	80009bc <Ayar_Gun>
																							 					                                          }
						}
						if(pazar_pompa4==1 ){
 8004cbe:	4b29      	ldr	r3, [pc, #164]	; (8004d64 <pazar+0x574>)
 8004cc0:	681b      	ldr	r3, [r3, #0]
 8004cc2:	2b01      	cmp	r3, #1
 8004cc4:	f47f adc5 	bne.w	8004852 <pazar+0x62>
										LCD_Send_String_On_Line1("Pmp3");
 8004cc8:	4827      	ldr	r0, [pc, #156]	; (8004d68 <pazar+0x578>)
 8004cca:	f7fb fd51 	bl	8000770 <LCD_Send_String_On_Line1>
										LCD_Send_String_On_Line2(">>Pmp4 Aktif");
 8004cce:	4828      	ldr	r0, [pc, #160]	; (8004d70 <pazar+0x580>)
 8004cd0:	f7fb fd5c 	bl	800078c <LCD_Send_String_On_Line2>



																 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_4)==1){pazar_pompa4=0;veri5[27]=pazar_pompa4;Flash_Write5(0x080E0000,veri5,28);LCD_Send_Cmd(LCD_CLEAR_DISPLAY);}
 8004cd4:	2110      	movs	r1, #16
 8004cd6:	4822      	ldr	r0, [pc, #136]	; (8004d60 <pazar+0x570>)
 8004cd8:	f002 fa32 	bl	8007140 <HAL_GPIO_ReadPin>
 8004cdc:	4603      	mov	r3, r0
 8004cde:	2b01      	cmp	r3, #1
 8004ce0:	d10e      	bne.n	8004d00 <pazar+0x510>
 8004ce2:	4b20      	ldr	r3, [pc, #128]	; (8004d64 <pazar+0x574>)
 8004ce4:	2200      	movs	r2, #0
 8004ce6:	601a      	str	r2, [r3, #0]
 8004ce8:	4b1e      	ldr	r3, [pc, #120]	; (8004d64 <pazar+0x574>)
 8004cea:	681b      	ldr	r3, [r3, #0]
 8004cec:	4a18      	ldr	r2, [pc, #96]	; (8004d50 <pazar+0x560>)
 8004cee:	66d3      	str	r3, [r2, #108]	; 0x6c
 8004cf0:	221c      	movs	r2, #28
 8004cf2:	4917      	ldr	r1, [pc, #92]	; (8004d50 <pazar+0x560>)
 8004cf4:	4817      	ldr	r0, [pc, #92]	; (8004d54 <pazar+0x564>)
 8004cf6:	f000 fb93 	bl	8005420 <Flash_Write5>
 8004cfa:	2001      	movs	r0, #1
 8004cfc:	f7fb fc68 	bl	80005d0 <LCD_Send_Cmd>

																 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8004d00:	2180      	movs	r1, #128	; 0x80
 8004d02:	4815      	ldr	r0, [pc, #84]	; (8004d58 <pazar+0x568>)
 8004d04:	f002 fa1c 	bl	8007140 <HAL_GPIO_ReadPin>
 8004d08:	4603      	mov	r3, r0
 8004d0a:	2b01      	cmp	r3, #1
 8004d0c:	d105      	bne.n	8004d1a <pazar+0x52a>
																	 degisken15=0;
 8004d0e:	4b13      	ldr	r3, [pc, #76]	; (8004d5c <pazar+0x56c>)
 8004d10:	2200      	movs	r2, #0
 8004d12:	701a      	strb	r2, [r3, #0]
																	 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004d14:	2001      	movs	r0, #1
 8004d16:	f7fb fc5b 	bl	80005d0 <LCD_Send_Cmd>
																 }
																 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8004d1a:	2140      	movs	r1, #64	; 0x40
 8004d1c:	480e      	ldr	r0, [pc, #56]	; (8004d58 <pazar+0x568>)
 8004d1e:	f002 fa0f 	bl	8007140 <HAL_GPIO_ReadPin>
 8004d22:	4603      	mov	r3, r0
 8004d24:	2b01      	cmp	r3, #1
 8004d26:	d105      	bne.n	8004d34 <pazar+0x544>
																	 degisken15=2;
 8004d28:	4b0c      	ldr	r3, [pc, #48]	; (8004d5c <pazar+0x56c>)
 8004d2a:	2202      	movs	r2, #2
 8004d2c:	701a      	strb	r2, [r3, #0]
																	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004d2e:	2001      	movs	r0, #1
 8004d30:	f7fb fc4e 	bl	80005d0 <LCD_Send_Cmd>
																									}
																 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8004d34:	2120      	movs	r1, #32
 8004d36:	480a      	ldr	r0, [pc, #40]	; (8004d60 <pazar+0x570>)
 8004d38:	f002 fa02 	bl	8007140 <HAL_GPIO_ReadPin>
 8004d3c:	4603      	mov	r3, r0
 8004d3e:	2b01      	cmp	r3, #1
 8004d40:	f47f ad87 	bne.w	8004852 <pazar+0x62>
																										 					 	LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004d44:	2001      	movs	r0, #1
 8004d46:	f7fb fc43 	bl	80005d0 <LCD_Send_Cmd>
																										 					 	 Ayar_Gun();
 8004d4a:	f7fb fe37 	bl	80009bc <Ayar_Gun>
	if(degisken15==0)
 8004d4e:	e580      	b.n	8004852 <pazar+0x62>
 8004d50:	20000144 	.word	0x20000144
 8004d54:	080e0000 	.word	0x080e0000
 8004d58:	40020000 	.word	0x40020000
 8004d5c:	20000045 	.word	0x20000045
 8004d60:	40020800 	.word	0x40020800
 8004d64:	200000c8 	.word	0x200000c8
 8004d68:	08009084 	.word	0x08009084
 8004d6c:	0800908c 	.word	0x0800908c
 8004d70:	0800909c 	.word	0x0800909c

08004d74 <saat_ayarlar>:

}
 }


void saat_ayarlar(){
 8004d74:	b580      	push	{r7, lr}
 8004d76:	b08e      	sub	sp, #56	; 0x38
 8004d78:	af00      	add	r7, sp, #0
	char snum[50];
	DS1302_Init();
 8004d7a:	f001 f9a3 	bl	80060c4 <DS1302_Init>



	     while(1){
	    	 if(degisken16==0)
 8004d7e:	4bba      	ldr	r3, [pc, #744]	; (8005068 <saat_ayarlar+0x2f4>)
 8004d80:	781b      	ldrb	r3, [r3, #0]
 8004d82:	2b00      	cmp	r3, #0
 8004d84:	f040 808d 	bne.w	8004ea2 <saat_ayarlar+0x12e>
	    	 {
	    	 LCD_Send_String_On_Line1(">>Saat");
 8004d88:	48b8      	ldr	r0, [pc, #736]	; (800506c <saat_ayarlar+0x2f8>)
 8004d8a:	f7fb fcf1 	bl	8000770 <LCD_Send_String_On_Line1>
	    	 LCD_Send_String_On_Line2("Dakika");
 8004d8e:	48b8      	ldr	r0, [pc, #736]	; (8005070 <saat_ayarlar+0x2fc>)
 8004d90:	f7fb fcfc 	bl	800078c <LCD_Send_String_On_Line2>



	    	 					itoa((saat), snum, 10);
 8004d94:	4bb7      	ldr	r3, [pc, #732]	; (8005074 <saat_ayarlar+0x300>)
 8004d96:	681b      	ldr	r3, [r3, #0]
 8004d98:	1d39      	adds	r1, r7, #4
 8004d9a:	220a      	movs	r2, #10
 8004d9c:	4618      	mov	r0, r3
 8004d9e:	f003 ff83 	bl	8008ca8 <itoa>
	    	 					HD44780_SetCursor(11,0);
 8004da2:	2100      	movs	r1, #0
 8004da4:	200b      	movs	r0, #11
 8004da6:	f000 fca5 	bl	80056f4 <HD44780_SetCursor>
	    	 					HD44780_PrintStr(snum);
 8004daa:	1d3b      	adds	r3, r7, #4
 8004dac:	4618      	mov	r0, r3
 8004dae:	f000 fd12 	bl	80057d6 <HD44780_PrintStr>

	    	 					itoa((dakika), snum, 10);
 8004db2:	4bb1      	ldr	r3, [pc, #708]	; (8005078 <saat_ayarlar+0x304>)
 8004db4:	681b      	ldr	r3, [r3, #0]
 8004db6:	1d39      	adds	r1, r7, #4
 8004db8:	220a      	movs	r2, #10
 8004dba:	4618      	mov	r0, r3
 8004dbc:	f003 ff74 	bl	8008ca8 <itoa>
	    	 						 HD44780_SetCursor(11,1);
 8004dc0:	2101      	movs	r1, #1
 8004dc2:	200b      	movs	r0, #11
 8004dc4:	f000 fc96 	bl	80056f4 <HD44780_SetCursor>
	    	 						HD44780_PrintStr(snum);
 8004dc8:	1d3b      	adds	r3, r7, #4
 8004dca:	4618      	mov	r0, r3
 8004dcc:	f000 fd03 	bl	80057d6 <HD44780_PrintStr>


	    	 						if((saat==10) &&  HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 ){LCD_Send_Cmd(LCD_CLEAR_DISPLAY);saat=saat-1;}
 8004dd0:	4ba8      	ldr	r3, [pc, #672]	; (8005074 <saat_ayarlar+0x300>)
 8004dd2:	681b      	ldr	r3, [r3, #0]
 8004dd4:	2b0a      	cmp	r3, #10
 8004dd6:	d10e      	bne.n	8004df6 <saat_ayarlar+0x82>
 8004dd8:	2120      	movs	r1, #32
 8004dda:	48a8      	ldr	r0, [pc, #672]	; (800507c <saat_ayarlar+0x308>)
 8004ddc:	f002 f9b0 	bl	8007140 <HAL_GPIO_ReadPin>
 8004de0:	4603      	mov	r3, r0
 8004de2:	2b01      	cmp	r3, #1
 8004de4:	d107      	bne.n	8004df6 <saat_ayarlar+0x82>
 8004de6:	2001      	movs	r0, #1
 8004de8:	f7fb fbf2 	bl	80005d0 <LCD_Send_Cmd>
 8004dec:	4ba1      	ldr	r3, [pc, #644]	; (8005074 <saat_ayarlar+0x300>)
 8004dee:	681b      	ldr	r3, [r3, #0]
 8004df0:	3b01      	subs	r3, #1
 8004df2:	4aa0      	ldr	r2, [pc, #640]	; (8005074 <saat_ayarlar+0x300>)
 8004df4:	6013      	str	r3, [r2, #0]
	    	 						if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==1  && saat <24)
 8004df6:	2110      	movs	r1, #16
 8004df8:	48a0      	ldr	r0, [pc, #640]	; (800507c <saat_ayarlar+0x308>)
 8004dfa:	f002 f9a1 	bl	8007140 <HAL_GPIO_ReadPin>
 8004dfe:	4603      	mov	r3, r0
 8004e00:	2b01      	cmp	r3, #1
 8004e02:	d108      	bne.n	8004e16 <saat_ayarlar+0xa2>
 8004e04:	4b9b      	ldr	r3, [pc, #620]	; (8005074 <saat_ayarlar+0x300>)
 8004e06:	681b      	ldr	r3, [r3, #0]
 8004e08:	2b17      	cmp	r3, #23
 8004e0a:	dc04      	bgt.n	8004e16 <saat_ayarlar+0xa2>
	    	 						{
	    	 							saat=saat+1;
 8004e0c:	4b99      	ldr	r3, [pc, #612]	; (8005074 <saat_ayarlar+0x300>)
 8004e0e:	681b      	ldr	r3, [r3, #0]
 8004e10:	3301      	adds	r3, #1
 8004e12:	4a98      	ldr	r2, [pc, #608]	; (8005074 <saat_ayarlar+0x300>)
 8004e14:	6013      	str	r3, [r2, #0]
	    	 						}
	    	 						 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 && saat>0 )
 8004e16:	2120      	movs	r1, #32
 8004e18:	4898      	ldr	r0, [pc, #608]	; (800507c <saat_ayarlar+0x308>)
 8004e1a:	f002 f991 	bl	8007140 <HAL_GPIO_ReadPin>
 8004e1e:	4603      	mov	r3, r0
 8004e20:	2b01      	cmp	r3, #1
 8004e22:	d108      	bne.n	8004e36 <saat_ayarlar+0xc2>
 8004e24:	4b93      	ldr	r3, [pc, #588]	; (8005074 <saat_ayarlar+0x300>)
 8004e26:	681b      	ldr	r3, [r3, #0]
 8004e28:	2b00      	cmp	r3, #0
 8004e2a:	dd04      	ble.n	8004e36 <saat_ayarlar+0xc2>
	    	 						 {
	    	 							saat=saat-1;
 8004e2c:	4b91      	ldr	r3, [pc, #580]	; (8005074 <saat_ayarlar+0x300>)
 8004e2e:	681b      	ldr	r3, [r3, #0]
 8004e30:	3b01      	subs	r3, #1
 8004e32:	4a90      	ldr	r2, [pc, #576]	; (8005074 <saat_ayarlar+0x300>)
 8004e34:	6013      	str	r3, [r2, #0]
	    	 						 }
	    	 						if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8004e36:	2180      	movs	r1, #128	; 0x80
 8004e38:	4890      	ldr	r0, [pc, #576]	; (800507c <saat_ayarlar+0x308>)
 8004e3a:	f002 f981 	bl	8007140 <HAL_GPIO_ReadPin>
 8004e3e:	4603      	mov	r3, r0
 8004e40:	2b01      	cmp	r3, #1
 8004e42:	d105      	bne.n	8004e50 <saat_ayarlar+0xdc>

                                                         	 degisken16=1;
 8004e44:	4b88      	ldr	r3, [pc, #544]	; (8005068 <saat_ayarlar+0x2f4>)
 8004e46:	2201      	movs	r2, #1
 8004e48:	701a      	strb	r2, [r3, #0]
	    	 												 LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004e4a:	2001      	movs	r0, #1
 8004e4c:	f7fb fbc0 	bl	80005d0 <LCD_Send_Cmd>

	    	 											 }
	    	 						 if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8004e50:	2120      	movs	r1, #32
 8004e52:	488b      	ldr	r0, [pc, #556]	; (8005080 <saat_ayarlar+0x30c>)
 8004e54:	f002 f974 	bl	8007140 <HAL_GPIO_ReadPin>
 8004e58:	4603      	mov	r3, r0
 8004e5a:	2b01      	cmp	r3, #1
 8004e5c:	d121      	bne.n	8004ea2 <saat_ayarlar+0x12e>
	    	 							         DS1302_Init();
 8004e5e:	f001 f931 	bl	80060c4 <DS1302_Init>
	    	 								     setTimer.day=gun;
 8004e62:	4b88      	ldr	r3, [pc, #544]	; (8005084 <saat_ayarlar+0x310>)
 8004e64:	681b      	ldr	r3, [r3, #0]
 8004e66:	b2da      	uxtb	r2, r3
 8004e68:	4b87      	ldr	r3, [pc, #540]	; (8005088 <saat_ayarlar+0x314>)
 8004e6a:	711a      	strb	r2, [r3, #4]
	    	 								     setTimer.isHourClock24=TRUE;
 8004e6c:	4b86      	ldr	r3, [pc, #536]	; (8005088 <saat_ayarlar+0x314>)
 8004e6e:	2201      	movs	r2, #1
 8004e70:	609a      	str	r2, [r3, #8]
	    	 								     setTimer.isAm=FALSE;
 8004e72:	4b85      	ldr	r3, [pc, #532]	; (8005088 <saat_ayarlar+0x314>)
 8004e74:	2200      	movs	r2, #0
 8004e76:	60da      	str	r2, [r3, #12]
	    	 								     setTimer.hour=saat;
 8004e78:	4b7e      	ldr	r3, [pc, #504]	; (8005074 <saat_ayarlar+0x300>)
 8004e7a:	681b      	ldr	r3, [r3, #0]
 8004e7c:	b2da      	uxtb	r2, r3
 8004e7e:	4b82      	ldr	r3, [pc, #520]	; (8005088 <saat_ayarlar+0x314>)
 8004e80:	741a      	strb	r2, [r3, #16]
	    	 								     setTimer.min=dakika;
 8004e82:	4b7d      	ldr	r3, [pc, #500]	; (8005078 <saat_ayarlar+0x304>)
 8004e84:	681b      	ldr	r3, [r3, #0]
 8004e86:	b2da      	uxtb	r2, r3
 8004e88:	4b7f      	ldr	r3, [pc, #508]	; (8005088 <saat_ayarlar+0x314>)
 8004e8a:	745a      	strb	r2, [r3, #17]
	    	 								     setTimer.sec=0;
 8004e8c:	4b7e      	ldr	r3, [pc, #504]	; (8005088 <saat_ayarlar+0x314>)
 8004e8e:	2200      	movs	r2, #0
 8004e90:	749a      	strb	r2, [r3, #18]
	    	 								      DS1302_SetTime_Struct(&setTimer);
 8004e92:	487d      	ldr	r0, [pc, #500]	; (8005088 <saat_ayarlar+0x314>)
 8004e94:	f001 fa52 	bl	800633c <DS1302_SetTime_Struct>

	    	 																		LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004e98:	2001      	movs	r0, #1
 8004e9a:	f7fb fb99 	bl	80005d0 <LCD_Send_Cmd>
	    	 																		 Genel_Ekran_Ayar();
 8004e9e:	f7fb fc83 	bl	80007a8 <Genel_Ekran_Ayar>
	    	 																	  }
	    	 }

	    	 if(degisken16==1)
 8004ea2:	4b71      	ldr	r3, [pc, #452]	; (8005068 <saat_ayarlar+0x2f4>)
 8004ea4:	781b      	ldrb	r3, [r3, #0]
 8004ea6:	2b01      	cmp	r3, #1
 8004ea8:	f040 809a 	bne.w	8004fe0 <saat_ayarlar+0x26c>
	    	 	    	 {
	    	 	    	 LCD_Send_String_On_Line1("Saat");
 8004eac:	4877      	ldr	r0, [pc, #476]	; (800508c <saat_ayarlar+0x318>)
 8004eae:	f7fb fc5f 	bl	8000770 <LCD_Send_String_On_Line1>
	    	 	    	 LCD_Send_String_On_Line2(">>Dakika");
 8004eb2:	4877      	ldr	r0, [pc, #476]	; (8005090 <saat_ayarlar+0x31c>)
 8004eb4:	f7fb fc6a 	bl	800078c <LCD_Send_String_On_Line2>



	    	 	    	 					itoa((saat), snum, 10);
 8004eb8:	4b6e      	ldr	r3, [pc, #440]	; (8005074 <saat_ayarlar+0x300>)
 8004eba:	681b      	ldr	r3, [r3, #0]
 8004ebc:	1d39      	adds	r1, r7, #4
 8004ebe:	220a      	movs	r2, #10
 8004ec0:	4618      	mov	r0, r3
 8004ec2:	f003 fef1 	bl	8008ca8 <itoa>
	    	 	    	 					HD44780_SetCursor(11,0);
 8004ec6:	2100      	movs	r1, #0
 8004ec8:	200b      	movs	r0, #11
 8004eca:	f000 fc13 	bl	80056f4 <HD44780_SetCursor>
	    	 	    	 					HD44780_PrintStr(snum);
 8004ece:	1d3b      	adds	r3, r7, #4
 8004ed0:	4618      	mov	r0, r3
 8004ed2:	f000 fc80 	bl	80057d6 <HD44780_PrintStr>

	    	 	    	 					itoa((dakika), snum, 10);
 8004ed6:	4b68      	ldr	r3, [pc, #416]	; (8005078 <saat_ayarlar+0x304>)
 8004ed8:	681b      	ldr	r3, [r3, #0]
 8004eda:	1d39      	adds	r1, r7, #4
 8004edc:	220a      	movs	r2, #10
 8004ede:	4618      	mov	r0, r3
 8004ee0:	f003 fee2 	bl	8008ca8 <itoa>
	    	 	    	 						 HD44780_SetCursor(11,1);
 8004ee4:	2101      	movs	r1, #1
 8004ee6:	200b      	movs	r0, #11
 8004ee8:	f000 fc04 	bl	80056f4 <HD44780_SetCursor>
	    	 	    	 						HD44780_PrintStr(snum);
 8004eec:	1d3b      	adds	r3, r7, #4
 8004eee:	4618      	mov	r0, r3
 8004ef0:	f000 fc71 	bl	80057d6 <HD44780_PrintStr>

	    	 	    	 						if((dakika==10) &&  HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 ){LCD_Send_Cmd(LCD_CLEAR_DISPLAY);dakika=dakika-1;}
 8004ef4:	4b60      	ldr	r3, [pc, #384]	; (8005078 <saat_ayarlar+0x304>)
 8004ef6:	681b      	ldr	r3, [r3, #0]
 8004ef8:	2b0a      	cmp	r3, #10
 8004efa:	d10e      	bne.n	8004f1a <saat_ayarlar+0x1a6>
 8004efc:	2120      	movs	r1, #32
 8004efe:	485f      	ldr	r0, [pc, #380]	; (800507c <saat_ayarlar+0x308>)
 8004f00:	f002 f91e 	bl	8007140 <HAL_GPIO_ReadPin>
 8004f04:	4603      	mov	r3, r0
 8004f06:	2b01      	cmp	r3, #1
 8004f08:	d107      	bne.n	8004f1a <saat_ayarlar+0x1a6>
 8004f0a:	2001      	movs	r0, #1
 8004f0c:	f7fb fb60 	bl	80005d0 <LCD_Send_Cmd>
 8004f10:	4b59      	ldr	r3, [pc, #356]	; (8005078 <saat_ayarlar+0x304>)
 8004f12:	681b      	ldr	r3, [r3, #0]
 8004f14:	3b01      	subs	r3, #1
 8004f16:	4a58      	ldr	r2, [pc, #352]	; (8005078 <saat_ayarlar+0x304>)
 8004f18:	6013      	str	r3, [r2, #0]
	    	 	    	 						if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==1  && dakika<60)
 8004f1a:	2110      	movs	r1, #16
 8004f1c:	4857      	ldr	r0, [pc, #348]	; (800507c <saat_ayarlar+0x308>)
 8004f1e:	f002 f90f 	bl	8007140 <HAL_GPIO_ReadPin>
 8004f22:	4603      	mov	r3, r0
 8004f24:	2b01      	cmp	r3, #1
 8004f26:	d108      	bne.n	8004f3a <saat_ayarlar+0x1c6>
 8004f28:	4b53      	ldr	r3, [pc, #332]	; (8005078 <saat_ayarlar+0x304>)
 8004f2a:	681b      	ldr	r3, [r3, #0]
 8004f2c:	2b3b      	cmp	r3, #59	; 0x3b
 8004f2e:	dc04      	bgt.n	8004f3a <saat_ayarlar+0x1c6>
	    	 	    	 						{
	    	 	    	 							dakika=dakika+1;
 8004f30:	4b51      	ldr	r3, [pc, #324]	; (8005078 <saat_ayarlar+0x304>)
 8004f32:	681b      	ldr	r3, [r3, #0]
 8004f34:	3301      	adds	r3, #1
 8004f36:	4a50      	ldr	r2, [pc, #320]	; (8005078 <saat_ayarlar+0x304>)
 8004f38:	6013      	str	r3, [r2, #0]
	    	 	    	 						}
	    	 	    	 						 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 && dakika>0 )
 8004f3a:	2120      	movs	r1, #32
 8004f3c:	484f      	ldr	r0, [pc, #316]	; (800507c <saat_ayarlar+0x308>)
 8004f3e:	f002 f8ff 	bl	8007140 <HAL_GPIO_ReadPin>
 8004f42:	4603      	mov	r3, r0
 8004f44:	2b01      	cmp	r3, #1
 8004f46:	d108      	bne.n	8004f5a <saat_ayarlar+0x1e6>
 8004f48:	4b4b      	ldr	r3, [pc, #300]	; (8005078 <saat_ayarlar+0x304>)
 8004f4a:	681b      	ldr	r3, [r3, #0]
 8004f4c:	2b00      	cmp	r3, #0
 8004f4e:	dd04      	ble.n	8004f5a <saat_ayarlar+0x1e6>
	    	 	    	 						 {
	    	 	    	 							dakika=dakika-1;
 8004f50:	4b49      	ldr	r3, [pc, #292]	; (8005078 <saat_ayarlar+0x304>)
 8004f52:	681b      	ldr	r3, [r3, #0]
 8004f54:	3b01      	subs	r3, #1
 8004f56:	4a48      	ldr	r2, [pc, #288]	; (8005078 <saat_ayarlar+0x304>)
 8004f58:	6013      	str	r3, [r2, #0]
	    	 	    	 						 }
	    	 	    	 						if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 8004f5a:	2180      	movs	r1, #128	; 0x80
 8004f5c:	4847      	ldr	r0, [pc, #284]	; (800507c <saat_ayarlar+0x308>)
 8004f5e:	f002 f8ef 	bl	8007140 <HAL_GPIO_ReadPin>
 8004f62:	4603      	mov	r3, r0
 8004f64:	2b01      	cmp	r3, #1
 8004f66:	d105      	bne.n	8004f74 <saat_ayarlar+0x200>

	    	 	    	 						                                                degisken16=2;
 8004f68:	4b3f      	ldr	r3, [pc, #252]	; (8005068 <saat_ayarlar+0x2f4>)
 8004f6a:	2202      	movs	r2, #2
 8004f6c:	701a      	strb	r2, [r3, #0]
	    	 	    	 							    	 									LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004f6e:	2001      	movs	r0, #1
 8004f70:	f7fb fb2e 	bl	80005d0 <LCD_Send_Cmd>
	    	 	    	 							    	 								 }
	    	 	    	 						 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8004f74:	2140      	movs	r1, #64	; 0x40
 8004f76:	4841      	ldr	r0, [pc, #260]	; (800507c <saat_ayarlar+0x308>)
 8004f78:	f002 f8e2 	bl	8007140 <HAL_GPIO_ReadPin>
 8004f7c:	4603      	mov	r3, r0
 8004f7e:	2b01      	cmp	r3, #1
 8004f80:	d105      	bne.n	8004f8e <saat_ayarlar+0x21a>

	    	 	    	 													 					degisken16=0;
 8004f82:	4b39      	ldr	r3, [pc, #228]	; (8005068 <saat_ayarlar+0x2f4>)
 8004f84:	2200      	movs	r2, #0
 8004f86:	701a      	strb	r2, [r3, #0]
	    	 	    	 													 					LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004f88:	2001      	movs	r0, #1
 8004f8a:	f7fb fb21 	bl	80005d0 <LCD_Send_Cmd>
	    	 	    	 													 			   }
	    	 	    	 						if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8004f8e:	2120      	movs	r1, #32
 8004f90:	483b      	ldr	r0, [pc, #236]	; (8005080 <saat_ayarlar+0x30c>)
 8004f92:	f002 f8d5 	bl	8007140 <HAL_GPIO_ReadPin>
 8004f96:	4603      	mov	r3, r0
 8004f98:	2b01      	cmp	r3, #1
 8004f9a:	d121      	bne.n	8004fe0 <saat_ayarlar+0x26c>
	    	 	    	 						  DS1302_Init();
 8004f9c:	f001 f892 	bl	80060c4 <DS1302_Init>
	    	 	    	 							    	 								     setTimer.day=gun;
 8004fa0:	4b38      	ldr	r3, [pc, #224]	; (8005084 <saat_ayarlar+0x310>)
 8004fa2:	681b      	ldr	r3, [r3, #0]
 8004fa4:	b2da      	uxtb	r2, r3
 8004fa6:	4b38      	ldr	r3, [pc, #224]	; (8005088 <saat_ayarlar+0x314>)
 8004fa8:	711a      	strb	r2, [r3, #4]
	    	 	    	 							    	 								     setTimer.isHourClock24=TRUE;
 8004faa:	4b37      	ldr	r3, [pc, #220]	; (8005088 <saat_ayarlar+0x314>)
 8004fac:	2201      	movs	r2, #1
 8004fae:	609a      	str	r2, [r3, #8]
	    	 	    	 							    	 								     setTimer.isAm=FALSE;
 8004fb0:	4b35      	ldr	r3, [pc, #212]	; (8005088 <saat_ayarlar+0x314>)
 8004fb2:	2200      	movs	r2, #0
 8004fb4:	60da      	str	r2, [r3, #12]
	    	 	    	 							    	 								     setTimer.hour=saat;
 8004fb6:	4b2f      	ldr	r3, [pc, #188]	; (8005074 <saat_ayarlar+0x300>)
 8004fb8:	681b      	ldr	r3, [r3, #0]
 8004fba:	b2da      	uxtb	r2, r3
 8004fbc:	4b32      	ldr	r3, [pc, #200]	; (8005088 <saat_ayarlar+0x314>)
 8004fbe:	741a      	strb	r2, [r3, #16]
	    	 	    	 							    	 								     setTimer.min=dakika;
 8004fc0:	4b2d      	ldr	r3, [pc, #180]	; (8005078 <saat_ayarlar+0x304>)
 8004fc2:	681b      	ldr	r3, [r3, #0]
 8004fc4:	b2da      	uxtb	r2, r3
 8004fc6:	4b30      	ldr	r3, [pc, #192]	; (8005088 <saat_ayarlar+0x314>)
 8004fc8:	745a      	strb	r2, [r3, #17]
	    	 	    	 							    	 								     setTimer.sec=0;
 8004fca:	4b2f      	ldr	r3, [pc, #188]	; (8005088 <saat_ayarlar+0x314>)
 8004fcc:	2200      	movs	r2, #0
 8004fce:	749a      	strb	r2, [r3, #18]
	    	 	    	 							    	 								      DS1302_SetTime_Struct(&setTimer);
 8004fd0:	482d      	ldr	r0, [pc, #180]	; (8005088 <saat_ayarlar+0x314>)
 8004fd2:	f001 f9b3 	bl	800633c <DS1302_SetTime_Struct>

	    	 	    	 							    	 																		LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8004fd6:	2001      	movs	r0, #1
 8004fd8:	f7fb fafa 	bl	80005d0 <LCD_Send_Cmd>
	    	 	    	 							    	 																		 Genel_Ekran_Ayar();
 8004fdc:	f7fb fbe4 	bl	80007a8 <Genel_Ekran_Ayar>
	    	 	    	 							    	 																	  }
	    	 	    	 }
	    	 if(degisken16==2)
 8004fe0:	4b21      	ldr	r3, [pc, #132]	; (8005068 <saat_ayarlar+0x2f4>)
 8004fe2:	781b      	ldrb	r3, [r3, #0]
 8004fe4:	2b02      	cmp	r3, #2
 8004fe6:	f040 80b4 	bne.w	8005152 <saat_ayarlar+0x3de>
	    	 	    	 	    	 {
	    	 	    	 	    	 LCD_Send_String_On_Line1("Dakika");
 8004fea:	4821      	ldr	r0, [pc, #132]	; (8005070 <saat_ayarlar+0x2fc>)
 8004fec:	f7fb fbc0 	bl	8000770 <LCD_Send_String_On_Line1>
	    	 	    	 	    	 LCD_Send_String_On_Line2(">>Gun");
 8004ff0:	4828      	ldr	r0, [pc, #160]	; (8005094 <saat_ayarlar+0x320>)
 8004ff2:	f7fb fbcb 	bl	800078c <LCD_Send_String_On_Line2>



	    	 	    	 	    	 					itoa((dakika), snum, 10);
 8004ff6:	4b20      	ldr	r3, [pc, #128]	; (8005078 <saat_ayarlar+0x304>)
 8004ff8:	681b      	ldr	r3, [r3, #0]
 8004ffa:	1d39      	adds	r1, r7, #4
 8004ffc:	220a      	movs	r2, #10
 8004ffe:	4618      	mov	r0, r3
 8005000:	f003 fe52 	bl	8008ca8 <itoa>
	    	 	    	 	    	 					HD44780_SetCursor(11,0);
 8005004:	2100      	movs	r1, #0
 8005006:	200b      	movs	r0, #11
 8005008:	f000 fb74 	bl	80056f4 <HD44780_SetCursor>
	    	 	    	 	    	 					HD44780_PrintStr(snum);
 800500c:	1d3b      	adds	r3, r7, #4
 800500e:	4618      	mov	r0, r3
 8005010:	f000 fbe1 	bl	80057d6 <HD44780_PrintStr>

	    	 	    	 	    	 					itoa((gun), snum, 10);
 8005014:	4b1b      	ldr	r3, [pc, #108]	; (8005084 <saat_ayarlar+0x310>)
 8005016:	681b      	ldr	r3, [r3, #0]
 8005018:	1d39      	adds	r1, r7, #4
 800501a:	220a      	movs	r2, #10
 800501c:	4618      	mov	r0, r3
 800501e:	f003 fe43 	bl	8008ca8 <itoa>
	    	 	    	 	    	 						 HD44780_SetCursor(11,1);
 8005022:	2101      	movs	r1, #1
 8005024:	200b      	movs	r0, #11
 8005026:	f000 fb65 	bl	80056f4 <HD44780_SetCursor>
	    	 	    	 	    	 						HD44780_PrintStr(snum);
 800502a:	1d3b      	adds	r3, r7, #4
 800502c:	4618      	mov	r0, r3
 800502e:	f000 fbd2 	bl	80057d6 <HD44780_PrintStr>

	    	 	    	 	    	 						if((gun==10) &&  HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 ){LCD_Send_Cmd(LCD_CLEAR_DISPLAY);gun=gun-1;}
 8005032:	4b14      	ldr	r3, [pc, #80]	; (8005084 <saat_ayarlar+0x310>)
 8005034:	681b      	ldr	r3, [r3, #0]
 8005036:	2b0a      	cmp	r3, #10
 8005038:	d10e      	bne.n	8005058 <saat_ayarlar+0x2e4>
 800503a:	2120      	movs	r1, #32
 800503c:	480f      	ldr	r0, [pc, #60]	; (800507c <saat_ayarlar+0x308>)
 800503e:	f002 f87f 	bl	8007140 <HAL_GPIO_ReadPin>
 8005042:	4603      	mov	r3, r0
 8005044:	2b01      	cmp	r3, #1
 8005046:	d107      	bne.n	8005058 <saat_ayarlar+0x2e4>
 8005048:	2001      	movs	r0, #1
 800504a:	f7fb fac1 	bl	80005d0 <LCD_Send_Cmd>
 800504e:	4b0d      	ldr	r3, [pc, #52]	; (8005084 <saat_ayarlar+0x310>)
 8005050:	681b      	ldr	r3, [r3, #0]
 8005052:	3b01      	subs	r3, #1
 8005054:	4a0b      	ldr	r2, [pc, #44]	; (8005084 <saat_ayarlar+0x310>)
 8005056:	6013      	str	r3, [r2, #0]
	    	 	    	 	    	 						if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==1  && gun<7)
 8005058:	2110      	movs	r1, #16
 800505a:	4808      	ldr	r0, [pc, #32]	; (800507c <saat_ayarlar+0x308>)
 800505c:	f002 f870 	bl	8007140 <HAL_GPIO_ReadPin>
 8005060:	4603      	mov	r3, r0
 8005062:	2b01      	cmp	r3, #1
 8005064:	e018      	b.n	8005098 <saat_ayarlar+0x324>
 8005066:	bf00      	nop
 8005068:	20000046 	.word	0x20000046
 800506c:	080090ac 	.word	0x080090ac
 8005070:	080090b4 	.word	0x080090b4
 8005074:	20000310 	.word	0x20000310
 8005078:	200002d8 	.word	0x200002d8
 800507c:	40020000 	.word	0x40020000
 8005080:	40020800 	.word	0x40020800
 8005084:	20000460 	.word	0x20000460
 8005088:	20000484 	.word	0x20000484
 800508c:	080090bc 	.word	0x080090bc
 8005090:	080090c4 	.word	0x080090c4
 8005094:	080090d0 	.word	0x080090d0
 8005098:	d108      	bne.n	80050ac <saat_ayarlar+0x338>
 800509a:	4b7e      	ldr	r3, [pc, #504]	; (8005294 <saat_ayarlar+0x520>)
 800509c:	681b      	ldr	r3, [r3, #0]
 800509e:	2b06      	cmp	r3, #6
 80050a0:	dc04      	bgt.n	80050ac <saat_ayarlar+0x338>
	    	 	    	 	    	 						{
	    	 	    	 	    	 							gun=gun+1;
 80050a2:	4b7c      	ldr	r3, [pc, #496]	; (8005294 <saat_ayarlar+0x520>)
 80050a4:	681b      	ldr	r3, [r3, #0]
 80050a6:	3301      	adds	r3, #1
 80050a8:	4a7a      	ldr	r2, [pc, #488]	; (8005294 <saat_ayarlar+0x520>)
 80050aa:	6013      	str	r3, [r2, #0]
	    	 	    	 	    	 						}
	    	 	    	 	    	 						 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 && gun>0 )
 80050ac:	2120      	movs	r1, #32
 80050ae:	487a      	ldr	r0, [pc, #488]	; (8005298 <saat_ayarlar+0x524>)
 80050b0:	f002 f846 	bl	8007140 <HAL_GPIO_ReadPin>
 80050b4:	4603      	mov	r3, r0
 80050b6:	2b01      	cmp	r3, #1
 80050b8:	d108      	bne.n	80050cc <saat_ayarlar+0x358>
 80050ba:	4b76      	ldr	r3, [pc, #472]	; (8005294 <saat_ayarlar+0x520>)
 80050bc:	681b      	ldr	r3, [r3, #0]
 80050be:	2b00      	cmp	r3, #0
 80050c0:	dd04      	ble.n	80050cc <saat_ayarlar+0x358>
	    	 	    	 	    	 						 {
	    	 	    	 	    	 							gun=gun-1;
 80050c2:	4b74      	ldr	r3, [pc, #464]	; (8005294 <saat_ayarlar+0x520>)
 80050c4:	681b      	ldr	r3, [r3, #0]
 80050c6:	3b01      	subs	r3, #1
 80050c8:	4a72      	ldr	r2, [pc, #456]	; (8005294 <saat_ayarlar+0x520>)
 80050ca:	6013      	str	r3, [r2, #0]
	    	 	    	 	    	 						 }
	    	 	    	 	    	 						if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 80050cc:	2180      	movs	r1, #128	; 0x80
 80050ce:	4872      	ldr	r0, [pc, #456]	; (8005298 <saat_ayarlar+0x524>)
 80050d0:	f002 f836 	bl	8007140 <HAL_GPIO_ReadPin>
 80050d4:	4603      	mov	r3, r0
 80050d6:	2b01      	cmp	r3, #1
 80050d8:	d105      	bne.n	80050e6 <saat_ayarlar+0x372>

	    	 	    	 	    	 						                                                degisken16=0;
 80050da:	4b70      	ldr	r3, [pc, #448]	; (800529c <saat_ayarlar+0x528>)
 80050dc:	2200      	movs	r2, #0
 80050de:	701a      	strb	r2, [r3, #0]
	    	 	    	 	    	 							    	 									LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80050e0:	2001      	movs	r0, #1
 80050e2:	f7fb fa75 	bl	80005d0 <LCD_Send_Cmd>
	    	 	    	 	    	 							    	 								 }
	    	 	    	 	    	 						 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 80050e6:	2140      	movs	r1, #64	; 0x40
 80050e8:	486b      	ldr	r0, [pc, #428]	; (8005298 <saat_ayarlar+0x524>)
 80050ea:	f002 f829 	bl	8007140 <HAL_GPIO_ReadPin>
 80050ee:	4603      	mov	r3, r0
 80050f0:	2b01      	cmp	r3, #1
 80050f2:	d105      	bne.n	8005100 <saat_ayarlar+0x38c>

	    	 	    	 	    	 													 					degisken16=3;
 80050f4:	4b69      	ldr	r3, [pc, #420]	; (800529c <saat_ayarlar+0x528>)
 80050f6:	2203      	movs	r2, #3
 80050f8:	701a      	strb	r2, [r3, #0]
	    	 	    	 	    	 													 					LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 80050fa:	2001      	movs	r0, #1
 80050fc:	f7fb fa68 	bl	80005d0 <LCD_Send_Cmd>
	    	 	    	 	    	 													 			   }
	    	 	    	 	    	 						if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 8005100:	2120      	movs	r1, #32
 8005102:	4867      	ldr	r0, [pc, #412]	; (80052a0 <saat_ayarlar+0x52c>)
 8005104:	f002 f81c 	bl	8007140 <HAL_GPIO_ReadPin>
 8005108:	4603      	mov	r3, r0
 800510a:	2b01      	cmp	r3, #1
 800510c:	d121      	bne.n	8005152 <saat_ayarlar+0x3de>
	    	 	    	 	    	 						  DS1302_Init();
 800510e:	f000 ffd9 	bl	80060c4 <DS1302_Init>
	    	 	    	 	    	 							    	 								     setTimer.day=gun;
 8005112:	4b60      	ldr	r3, [pc, #384]	; (8005294 <saat_ayarlar+0x520>)
 8005114:	681b      	ldr	r3, [r3, #0]
 8005116:	b2da      	uxtb	r2, r3
 8005118:	4b62      	ldr	r3, [pc, #392]	; (80052a4 <saat_ayarlar+0x530>)
 800511a:	711a      	strb	r2, [r3, #4]
	    	 	    	 	    	 							    	 								     setTimer.isHourClock24=TRUE;
 800511c:	4b61      	ldr	r3, [pc, #388]	; (80052a4 <saat_ayarlar+0x530>)
 800511e:	2201      	movs	r2, #1
 8005120:	609a      	str	r2, [r3, #8]
	    	 	    	 	    	 							    	 								     setTimer.isAm=FALSE;
 8005122:	4b60      	ldr	r3, [pc, #384]	; (80052a4 <saat_ayarlar+0x530>)
 8005124:	2200      	movs	r2, #0
 8005126:	60da      	str	r2, [r3, #12]
	    	 	    	 	    	 							    	 								     setTimer.hour=saat;
 8005128:	4b5f      	ldr	r3, [pc, #380]	; (80052a8 <saat_ayarlar+0x534>)
 800512a:	681b      	ldr	r3, [r3, #0]
 800512c:	b2da      	uxtb	r2, r3
 800512e:	4b5d      	ldr	r3, [pc, #372]	; (80052a4 <saat_ayarlar+0x530>)
 8005130:	741a      	strb	r2, [r3, #16]
	    	 	    	 	    	 							    	 								     setTimer.min=dakika;
 8005132:	4b5e      	ldr	r3, [pc, #376]	; (80052ac <saat_ayarlar+0x538>)
 8005134:	681b      	ldr	r3, [r3, #0]
 8005136:	b2da      	uxtb	r2, r3
 8005138:	4b5a      	ldr	r3, [pc, #360]	; (80052a4 <saat_ayarlar+0x530>)
 800513a:	745a      	strb	r2, [r3, #17]
	    	 	    	 	    	 							    	 								     setTimer.sec=0;
 800513c:	4b59      	ldr	r3, [pc, #356]	; (80052a4 <saat_ayarlar+0x530>)
 800513e:	2200      	movs	r2, #0
 8005140:	749a      	strb	r2, [r3, #18]
	    	 	    	 	    	 							    	 								     DS1302_SetTime_Struct(&setTimer);
 8005142:	4858      	ldr	r0, [pc, #352]	; (80052a4 <saat_ayarlar+0x530>)
 8005144:	f001 f8fa 	bl	800633c <DS1302_SetTime_Struct>

	    	 	    	 	    	 							    	 																		LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8005148:	2001      	movs	r0, #1
 800514a:	f7fb fa41 	bl	80005d0 <LCD_Send_Cmd>
	    	 	    	 	    	 							    	 																		 Genel_Ekran_Ayar();
 800514e:	f7fb fb2b 	bl	80007a8 <Genel_Ekran_Ayar>
	    	 	    	 	    	 							    	 																	  }
	    	 	    	 	    	 }
	    	 if(degisken16==3)
 8005152:	4b52      	ldr	r3, [pc, #328]	; (800529c <saat_ayarlar+0x528>)
 8005154:	781b      	ldrb	r3, [r3, #0]
 8005156:	2b03      	cmp	r3, #3
 8005158:	f47f ae11 	bne.w	8004d7e <saat_ayarlar+0xa>
	    	 	    	 	    	 	    	 {
	    	 	    	 	    	 	    	 LCD_Send_String_On_Line1(">>Dakika");
 800515c:	4854      	ldr	r0, [pc, #336]	; (80052b0 <saat_ayarlar+0x53c>)
 800515e:	f7fb fb07 	bl	8000770 <LCD_Send_String_On_Line1>
	    	 	    	 	    	 	    	 LCD_Send_String_On_Line2("Gun");
 8005162:	4854      	ldr	r0, [pc, #336]	; (80052b4 <saat_ayarlar+0x540>)
 8005164:	f7fb fb12 	bl	800078c <LCD_Send_String_On_Line2>



	    	 	    	 	    	 	    	 					itoa((dakika), snum, 10);
 8005168:	4b50      	ldr	r3, [pc, #320]	; (80052ac <saat_ayarlar+0x538>)
 800516a:	681b      	ldr	r3, [r3, #0]
 800516c:	1d39      	adds	r1, r7, #4
 800516e:	220a      	movs	r2, #10
 8005170:	4618      	mov	r0, r3
 8005172:	f003 fd99 	bl	8008ca8 <itoa>
	    	 	    	 	    	 	    	 					HD44780_SetCursor(11,0);
 8005176:	2100      	movs	r1, #0
 8005178:	200b      	movs	r0, #11
 800517a:	f000 fabb 	bl	80056f4 <HD44780_SetCursor>
	    	 	    	 	    	 	    	 					HD44780_PrintStr(snum);
 800517e:	1d3b      	adds	r3, r7, #4
 8005180:	4618      	mov	r0, r3
 8005182:	f000 fb28 	bl	80057d6 <HD44780_PrintStr>

	    	 	    	 	    	 	    	itoa((gun), snum, 10);
 8005186:	4b43      	ldr	r3, [pc, #268]	; (8005294 <saat_ayarlar+0x520>)
 8005188:	681b      	ldr	r3, [r3, #0]
 800518a:	1d39      	adds	r1, r7, #4
 800518c:	220a      	movs	r2, #10
 800518e:	4618      	mov	r0, r3
 8005190:	f003 fd8a 	bl	8008ca8 <itoa>
	    	 	    	 	    	 	    	 				    HD44780_SetCursor(11,1);
 8005194:	2101      	movs	r1, #1
 8005196:	200b      	movs	r0, #11
 8005198:	f000 faac 	bl	80056f4 <HD44780_SetCursor>
	    	 	    	 	    	 	    	 					HD44780_PrintStr(snum);
 800519c:	1d3b      	adds	r3, r7, #4
 800519e:	4618      	mov	r0, r3
 80051a0:	f000 fb19 	bl	80057d6 <HD44780_PrintStr>

	    	 	    	 	    	 	    	 						if((dakika==10) &&  HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 ){LCD_Send_Cmd(LCD_CLEAR_DISPLAY);dakika=dakika-1;}
 80051a4:	4b41      	ldr	r3, [pc, #260]	; (80052ac <saat_ayarlar+0x538>)
 80051a6:	681b      	ldr	r3, [r3, #0]
 80051a8:	2b0a      	cmp	r3, #10
 80051aa:	d10e      	bne.n	80051ca <saat_ayarlar+0x456>
 80051ac:	2120      	movs	r1, #32
 80051ae:	483a      	ldr	r0, [pc, #232]	; (8005298 <saat_ayarlar+0x524>)
 80051b0:	f001 ffc6 	bl	8007140 <HAL_GPIO_ReadPin>
 80051b4:	4603      	mov	r3, r0
 80051b6:	2b01      	cmp	r3, #1
 80051b8:	d107      	bne.n	80051ca <saat_ayarlar+0x456>
 80051ba:	2001      	movs	r0, #1
 80051bc:	f7fb fa08 	bl	80005d0 <LCD_Send_Cmd>
 80051c0:	4b3a      	ldr	r3, [pc, #232]	; (80052ac <saat_ayarlar+0x538>)
 80051c2:	681b      	ldr	r3, [r3, #0]
 80051c4:	3b01      	subs	r3, #1
 80051c6:	4a39      	ldr	r2, [pc, #228]	; (80052ac <saat_ayarlar+0x538>)
 80051c8:	6013      	str	r3, [r2, #0]
	    	 	    	 	    	 	    	 						if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==1  && dakika<60)
 80051ca:	2110      	movs	r1, #16
 80051cc:	4832      	ldr	r0, [pc, #200]	; (8005298 <saat_ayarlar+0x524>)
 80051ce:	f001 ffb7 	bl	8007140 <HAL_GPIO_ReadPin>
 80051d2:	4603      	mov	r3, r0
 80051d4:	2b01      	cmp	r3, #1
 80051d6:	d108      	bne.n	80051ea <saat_ayarlar+0x476>
 80051d8:	4b34      	ldr	r3, [pc, #208]	; (80052ac <saat_ayarlar+0x538>)
 80051da:	681b      	ldr	r3, [r3, #0]
 80051dc:	2b3b      	cmp	r3, #59	; 0x3b
 80051de:	dc04      	bgt.n	80051ea <saat_ayarlar+0x476>
	    	 	    	 	    	 	    	 						{
	    	 	    	 	    	 	    	 						dakika=dakika+1;
 80051e0:	4b32      	ldr	r3, [pc, #200]	; (80052ac <saat_ayarlar+0x538>)
 80051e2:	681b      	ldr	r3, [r3, #0]
 80051e4:	3301      	adds	r3, #1
 80051e6:	4a31      	ldr	r2, [pc, #196]	; (80052ac <saat_ayarlar+0x538>)
 80051e8:	6013      	str	r3, [r2, #0]
	    	 	    	 	    	 	    	 						}
	    	 	    	 	    	 	    	 						 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5)==1 && dakika>0 )
 80051ea:	2120      	movs	r1, #32
 80051ec:	482a      	ldr	r0, [pc, #168]	; (8005298 <saat_ayarlar+0x524>)
 80051ee:	f001 ffa7 	bl	8007140 <HAL_GPIO_ReadPin>
 80051f2:	4603      	mov	r3, r0
 80051f4:	2b01      	cmp	r3, #1
 80051f6:	d108      	bne.n	800520a <saat_ayarlar+0x496>
 80051f8:	4b2c      	ldr	r3, [pc, #176]	; (80052ac <saat_ayarlar+0x538>)
 80051fa:	681b      	ldr	r3, [r3, #0]
 80051fc:	2b00      	cmp	r3, #0
 80051fe:	dd04      	ble.n	800520a <saat_ayarlar+0x496>
	    	 	    	 	    	 	    	 						 {
	    	 	    	 	    	 	    	 							dakika=dakika-1;
 8005200:	4b2a      	ldr	r3, [pc, #168]	; (80052ac <saat_ayarlar+0x538>)
 8005202:	681b      	ldr	r3, [r3, #0]
 8005204:	3b01      	subs	r3, #1
 8005206:	4a29      	ldr	r2, [pc, #164]	; (80052ac <saat_ayarlar+0x538>)
 8005208:	6013      	str	r3, [r2, #0]
	    	 	    	 	    	 	    	 						 }
	    	 	    	 	    	 	    	 						if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)==1){
 800520a:	2180      	movs	r1, #128	; 0x80
 800520c:	4822      	ldr	r0, [pc, #136]	; (8005298 <saat_ayarlar+0x524>)
 800520e:	f001 ff97 	bl	8007140 <HAL_GPIO_ReadPin>
 8005212:	4603      	mov	r3, r0
 8005214:	2b01      	cmp	r3, #1
 8005216:	d105      	bne.n	8005224 <saat_ayarlar+0x4b0>

	    	 	    	 	    	 	    	 						                                                degisken16=2;
 8005218:	4b20      	ldr	r3, [pc, #128]	; (800529c <saat_ayarlar+0x528>)
 800521a:	2202      	movs	r2, #2
 800521c:	701a      	strb	r2, [r3, #0]
	    	 	    	 	    	 	    	 							    	 									LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 800521e:	2001      	movs	r0, #1
 8005220:	f7fb f9d6 	bl	80005d0 <LCD_Send_Cmd>
	    	 	    	 	    	 	    	 							    	 								 }
	    	 	    	 	    	 	    	 						 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)==1){
 8005224:	2140      	movs	r1, #64	; 0x40
 8005226:	481c      	ldr	r0, [pc, #112]	; (8005298 <saat_ayarlar+0x524>)
 8005228:	f001 ff8a 	bl	8007140 <HAL_GPIO_ReadPin>
 800522c:	4603      	mov	r3, r0
 800522e:	2b01      	cmp	r3, #1
 8005230:	d105      	bne.n	800523e <saat_ayarlar+0x4ca>

	    	 	    	 	    	 	    	 													 					degisken16=1;
 8005232:	4b1a      	ldr	r3, [pc, #104]	; (800529c <saat_ayarlar+0x528>)
 8005234:	2201      	movs	r2, #1
 8005236:	701a      	strb	r2, [r3, #0]
	    	 	    	 	    	 	    	 													 					LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8005238:	2001      	movs	r0, #1
 800523a:	f7fb f9c9 	bl	80005d0 <LCD_Send_Cmd>
	    	 	    	 	    	 	    	 													 			   }
	    	 	    	 	    	 	    	 						if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5)==1){
 800523e:	2120      	movs	r1, #32
 8005240:	4817      	ldr	r0, [pc, #92]	; (80052a0 <saat_ayarlar+0x52c>)
 8005242:	f001 ff7d 	bl	8007140 <HAL_GPIO_ReadPin>
 8005246:	4603      	mov	r3, r0
 8005248:	2b01      	cmp	r3, #1
 800524a:	f47f ad98 	bne.w	8004d7e <saat_ayarlar+0xa>
	    	 	    	 	    	 	    	 						  DS1302_Init();
 800524e:	f000 ff39 	bl	80060c4 <DS1302_Init>
	    	 	    	 	    	 	    	 							    	 								     setTimer.day=gun;
 8005252:	4b10      	ldr	r3, [pc, #64]	; (8005294 <saat_ayarlar+0x520>)
 8005254:	681b      	ldr	r3, [r3, #0]
 8005256:	b2da      	uxtb	r2, r3
 8005258:	4b12      	ldr	r3, [pc, #72]	; (80052a4 <saat_ayarlar+0x530>)
 800525a:	711a      	strb	r2, [r3, #4]
	    	 	    	 	    	 	    	 							    	 								     setTimer.isHourClock24=TRUE;
 800525c:	4b11      	ldr	r3, [pc, #68]	; (80052a4 <saat_ayarlar+0x530>)
 800525e:	2201      	movs	r2, #1
 8005260:	609a      	str	r2, [r3, #8]
	    	 	    	 	    	 	    	 							    	 								     setTimer.isAm=FALSE;
 8005262:	4b10      	ldr	r3, [pc, #64]	; (80052a4 <saat_ayarlar+0x530>)
 8005264:	2200      	movs	r2, #0
 8005266:	60da      	str	r2, [r3, #12]
	    	 	    	 	    	 	    	 							    	 								     setTimer.hour=saat;
 8005268:	4b0f      	ldr	r3, [pc, #60]	; (80052a8 <saat_ayarlar+0x534>)
 800526a:	681b      	ldr	r3, [r3, #0]
 800526c:	b2da      	uxtb	r2, r3
 800526e:	4b0d      	ldr	r3, [pc, #52]	; (80052a4 <saat_ayarlar+0x530>)
 8005270:	741a      	strb	r2, [r3, #16]
	    	 	    	 	    	 	    	 							    	 								     setTimer.min=dakika;
 8005272:	4b0e      	ldr	r3, [pc, #56]	; (80052ac <saat_ayarlar+0x538>)
 8005274:	681b      	ldr	r3, [r3, #0]
 8005276:	b2da      	uxtb	r2, r3
 8005278:	4b0a      	ldr	r3, [pc, #40]	; (80052a4 <saat_ayarlar+0x530>)
 800527a:	745a      	strb	r2, [r3, #17]
	    	 	    	 	    	 	    	 							    	 								     setTimer.sec=0;
 800527c:	4b09      	ldr	r3, [pc, #36]	; (80052a4 <saat_ayarlar+0x530>)
 800527e:	2200      	movs	r2, #0
 8005280:	749a      	strb	r2, [r3, #18]
	    	 	    	 	    	 	    	 							    	 								      DS1302_SetTime_Struct(&setTimer);
 8005282:	4808      	ldr	r0, [pc, #32]	; (80052a4 <saat_ayarlar+0x530>)
 8005284:	f001 f85a 	bl	800633c <DS1302_SetTime_Struct>

	    	 	    	 	    	 	    	 							    	 																		LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8005288:	2001      	movs	r0, #1
 800528a:	f7fb f9a1 	bl	80005d0 <LCD_Send_Cmd>
	    	 	    	 	    	 	    	 							    	 																		 Genel_Ekran_Ayar();
 800528e:	f7fb fa8b 	bl	80007a8 <Genel_Ekran_Ayar>
	    	 if(degisken16==0)
 8005292:	e574      	b.n	8004d7e <saat_ayarlar+0xa>
 8005294:	20000460 	.word	0x20000460
 8005298:	40020000 	.word	0x40020000
 800529c:	20000046 	.word	0x20000046
 80052a0:	40020800 	.word	0x40020800
 80052a4:	20000484 	.word	0x20000484
 80052a8:	20000310 	.word	0x20000310
 80052ac:	200002d8 	.word	0x200002d8
 80052b0:	080090c4 	.word	0x080090c4
 80052b4:	080090d8 	.word	0x080090d8

080052b8 <Flash_Write>:





void Flash_Write(uint32_t Flash_Address, uint32_t *Flash_Data,uint8_t leng){
 80052b8:	b580      	push	{r7, lr}
 80052ba:	b086      	sub	sp, #24
 80052bc:	af00      	add	r7, sp, #0
 80052be:	60f8      	str	r0, [r7, #12]
 80052c0:	60b9      	str	r1, [r7, #8]
 80052c2:	4613      	mov	r3, r2
 80052c4:	71fb      	strb	r3, [r7, #7]

	HAL_FLASH_Unlock();
 80052c6:	f001 fbf5 	bl	8006ab4 <HAL_FLASH_Unlock>
	FLASH_Erase_Sector(FLASH_SECTOR_5, VOLTAGE_RANGE_3);
 80052ca:	2102      	movs	r1, #2
 80052cc:	2005      	movs	r0, #5
 80052ce:	f001 fd53 	bl	8006d78 <FLASH_Erase_Sector>

	for(int i=0;i<leng;i++){
 80052d2:	2300      	movs	r3, #0
 80052d4:	617b      	str	r3, [r7, #20]
 80052d6:	e012      	b.n	80052fe <Flash_Write+0x46>
		HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD,Flash_Address+(4*i),Flash_Data[i]);
 80052d8:	697b      	ldr	r3, [r7, #20]
 80052da:	009b      	lsls	r3, r3, #2
 80052dc:	461a      	mov	r2, r3
 80052de:	68fb      	ldr	r3, [r7, #12]
 80052e0:	18d1      	adds	r1, r2, r3
 80052e2:	697b      	ldr	r3, [r7, #20]
 80052e4:	009b      	lsls	r3, r3, #2
 80052e6:	68ba      	ldr	r2, [r7, #8]
 80052e8:	4413      	add	r3, r2
 80052ea:	681b      	ldr	r3, [r3, #0]
 80052ec:	461a      	mov	r2, r3
 80052ee:	f04f 0300 	mov.w	r3, #0
 80052f2:	2002      	movs	r0, #2
 80052f4:	f001 fb8a 	bl	8006a0c <HAL_FLASH_Program>
	for(int i=0;i<leng;i++){
 80052f8:	697b      	ldr	r3, [r7, #20]
 80052fa:	3301      	adds	r3, #1
 80052fc:	617b      	str	r3, [r7, #20]
 80052fe:	79fb      	ldrb	r3, [r7, #7]
 8005300:	697a      	ldr	r2, [r7, #20]
 8005302:	429a      	cmp	r2, r3
 8005304:	dbe8      	blt.n	80052d8 <Flash_Write+0x20>

	}



	HAL_FLASH_Lock();
 8005306:	f001 fbf7 	bl	8006af8 <HAL_FLASH_Lock>


}
 800530a:	bf00      	nop
 800530c:	3718      	adds	r7, #24
 800530e:	46bd      	mov	sp, r7
 8005310:	bd80      	pop	{r7, pc}

08005312 <Flash_Write2>:
void Flash_Write2(uint32_t Flash_Address, uint32_t *Flash_Data,uint8_t leng){
 8005312:	b580      	push	{r7, lr}
 8005314:	b086      	sub	sp, #24
 8005316:	af00      	add	r7, sp, #0
 8005318:	60f8      	str	r0, [r7, #12]
 800531a:	60b9      	str	r1, [r7, #8]
 800531c:	4613      	mov	r3, r2
 800531e:	71fb      	strb	r3, [r7, #7]


	HAL_FLASH_Unlock();
 8005320:	f001 fbc8 	bl	8006ab4 <HAL_FLASH_Unlock>
	FLASH_Erase_Sector(FLASH_SECTOR_6, VOLTAGE_RANGE_3);
 8005324:	2102      	movs	r1, #2
 8005326:	2006      	movs	r0, #6
 8005328:	f001 fd26 	bl	8006d78 <FLASH_Erase_Sector>

	for(int i=0;i<leng;i++){
 800532c:	2300      	movs	r3, #0
 800532e:	617b      	str	r3, [r7, #20]
 8005330:	e012      	b.n	8005358 <Flash_Write2+0x46>
		HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD,Flash_Address+(4*i),Flash_Data[i]);
 8005332:	697b      	ldr	r3, [r7, #20]
 8005334:	009b      	lsls	r3, r3, #2
 8005336:	461a      	mov	r2, r3
 8005338:	68fb      	ldr	r3, [r7, #12]
 800533a:	18d1      	adds	r1, r2, r3
 800533c:	697b      	ldr	r3, [r7, #20]
 800533e:	009b      	lsls	r3, r3, #2
 8005340:	68ba      	ldr	r2, [r7, #8]
 8005342:	4413      	add	r3, r2
 8005344:	681b      	ldr	r3, [r3, #0]
 8005346:	461a      	mov	r2, r3
 8005348:	f04f 0300 	mov.w	r3, #0
 800534c:	2002      	movs	r0, #2
 800534e:	f001 fb5d 	bl	8006a0c <HAL_FLASH_Program>
	for(int i=0;i<leng;i++){
 8005352:	697b      	ldr	r3, [r7, #20]
 8005354:	3301      	adds	r3, #1
 8005356:	617b      	str	r3, [r7, #20]
 8005358:	79fb      	ldrb	r3, [r7, #7]
 800535a:	697a      	ldr	r2, [r7, #20]
 800535c:	429a      	cmp	r2, r3
 800535e:	dbe8      	blt.n	8005332 <Flash_Write2+0x20>

	}



	HAL_FLASH_Lock();
 8005360:	f001 fbca 	bl	8006af8 <HAL_FLASH_Lock>


}
 8005364:	bf00      	nop
 8005366:	3718      	adds	r7, #24
 8005368:	46bd      	mov	sp, r7
 800536a:	bd80      	pop	{r7, pc}

0800536c <Flash_Write3>:
void Flash_Write3(uint32_t Flash_Address, uint32_t *Flash_Data,uint8_t leng){
 800536c:	b580      	push	{r7, lr}
 800536e:	b086      	sub	sp, #24
 8005370:	af00      	add	r7, sp, #0
 8005372:	60f8      	str	r0, [r7, #12]
 8005374:	60b9      	str	r1, [r7, #8]
 8005376:	4613      	mov	r3, r2
 8005378:	71fb      	strb	r3, [r7, #7]

	HAL_FLASH_Unlock();
 800537a:	f001 fb9b 	bl	8006ab4 <HAL_FLASH_Unlock>
	FLASH_Erase_Sector(FLASH_SECTOR_7, VOLTAGE_RANGE_3);
 800537e:	2102      	movs	r1, #2
 8005380:	2007      	movs	r0, #7
 8005382:	f001 fcf9 	bl	8006d78 <FLASH_Erase_Sector>

	for(int i=0;i<leng;i++){
 8005386:	2300      	movs	r3, #0
 8005388:	617b      	str	r3, [r7, #20]
 800538a:	e012      	b.n	80053b2 <Flash_Write3+0x46>
		HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD,Flash_Address+(4*i),Flash_Data[i]);
 800538c:	697b      	ldr	r3, [r7, #20]
 800538e:	009b      	lsls	r3, r3, #2
 8005390:	461a      	mov	r2, r3
 8005392:	68fb      	ldr	r3, [r7, #12]
 8005394:	18d1      	adds	r1, r2, r3
 8005396:	697b      	ldr	r3, [r7, #20]
 8005398:	009b      	lsls	r3, r3, #2
 800539a:	68ba      	ldr	r2, [r7, #8]
 800539c:	4413      	add	r3, r2
 800539e:	681b      	ldr	r3, [r3, #0]
 80053a0:	461a      	mov	r2, r3
 80053a2:	f04f 0300 	mov.w	r3, #0
 80053a6:	2002      	movs	r0, #2
 80053a8:	f001 fb30 	bl	8006a0c <HAL_FLASH_Program>
	for(int i=0;i<leng;i++){
 80053ac:	697b      	ldr	r3, [r7, #20]
 80053ae:	3301      	adds	r3, #1
 80053b0:	617b      	str	r3, [r7, #20]
 80053b2:	79fb      	ldrb	r3, [r7, #7]
 80053b4:	697a      	ldr	r2, [r7, #20]
 80053b6:	429a      	cmp	r2, r3
 80053b8:	dbe8      	blt.n	800538c <Flash_Write3+0x20>

	}



	HAL_FLASH_Lock();
 80053ba:	f001 fb9d 	bl	8006af8 <HAL_FLASH_Lock>


}
 80053be:	bf00      	nop
 80053c0:	3718      	adds	r7, #24
 80053c2:	46bd      	mov	sp, r7
 80053c4:	bd80      	pop	{r7, pc}

080053c6 <Flash_Write4>:
void Flash_Write4(uint32_t Flash_Address, uint32_t *Flash_Data,uint8_t leng){
 80053c6:	b580      	push	{r7, lr}
 80053c8:	b086      	sub	sp, #24
 80053ca:	af00      	add	r7, sp, #0
 80053cc:	60f8      	str	r0, [r7, #12]
 80053ce:	60b9      	str	r1, [r7, #8]
 80053d0:	4613      	mov	r3, r2
 80053d2:	71fb      	strb	r3, [r7, #7]

	HAL_FLASH_Unlock();
 80053d4:	f001 fb6e 	bl	8006ab4 <HAL_FLASH_Unlock>
	FLASH_Erase_Sector(FLASH_SECTOR_8, VOLTAGE_RANGE_3);
 80053d8:	2102      	movs	r1, #2
 80053da:	2008      	movs	r0, #8
 80053dc:	f001 fccc 	bl	8006d78 <FLASH_Erase_Sector>

	for(int i=0;i<leng;i++){
 80053e0:	2300      	movs	r3, #0
 80053e2:	617b      	str	r3, [r7, #20]
 80053e4:	e012      	b.n	800540c <Flash_Write4+0x46>
		HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD,Flash_Address+(4*i),Flash_Data[i]);
 80053e6:	697b      	ldr	r3, [r7, #20]
 80053e8:	009b      	lsls	r3, r3, #2
 80053ea:	461a      	mov	r2, r3
 80053ec:	68fb      	ldr	r3, [r7, #12]
 80053ee:	18d1      	adds	r1, r2, r3
 80053f0:	697b      	ldr	r3, [r7, #20]
 80053f2:	009b      	lsls	r3, r3, #2
 80053f4:	68ba      	ldr	r2, [r7, #8]
 80053f6:	4413      	add	r3, r2
 80053f8:	681b      	ldr	r3, [r3, #0]
 80053fa:	461a      	mov	r2, r3
 80053fc:	f04f 0300 	mov.w	r3, #0
 8005400:	2002      	movs	r0, #2
 8005402:	f001 fb03 	bl	8006a0c <HAL_FLASH_Program>
	for(int i=0;i<leng;i++){
 8005406:	697b      	ldr	r3, [r7, #20]
 8005408:	3301      	adds	r3, #1
 800540a:	617b      	str	r3, [r7, #20]
 800540c:	79fb      	ldrb	r3, [r7, #7]
 800540e:	697a      	ldr	r2, [r7, #20]
 8005410:	429a      	cmp	r2, r3
 8005412:	dbe8      	blt.n	80053e6 <Flash_Write4+0x20>

	}



	HAL_FLASH_Lock();
 8005414:	f001 fb70 	bl	8006af8 <HAL_FLASH_Lock>


}
 8005418:	bf00      	nop
 800541a:	3718      	adds	r7, #24
 800541c:	46bd      	mov	sp, r7
 800541e:	bd80      	pop	{r7, pc}

08005420 <Flash_Write5>:
void Flash_Write5(uint32_t Flash_Address, uint32_t *Flash_Data,uint8_t leng){
 8005420:	b580      	push	{r7, lr}
 8005422:	b086      	sub	sp, #24
 8005424:	af00      	add	r7, sp, #0
 8005426:	60f8      	str	r0, [r7, #12]
 8005428:	60b9      	str	r1, [r7, #8]
 800542a:	4613      	mov	r3, r2
 800542c:	71fb      	strb	r3, [r7, #7]

	HAL_FLASH_Unlock();
 800542e:	f001 fb41 	bl	8006ab4 <HAL_FLASH_Unlock>
	FLASH_Erase_Sector(FLASH_SECTOR_11, VOLTAGE_RANGE_3);
 8005432:	2102      	movs	r1, #2
 8005434:	200b      	movs	r0, #11
 8005436:	f001 fc9f 	bl	8006d78 <FLASH_Erase_Sector>

	for(int i=0;i<leng;i++){
 800543a:	2300      	movs	r3, #0
 800543c:	617b      	str	r3, [r7, #20]
 800543e:	e015      	b.n	800546c <Flash_Write5+0x4c>
		HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD,Flash_Address+(4*i),Flash_Data[i]);
 8005440:	697b      	ldr	r3, [r7, #20]
 8005442:	009b      	lsls	r3, r3, #2
 8005444:	461a      	mov	r2, r3
 8005446:	68fb      	ldr	r3, [r7, #12]
 8005448:	18d1      	adds	r1, r2, r3
 800544a:	697b      	ldr	r3, [r7, #20]
 800544c:	009b      	lsls	r3, r3, #2
 800544e:	68ba      	ldr	r2, [r7, #8]
 8005450:	4413      	add	r3, r2
 8005452:	681b      	ldr	r3, [r3, #0]
 8005454:	461a      	mov	r2, r3
 8005456:	f04f 0300 	mov.w	r3, #0
 800545a:	2002      	movs	r0, #2
 800545c:	f001 fad6 	bl	8006a0c <HAL_FLASH_Program>
		HAL_Delay(10);
 8005460:	200a      	movs	r0, #10
 8005462:	f001 f9ad 	bl	80067c0 <HAL_Delay>
	for(int i=0;i<leng;i++){
 8005466:	697b      	ldr	r3, [r7, #20]
 8005468:	3301      	adds	r3, #1
 800546a:	617b      	str	r3, [r7, #20]
 800546c:	79fb      	ldrb	r3, [r7, #7]
 800546e:	697a      	ldr	r2, [r7, #20]
 8005470:	429a      	cmp	r2, r3
 8005472:	dbe5      	blt.n	8005440 <Flash_Write5+0x20>

	}



	HAL_FLASH_Lock();
 8005474:	f001 fb40 	bl	8006af8 <HAL_FLASH_Lock>


}
 8005478:	bf00      	nop
 800547a:	3718      	adds	r7, #24
 800547c:	46bd      	mov	sp, r7
 800547e:	bd80      	pop	{r7, pc}

08005480 <Flash_Read>:

	HAL_FLASH_Lock();


}
uint32_t *Flash_Read(uint32_t Flash_Address){
 8005480:	b480      	push	{r7}
 8005482:	b085      	sub	sp, #20
 8005484:	af00      	add	r7, sp, #0
 8005486:	6078      	str	r0, [r7, #4]


	for(int i=0;i<6;i++){
 8005488:	2300      	movs	r3, #0
 800548a:	60fb      	str	r3, [r7, #12]
 800548c:	e00b      	b.n	80054a6 <Flash_Read+0x26>

		flash_datas[i]=Flash_Address+(4*i);
 800548e:	68fb      	ldr	r3, [r7, #12]
 8005490:	009b      	lsls	r3, r3, #2
 8005492:	461a      	mov	r2, r3
 8005494:	687b      	ldr	r3, [r7, #4]
 8005496:	441a      	add	r2, r3
 8005498:	4908      	ldr	r1, [pc, #32]	; (80054bc <Flash_Read+0x3c>)
 800549a:	68fb      	ldr	r3, [r7, #12]
 800549c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	for(int i=0;i<6;i++){
 80054a0:	68fb      	ldr	r3, [r7, #12]
 80054a2:	3301      	adds	r3, #1
 80054a4:	60fb      	str	r3, [r7, #12]
 80054a6:	68fb      	ldr	r3, [r7, #12]
 80054a8:	2b05      	cmp	r3, #5
 80054aa:	ddf0      	ble.n	800548e <Flash_Read+0xe>
	}


return *flash_datas;
 80054ac:	4b03      	ldr	r3, [pc, #12]	; (80054bc <Flash_Read+0x3c>)
 80054ae:	681b      	ldr	r3, [r3, #0]



}
 80054b0:	4618      	mov	r0, r3
 80054b2:	3714      	adds	r7, #20
 80054b4:	46bd      	mov	sp, r7
 80054b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054ba:	4770      	bx	lr
 80054bc:	200004e0 	.word	0x200004e0

080054c0 <Flash_Read2>:
uint32_t *Flash_Read2(uint32_t Flash_Address){
 80054c0:	b480      	push	{r7}
 80054c2:	b085      	sub	sp, #20
 80054c4:	af00      	add	r7, sp, #0
 80054c6:	6078      	str	r0, [r7, #4]


	for(int i=0;i<6;i++){
 80054c8:	2300      	movs	r3, #0
 80054ca:	60fb      	str	r3, [r7, #12]
 80054cc:	e00b      	b.n	80054e6 <Flash_Read2+0x26>

		flash_datas[i]=Flash_Address+(4*i);
 80054ce:	68fb      	ldr	r3, [r7, #12]
 80054d0:	009b      	lsls	r3, r3, #2
 80054d2:	461a      	mov	r2, r3
 80054d4:	687b      	ldr	r3, [r7, #4]
 80054d6:	441a      	add	r2, r3
 80054d8:	4908      	ldr	r1, [pc, #32]	; (80054fc <Flash_Read2+0x3c>)
 80054da:	68fb      	ldr	r3, [r7, #12]
 80054dc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	for(int i=0;i<6;i++){
 80054e0:	68fb      	ldr	r3, [r7, #12]
 80054e2:	3301      	adds	r3, #1
 80054e4:	60fb      	str	r3, [r7, #12]
 80054e6:	68fb      	ldr	r3, [r7, #12]
 80054e8:	2b05      	cmp	r3, #5
 80054ea:	ddf0      	ble.n	80054ce <Flash_Read2+0xe>
	}


return *flash_datas;
 80054ec:	4b03      	ldr	r3, [pc, #12]	; (80054fc <Flash_Read2+0x3c>)
 80054ee:	681b      	ldr	r3, [r3, #0]



}
 80054f0:	4618      	mov	r0, r3
 80054f2:	3714      	adds	r7, #20
 80054f4:	46bd      	mov	sp, r7
 80054f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054fa:	4770      	bx	lr
 80054fc:	200004e0 	.word	0x200004e0

08005500 <Flash_Read3>:
uint32_t *Flash_Read3(uint32_t Flash_Address){
 8005500:	b480      	push	{r7}
 8005502:	b085      	sub	sp, #20
 8005504:	af00      	add	r7, sp, #0
 8005506:	6078      	str	r0, [r7, #4]


	for(int i=0;i<6;i++){
 8005508:	2300      	movs	r3, #0
 800550a:	60fb      	str	r3, [r7, #12]
 800550c:	e00b      	b.n	8005526 <Flash_Read3+0x26>

		flash_datas[i]=Flash_Address+(4*i);
 800550e:	68fb      	ldr	r3, [r7, #12]
 8005510:	009b      	lsls	r3, r3, #2
 8005512:	461a      	mov	r2, r3
 8005514:	687b      	ldr	r3, [r7, #4]
 8005516:	441a      	add	r2, r3
 8005518:	4908      	ldr	r1, [pc, #32]	; (800553c <Flash_Read3+0x3c>)
 800551a:	68fb      	ldr	r3, [r7, #12]
 800551c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	for(int i=0;i<6;i++){
 8005520:	68fb      	ldr	r3, [r7, #12]
 8005522:	3301      	adds	r3, #1
 8005524:	60fb      	str	r3, [r7, #12]
 8005526:	68fb      	ldr	r3, [r7, #12]
 8005528:	2b05      	cmp	r3, #5
 800552a:	ddf0      	ble.n	800550e <Flash_Read3+0xe>
	}


return *flash_datas;
 800552c:	4b03      	ldr	r3, [pc, #12]	; (800553c <Flash_Read3+0x3c>)
 800552e:	681b      	ldr	r3, [r3, #0]



}
 8005530:	4618      	mov	r0, r3
 8005532:	3714      	adds	r7, #20
 8005534:	46bd      	mov	sp, r7
 8005536:	f85d 7b04 	ldr.w	r7, [sp], #4
 800553a:	4770      	bx	lr
 800553c:	200004e0 	.word	0x200004e0

08005540 <Flash_Read4>:
uint32_t *Flash_Read4(uint32_t Flash_Address){
 8005540:	b480      	push	{r7}
 8005542:	b085      	sub	sp, #20
 8005544:	af00      	add	r7, sp, #0
 8005546:	6078      	str	r0, [r7, #4]


	for(int i=0;i<6;i++){
 8005548:	2300      	movs	r3, #0
 800554a:	60fb      	str	r3, [r7, #12]
 800554c:	e00b      	b.n	8005566 <Flash_Read4+0x26>

		flash_datas[i]=Flash_Address+(4*i);
 800554e:	68fb      	ldr	r3, [r7, #12]
 8005550:	009b      	lsls	r3, r3, #2
 8005552:	461a      	mov	r2, r3
 8005554:	687b      	ldr	r3, [r7, #4]
 8005556:	441a      	add	r2, r3
 8005558:	4908      	ldr	r1, [pc, #32]	; (800557c <Flash_Read4+0x3c>)
 800555a:	68fb      	ldr	r3, [r7, #12]
 800555c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	for(int i=0;i<6;i++){
 8005560:	68fb      	ldr	r3, [r7, #12]
 8005562:	3301      	adds	r3, #1
 8005564:	60fb      	str	r3, [r7, #12]
 8005566:	68fb      	ldr	r3, [r7, #12]
 8005568:	2b05      	cmp	r3, #5
 800556a:	ddf0      	ble.n	800554e <Flash_Read4+0xe>
	}

	return *flash_datas;
 800556c:	4b03      	ldr	r3, [pc, #12]	; (800557c <Flash_Read4+0x3c>)
 800556e:	681b      	ldr	r3, [r3, #0]
}
 8005570:	4618      	mov	r0, r3
 8005572:	3714      	adds	r7, #20
 8005574:	46bd      	mov	sp, r7
 8005576:	f85d 7b04 	ldr.w	r7, [sp], #4
 800557a:	4770      	bx	lr
 800557c:	200004e0 	.word	0x200004e0

08005580 <Flash_Read5>:

uint32_t *Flash_Read5(uint32_t Flash_Address){
 8005580:	b480      	push	{r7}
 8005582:	b085      	sub	sp, #20
 8005584:	af00      	add	r7, sp, #0
 8005586:	6078      	str	r0, [r7, #4]


		for(int i=0;i<29;i++){
 8005588:	2300      	movs	r3, #0
 800558a:	60fb      	str	r3, [r7, #12]
 800558c:	e00b      	b.n	80055a6 <Flash_Read5+0x26>

			flash_datas[i]=Flash_Address+(4*i);
 800558e:	68fb      	ldr	r3, [r7, #12]
 8005590:	009b      	lsls	r3, r3, #2
 8005592:	461a      	mov	r2, r3
 8005594:	687b      	ldr	r3, [r7, #4]
 8005596:	441a      	add	r2, r3
 8005598:	4908      	ldr	r1, [pc, #32]	; (80055bc <Flash_Read5+0x3c>)
 800559a:	68fb      	ldr	r3, [r7, #12]
 800559c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		for(int i=0;i<29;i++){
 80055a0:	68fb      	ldr	r3, [r7, #12]
 80055a2:	3301      	adds	r3, #1
 80055a4:	60fb      	str	r3, [r7, #12]
 80055a6:	68fb      	ldr	r3, [r7, #12]
 80055a8:	2b1c      	cmp	r3, #28
 80055aa:	ddf0      	ble.n	800558e <Flash_Read5+0xe>
		}



return *flash_datas;
 80055ac:	4b03      	ldr	r3, [pc, #12]	; (80055bc <Flash_Read5+0x3c>)
 80055ae:	681b      	ldr	r3, [r3, #0]




}
 80055b0:	4618      	mov	r0, r3
 80055b2:	3714      	adds	r7, #20
 80055b4:	46bd      	mov	sp, r7
 80055b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055ba:	4770      	bx	lr
 80055bc:	200004e0 	.word	0x200004e0

080055c0 <HD44780_Init>:
        0b00110,
        0b00000
};

void HD44780_Init(uint8_t rows)
{
 80055c0:	b580      	push	{r7, lr}
 80055c2:	b082      	sub	sp, #8
 80055c4:	af00      	add	r7, sp, #0
 80055c6:	4603      	mov	r3, r0
 80055c8:	71fb      	strb	r3, [r7, #7]
  dpRows = rows;
 80055ca:	4a38      	ldr	r2, [pc, #224]	; (80056ac <HD44780_Init+0xec>)
 80055cc:	79fb      	ldrb	r3, [r7, #7]
 80055ce:	7013      	strb	r3, [r2, #0]

  dpBacklight = LCD_BACKLIGHT;
 80055d0:	4b37      	ldr	r3, [pc, #220]	; (80056b0 <HD44780_Init+0xf0>)
 80055d2:	2208      	movs	r2, #8
 80055d4:	701a      	strb	r2, [r3, #0]

  dpFunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;
 80055d6:	4b37      	ldr	r3, [pc, #220]	; (80056b4 <HD44780_Init+0xf4>)
 80055d8:	2200      	movs	r2, #0
 80055da:	701a      	strb	r2, [r3, #0]

  if (dpRows > 1)
 80055dc:	4b33      	ldr	r3, [pc, #204]	; (80056ac <HD44780_Init+0xec>)
 80055de:	781b      	ldrb	r3, [r3, #0]
 80055e0:	2b01      	cmp	r3, #1
 80055e2:	d907      	bls.n	80055f4 <HD44780_Init+0x34>
  {
    dpFunction |= LCD_2LINE;
 80055e4:	4b33      	ldr	r3, [pc, #204]	; (80056b4 <HD44780_Init+0xf4>)
 80055e6:	781b      	ldrb	r3, [r3, #0]
 80055e8:	f043 0308 	orr.w	r3, r3, #8
 80055ec:	b2da      	uxtb	r2, r3
 80055ee:	4b31      	ldr	r3, [pc, #196]	; (80056b4 <HD44780_Init+0xf4>)
 80055f0:	701a      	strb	r2, [r3, #0]
 80055f2:	e006      	b.n	8005602 <HD44780_Init+0x42>
  }
  else
  {
    dpFunction |= LCD_5x10DOTS;
 80055f4:	4b2f      	ldr	r3, [pc, #188]	; (80056b4 <HD44780_Init+0xf4>)
 80055f6:	781b      	ldrb	r3, [r3, #0]
 80055f8:	f043 0304 	orr.w	r3, r3, #4
 80055fc:	b2da      	uxtb	r2, r3
 80055fe:	4b2d      	ldr	r3, [pc, #180]	; (80056b4 <HD44780_Init+0xf4>)
 8005600:	701a      	strb	r2, [r3, #0]
  }

  /* Wait for initialization */
  DelayInit();
 8005602:	f000 f985 	bl	8005910 <DelayInit>
  HAL_Delay(50);
 8005606:	2032      	movs	r0, #50	; 0x32
 8005608:	f001 f8da 	bl	80067c0 <HAL_Delay>

  ExpanderWrite(dpBacklight);
 800560c:	4b28      	ldr	r3, [pc, #160]	; (80056b0 <HD44780_Init+0xf0>)
 800560e:	781b      	ldrb	r3, [r3, #0]
 8005610:	4618      	mov	r0, r3
 8005612:	f000 f943 	bl	800589c <ExpanderWrite>
  HAL_Delay(1000);
 8005616:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800561a:	f001 f8d1 	bl	80067c0 <HAL_Delay>

  /* 4bit Mode */
  Write4Bits(0x03 << 4);
 800561e:	2030      	movs	r0, #48	; 0x30
 8005620:	f000 f92b 	bl	800587a <Write4Bits>
  DelayUS(4500);
 8005624:	f241 1094 	movw	r0, #4500	; 0x1194
 8005628:	f000 f99c 	bl	8005964 <DelayUS>

  Write4Bits(0x03 << 4);
 800562c:	2030      	movs	r0, #48	; 0x30
 800562e:	f000 f924 	bl	800587a <Write4Bits>
  DelayUS(4500);
 8005632:	f241 1094 	movw	r0, #4500	; 0x1194
 8005636:	f000 f995 	bl	8005964 <DelayUS>

  Write4Bits(0x03 << 4);
 800563a:	2030      	movs	r0, #48	; 0x30
 800563c:	f000 f91d 	bl	800587a <Write4Bits>
  DelayUS(4500);
 8005640:	f241 1094 	movw	r0, #4500	; 0x1194
 8005644:	f000 f98e 	bl	8005964 <DelayUS>

  Write4Bits(0x02 << 4);
 8005648:	2020      	movs	r0, #32
 800564a:	f000 f916 	bl	800587a <Write4Bits>
  DelayUS(100);
 800564e:	2064      	movs	r0, #100	; 0x64
 8005650:	f000 f988 	bl	8005964 <DelayUS>

  /* Display Control */
  SendCommand(LCD_FUNCTIONSET | dpFunction);
 8005654:	4b17      	ldr	r3, [pc, #92]	; (80056b4 <HD44780_Init+0xf4>)
 8005656:	781b      	ldrb	r3, [r3, #0]
 8005658:	f043 0320 	orr.w	r3, r3, #32
 800565c:	b2db      	uxtb	r3, r3
 800565e:	4618      	mov	r0, r3
 8005660:	f000 f8ce 	bl	8005800 <SendCommand>

  dpControl = LCD_DISPLAYON | LCD_CURSOROFF | LCD_BLINKOFF;
 8005664:	4b14      	ldr	r3, [pc, #80]	; (80056b8 <HD44780_Init+0xf8>)
 8005666:	2204      	movs	r2, #4
 8005668:	701a      	strb	r2, [r3, #0]
  HD44780_Display();
 800566a:	f000 f875 	bl	8005758 <HD44780_Display>
  HD44780_Clear();
 800566e:	f000 f82b 	bl	80056c8 <HD44780_Clear>

  /* Display Mode */
  dpMode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
 8005672:	4b12      	ldr	r3, [pc, #72]	; (80056bc <HD44780_Init+0xfc>)
 8005674:	2202      	movs	r2, #2
 8005676:	701a      	strb	r2, [r3, #0]
  SendCommand(LCD_ENTRYMODESET | dpMode);
 8005678:	4b10      	ldr	r3, [pc, #64]	; (80056bc <HD44780_Init+0xfc>)
 800567a:	781b      	ldrb	r3, [r3, #0]
 800567c:	f043 0304 	orr.w	r3, r3, #4
 8005680:	b2db      	uxtb	r3, r3
 8005682:	4618      	mov	r0, r3
 8005684:	f000 f8bc 	bl	8005800 <SendCommand>
  DelayUS(4500);
 8005688:	f241 1094 	movw	r0, #4500	; 0x1194
 800568c:	f000 f96a 	bl	8005964 <DelayUS>

  HD44780_CreateSpecialChar(0, special1);
 8005690:	490b      	ldr	r1, [pc, #44]	; (80056c0 <HD44780_Init+0x100>)
 8005692:	2000      	movs	r0, #0
 8005694:	f000 f876 	bl	8005784 <HD44780_CreateSpecialChar>
  HD44780_CreateSpecialChar(1, special2);
 8005698:	490a      	ldr	r1, [pc, #40]	; (80056c4 <HD44780_Init+0x104>)
 800569a:	2001      	movs	r0, #1
 800569c:	f000 f872 	bl	8005784 <HD44780_CreateSpecialChar>

  HD44780_Home();
 80056a0:	f000 f81d 	bl	80056de <HD44780_Home>
}
 80056a4:	bf00      	nop
 80056a6:	3708      	adds	r7, #8
 80056a8:	46bd      	mov	sp, r7
 80056aa:	bd80      	pop	{r7, pc}
 80056ac:	200004fa 	.word	0x200004fa
 80056b0:	200004fc 	.word	0x200004fc
 80056b4:	200004f8 	.word	0x200004f8
 80056b8:	200004fb 	.word	0x200004fb
 80056bc:	200004f9 	.word	0x200004f9
 80056c0:	20000000 	.word	0x20000000
 80056c4:	20000008 	.word	0x20000008

080056c8 <HD44780_Clear>:

void HD44780_Clear()
{
 80056c8:	b580      	push	{r7, lr}
 80056ca:	af00      	add	r7, sp, #0
  SendCommand(LCD_CLEARDISPLAY);
 80056cc:	2001      	movs	r0, #1
 80056ce:	f000 f897 	bl	8005800 <SendCommand>
  DelayUS(2000);
 80056d2:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 80056d6:	f000 f945 	bl	8005964 <DelayUS>
}
 80056da:	bf00      	nop
 80056dc:	bd80      	pop	{r7, pc}

080056de <HD44780_Home>:

void HD44780_Home()
{
 80056de:	b580      	push	{r7, lr}
 80056e0:	af00      	add	r7, sp, #0
  SendCommand(LCD_RETURNHOME);
 80056e2:	2002      	movs	r0, #2
 80056e4:	f000 f88c 	bl	8005800 <SendCommand>
  DelayUS(2000);
 80056e8:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 80056ec:	f000 f93a 	bl	8005964 <DelayUS>
}
 80056f0:	bf00      	nop
 80056f2:	bd80      	pop	{r7, pc}

080056f4 <HD44780_SetCursor>:

void HD44780_SetCursor(uint8_t col, uint8_t row)
{
 80056f4:	b590      	push	{r4, r7, lr}
 80056f6:	b087      	sub	sp, #28
 80056f8:	af00      	add	r7, sp, #0
 80056fa:	4603      	mov	r3, r0
 80056fc:	460a      	mov	r2, r1
 80056fe:	71fb      	strb	r3, [r7, #7]
 8005700:	4613      	mov	r3, r2
 8005702:	71bb      	strb	r3, [r7, #6]
  int row_offsets[] = { 0x00, 0x40, 0x14, 0x54 };
 8005704:	4b12      	ldr	r3, [pc, #72]	; (8005750 <HD44780_SetCursor+0x5c>)
 8005706:	f107 0408 	add.w	r4, r7, #8
 800570a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800570c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
  if (row >= dpRows)
 8005710:	4b10      	ldr	r3, [pc, #64]	; (8005754 <HD44780_SetCursor+0x60>)
 8005712:	781b      	ldrb	r3, [r3, #0]
 8005714:	79ba      	ldrb	r2, [r7, #6]
 8005716:	429a      	cmp	r2, r3
 8005718:	d303      	bcc.n	8005722 <HD44780_SetCursor+0x2e>
  {
    row = dpRows-1;
 800571a:	4b0e      	ldr	r3, [pc, #56]	; (8005754 <HD44780_SetCursor+0x60>)
 800571c:	781b      	ldrb	r3, [r3, #0]
 800571e:	3b01      	subs	r3, #1
 8005720:	71bb      	strb	r3, [r7, #6]
  }
  SendCommand(LCD_SETDDRAMADDR | (col + row_offsets[row]));
 8005722:	79bb      	ldrb	r3, [r7, #6]
 8005724:	009b      	lsls	r3, r3, #2
 8005726:	f107 0218 	add.w	r2, r7, #24
 800572a:	4413      	add	r3, r2
 800572c:	f853 3c10 	ldr.w	r3, [r3, #-16]
 8005730:	b2da      	uxtb	r2, r3
 8005732:	79fb      	ldrb	r3, [r7, #7]
 8005734:	4413      	add	r3, r2
 8005736:	b2db      	uxtb	r3, r3
 8005738:	b25b      	sxtb	r3, r3
 800573a:	f063 037f 	orn	r3, r3, #127	; 0x7f
 800573e:	b25b      	sxtb	r3, r3
 8005740:	b2db      	uxtb	r3, r3
 8005742:	4618      	mov	r0, r3
 8005744:	f000 f85c 	bl	8005800 <SendCommand>
}
 8005748:	bf00      	nop
 800574a:	371c      	adds	r7, #28
 800574c:	46bd      	mov	sp, r7
 800574e:	bd90      	pop	{r4, r7, pc}
 8005750:	080090dc 	.word	0x080090dc
 8005754:	200004fa 	.word	0x200004fa

08005758 <HD44780_Display>:
  dpControl &= ~LCD_DISPLAYON;
  SendCommand(LCD_DISPLAYCONTROL | dpControl);
}

void HD44780_Display()
{
 8005758:	b580      	push	{r7, lr}
 800575a:	af00      	add	r7, sp, #0
  dpControl |= LCD_DISPLAYON;
 800575c:	4b08      	ldr	r3, [pc, #32]	; (8005780 <HD44780_Display+0x28>)
 800575e:	781b      	ldrb	r3, [r3, #0]
 8005760:	f043 0304 	orr.w	r3, r3, #4
 8005764:	b2da      	uxtb	r2, r3
 8005766:	4b06      	ldr	r3, [pc, #24]	; (8005780 <HD44780_Display+0x28>)
 8005768:	701a      	strb	r2, [r3, #0]
  SendCommand(LCD_DISPLAYCONTROL | dpControl);
 800576a:	4b05      	ldr	r3, [pc, #20]	; (8005780 <HD44780_Display+0x28>)
 800576c:	781b      	ldrb	r3, [r3, #0]
 800576e:	f043 0308 	orr.w	r3, r3, #8
 8005772:	b2db      	uxtb	r3, r3
 8005774:	4618      	mov	r0, r3
 8005776:	f000 f843 	bl	8005800 <SendCommand>
}
 800577a:	bf00      	nop
 800577c:	bd80      	pop	{r7, pc}
 800577e:	bf00      	nop
 8005780:	200004fb 	.word	0x200004fb

08005784 <HD44780_CreateSpecialChar>:
  dpMode &= ~LCD_ENTRYSHIFTINCREMENT;
  SendCommand(LCD_ENTRYMODESET | dpMode);
}

void HD44780_CreateSpecialChar(uint8_t location, uint8_t charmap[])
{
 8005784:	b580      	push	{r7, lr}
 8005786:	b084      	sub	sp, #16
 8005788:	af00      	add	r7, sp, #0
 800578a:	4603      	mov	r3, r0
 800578c:	6039      	str	r1, [r7, #0]
 800578e:	71fb      	strb	r3, [r7, #7]
  location &= 0x7;
 8005790:	79fb      	ldrb	r3, [r7, #7]
 8005792:	f003 0307 	and.w	r3, r3, #7
 8005796:	71fb      	strb	r3, [r7, #7]
  SendCommand(LCD_SETCGRAMADDR | (location << 3));
 8005798:	79fb      	ldrb	r3, [r7, #7]
 800579a:	00db      	lsls	r3, r3, #3
 800579c:	b25b      	sxtb	r3, r3
 800579e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80057a2:	b25b      	sxtb	r3, r3
 80057a4:	b2db      	uxtb	r3, r3
 80057a6:	4618      	mov	r0, r3
 80057a8:	f000 f82a 	bl	8005800 <SendCommand>
  for (int i=0; i<8; i++)
 80057ac:	2300      	movs	r3, #0
 80057ae:	60fb      	str	r3, [r7, #12]
 80057b0:	e009      	b.n	80057c6 <HD44780_CreateSpecialChar+0x42>
  {
    SendChar(charmap[i]);
 80057b2:	68fb      	ldr	r3, [r7, #12]
 80057b4:	683a      	ldr	r2, [r7, #0]
 80057b6:	4413      	add	r3, r2
 80057b8:	781b      	ldrb	r3, [r3, #0]
 80057ba:	4618      	mov	r0, r3
 80057bc:	f000 f82e 	bl	800581c <SendChar>
  for (int i=0; i<8; i++)
 80057c0:	68fb      	ldr	r3, [r7, #12]
 80057c2:	3301      	adds	r3, #1
 80057c4:	60fb      	str	r3, [r7, #12]
 80057c6:	68fb      	ldr	r3, [r7, #12]
 80057c8:	2b07      	cmp	r3, #7
 80057ca:	ddf2      	ble.n	80057b2 <HD44780_CreateSpecialChar+0x2e>
  }
}
 80057cc:	bf00      	nop
 80057ce:	bf00      	nop
 80057d0:	3710      	adds	r7, #16
 80057d2:	46bd      	mov	sp, r7
 80057d4:	bd80      	pop	{r7, pc}

080057d6 <HD44780_PrintStr>:
{
  HD44780_CreateSpecialChar(char_num, rows);
}

void HD44780_PrintStr(const char c[])
{
 80057d6:	b580      	push	{r7, lr}
 80057d8:	b082      	sub	sp, #8
 80057da:	af00      	add	r7, sp, #0
 80057dc:	6078      	str	r0, [r7, #4]
  while(*c) SendChar(*c++);
 80057de:	e006      	b.n	80057ee <HD44780_PrintStr+0x18>
 80057e0:	687b      	ldr	r3, [r7, #4]
 80057e2:	1c5a      	adds	r2, r3, #1
 80057e4:	607a      	str	r2, [r7, #4]
 80057e6:	781b      	ldrb	r3, [r3, #0]
 80057e8:	4618      	mov	r0, r3
 80057ea:	f000 f817 	bl	800581c <SendChar>
 80057ee:	687b      	ldr	r3, [r7, #4]
 80057f0:	781b      	ldrb	r3, [r3, #0]
 80057f2:	2b00      	cmp	r3, #0
 80057f4:	d1f4      	bne.n	80057e0 <HD44780_PrintStr+0xa>
}
 80057f6:	bf00      	nop
 80057f8:	bf00      	nop
 80057fa:	3708      	adds	r7, #8
 80057fc:	46bd      	mov	sp, r7
 80057fe:	bd80      	pop	{r7, pc}

08005800 <SendCommand>:
  dpBacklight=LCD_BACKLIGHT;
  ExpanderWrite(0);
}

static void SendCommand(uint8_t cmd)
{
 8005800:	b580      	push	{r7, lr}
 8005802:	b082      	sub	sp, #8
 8005804:	af00      	add	r7, sp, #0
 8005806:	4603      	mov	r3, r0
 8005808:	71fb      	strb	r3, [r7, #7]
  Send(cmd, 0);
 800580a:	79fb      	ldrb	r3, [r7, #7]
 800580c:	2100      	movs	r1, #0
 800580e:	4618      	mov	r0, r3
 8005810:	f000 f812 	bl	8005838 <Send>
}
 8005814:	bf00      	nop
 8005816:	3708      	adds	r7, #8
 8005818:	46bd      	mov	sp, r7
 800581a:	bd80      	pop	{r7, pc}

0800581c <SendChar>:

static void SendChar(uint8_t ch)
{
 800581c:	b580      	push	{r7, lr}
 800581e:	b082      	sub	sp, #8
 8005820:	af00      	add	r7, sp, #0
 8005822:	4603      	mov	r3, r0
 8005824:	71fb      	strb	r3, [r7, #7]
  Send(ch, RS);
 8005826:	79fb      	ldrb	r3, [r7, #7]
 8005828:	2101      	movs	r1, #1
 800582a:	4618      	mov	r0, r3
 800582c:	f000 f804 	bl	8005838 <Send>
}
 8005830:	bf00      	nop
 8005832:	3708      	adds	r7, #8
 8005834:	46bd      	mov	sp, r7
 8005836:	bd80      	pop	{r7, pc}

08005838 <Send>:

static void Send(uint8_t value, uint8_t mode)
{
 8005838:	b580      	push	{r7, lr}
 800583a:	b084      	sub	sp, #16
 800583c:	af00      	add	r7, sp, #0
 800583e:	4603      	mov	r3, r0
 8005840:	460a      	mov	r2, r1
 8005842:	71fb      	strb	r3, [r7, #7]
 8005844:	4613      	mov	r3, r2
 8005846:	71bb      	strb	r3, [r7, #6]
  uint8_t highnib = value & 0xF0;
 8005848:	79fb      	ldrb	r3, [r7, #7]
 800584a:	f023 030f 	bic.w	r3, r3, #15
 800584e:	73fb      	strb	r3, [r7, #15]
  uint8_t lownib = (value<<4) & 0xF0;
 8005850:	79fb      	ldrb	r3, [r7, #7]
 8005852:	011b      	lsls	r3, r3, #4
 8005854:	73bb      	strb	r3, [r7, #14]
  Write4Bits((highnib)|mode);
 8005856:	7bfa      	ldrb	r2, [r7, #15]
 8005858:	79bb      	ldrb	r3, [r7, #6]
 800585a:	4313      	orrs	r3, r2
 800585c:	b2db      	uxtb	r3, r3
 800585e:	4618      	mov	r0, r3
 8005860:	f000 f80b 	bl	800587a <Write4Bits>
  Write4Bits((lownib)|mode);
 8005864:	7bba      	ldrb	r2, [r7, #14]
 8005866:	79bb      	ldrb	r3, [r7, #6]
 8005868:	4313      	orrs	r3, r2
 800586a:	b2db      	uxtb	r3, r3
 800586c:	4618      	mov	r0, r3
 800586e:	f000 f804 	bl	800587a <Write4Bits>
}
 8005872:	bf00      	nop
 8005874:	3710      	adds	r7, #16
 8005876:	46bd      	mov	sp, r7
 8005878:	bd80      	pop	{r7, pc}

0800587a <Write4Bits>:

static void Write4Bits(uint8_t value)
{
 800587a:	b580      	push	{r7, lr}
 800587c:	b082      	sub	sp, #8
 800587e:	af00      	add	r7, sp, #0
 8005880:	4603      	mov	r3, r0
 8005882:	71fb      	strb	r3, [r7, #7]
  ExpanderWrite(value);
 8005884:	79fb      	ldrb	r3, [r7, #7]
 8005886:	4618      	mov	r0, r3
 8005888:	f000 f808 	bl	800589c <ExpanderWrite>
  PulseEnable(value);
 800588c:	79fb      	ldrb	r3, [r7, #7]
 800588e:	4618      	mov	r0, r3
 8005890:	f000 f820 	bl	80058d4 <PulseEnable>
}
 8005894:	bf00      	nop
 8005896:	3708      	adds	r7, #8
 8005898:	46bd      	mov	sp, r7
 800589a:	bd80      	pop	{r7, pc}

0800589c <ExpanderWrite>:

static void ExpanderWrite(uint8_t _data)
{
 800589c:	b580      	push	{r7, lr}
 800589e:	b086      	sub	sp, #24
 80058a0:	af02      	add	r7, sp, #8
 80058a2:	4603      	mov	r3, r0
 80058a4:	71fb      	strb	r3, [r7, #7]
  uint8_t data = _data | dpBacklight;
 80058a6:	4b09      	ldr	r3, [pc, #36]	; (80058cc <ExpanderWrite+0x30>)
 80058a8:	781a      	ldrb	r2, [r3, #0]
 80058aa:	79fb      	ldrb	r3, [r7, #7]
 80058ac:	4313      	orrs	r3, r2
 80058ae:	b2db      	uxtb	r3, r3
 80058b0:	73fb      	strb	r3, [r7, #15]
  HAL_I2C_Master_Transmit(&hi2c1, DEVICE_ADDR, (uint8_t*)&data, 1, 10);
 80058b2:	f107 020f 	add.w	r2, r7, #15
 80058b6:	230a      	movs	r3, #10
 80058b8:	9300      	str	r3, [sp, #0]
 80058ba:	2301      	movs	r3, #1
 80058bc:	214e      	movs	r1, #78	; 0x4e
 80058be:	4804      	ldr	r0, [pc, #16]	; (80058d0 <ExpanderWrite+0x34>)
 80058c0:	f001 fdb4 	bl	800742c <HAL_I2C_Master_Transmit>
}
 80058c4:	bf00      	nop
 80058c6:	3710      	adds	r7, #16
 80058c8:	46bd      	mov	sp, r7
 80058ca:	bd80      	pop	{r7, pc}
 80058cc:	200004fc 	.word	0x200004fc
 80058d0:	20000508 	.word	0x20000508

080058d4 <PulseEnable>:

static void PulseEnable(uint8_t _data)
{
 80058d4:	b580      	push	{r7, lr}
 80058d6:	b082      	sub	sp, #8
 80058d8:	af00      	add	r7, sp, #0
 80058da:	4603      	mov	r3, r0
 80058dc:	71fb      	strb	r3, [r7, #7]
  ExpanderWrite(_data | ENABLE);
 80058de:	79fb      	ldrb	r3, [r7, #7]
 80058e0:	f043 0304 	orr.w	r3, r3, #4
 80058e4:	b2db      	uxtb	r3, r3
 80058e6:	4618      	mov	r0, r3
 80058e8:	f7ff ffd8 	bl	800589c <ExpanderWrite>
  DelayUS(20);
 80058ec:	2014      	movs	r0, #20
 80058ee:	f000 f839 	bl	8005964 <DelayUS>

  ExpanderWrite(_data & ~ENABLE);
 80058f2:	79fb      	ldrb	r3, [r7, #7]
 80058f4:	f023 0304 	bic.w	r3, r3, #4
 80058f8:	b2db      	uxtb	r3, r3
 80058fa:	4618      	mov	r0, r3
 80058fc:	f7ff ffce 	bl	800589c <ExpanderWrite>
  DelayUS(20);
 8005900:	2014      	movs	r0, #20
 8005902:	f000 f82f 	bl	8005964 <DelayUS>
}
 8005906:	bf00      	nop
 8005908:	3708      	adds	r7, #8
 800590a:	46bd      	mov	sp, r7
 800590c:	bd80      	pop	{r7, pc}
	...

08005910 <DelayInit>:

static void DelayInit(void)
{
 8005910:	b480      	push	{r7}
 8005912:	af00      	add	r7, sp, #0
  CoreDebug->DEMCR &= ~CoreDebug_DEMCR_TRCENA_Msk;
 8005914:	4b11      	ldr	r3, [pc, #68]	; (800595c <DelayInit+0x4c>)
 8005916:	68db      	ldr	r3, [r3, #12]
 8005918:	4a10      	ldr	r2, [pc, #64]	; (800595c <DelayInit+0x4c>)
 800591a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800591e:	60d3      	str	r3, [r2, #12]
  CoreDebug->DEMCR |=  CoreDebug_DEMCR_TRCENA_Msk;
 8005920:	4b0e      	ldr	r3, [pc, #56]	; (800595c <DelayInit+0x4c>)
 8005922:	68db      	ldr	r3, [r3, #12]
 8005924:	4a0d      	ldr	r2, [pc, #52]	; (800595c <DelayInit+0x4c>)
 8005926:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800592a:	60d3      	str	r3, [r2, #12]

  DWT->CTRL &= ~DWT_CTRL_CYCCNTENA_Msk; //~0x00000001;
 800592c:	4b0c      	ldr	r3, [pc, #48]	; (8005960 <DelayInit+0x50>)
 800592e:	681b      	ldr	r3, [r3, #0]
 8005930:	4a0b      	ldr	r2, [pc, #44]	; (8005960 <DelayInit+0x50>)
 8005932:	f023 0301 	bic.w	r3, r3, #1
 8005936:	6013      	str	r3, [r2, #0]
  DWT->CTRL |=  DWT_CTRL_CYCCNTENA_Msk; //0x00000001;
 8005938:	4b09      	ldr	r3, [pc, #36]	; (8005960 <DelayInit+0x50>)
 800593a:	681b      	ldr	r3, [r3, #0]
 800593c:	4a08      	ldr	r2, [pc, #32]	; (8005960 <DelayInit+0x50>)
 800593e:	f043 0301 	orr.w	r3, r3, #1
 8005942:	6013      	str	r3, [r2, #0]

  DWT->CYCCNT = 0;
 8005944:	4b06      	ldr	r3, [pc, #24]	; (8005960 <DelayInit+0x50>)
 8005946:	2200      	movs	r2, #0
 8005948:	605a      	str	r2, [r3, #4]

  /* 3 NO OPERATION instructions */
  __ASM volatile ("NOP");
 800594a:	bf00      	nop
  __ASM volatile ("NOP");
 800594c:	bf00      	nop
  __ASM volatile ("NOP");
 800594e:	bf00      	nop
}
 8005950:	bf00      	nop
 8005952:	46bd      	mov	sp, r7
 8005954:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005958:	4770      	bx	lr
 800595a:	bf00      	nop
 800595c:	e000edf0 	.word	0xe000edf0
 8005960:	e0001000 	.word	0xe0001000

08005964 <DelayUS>:

static void DelayUS(uint32_t us) {
 8005964:	b480      	push	{r7}
 8005966:	b087      	sub	sp, #28
 8005968:	af00      	add	r7, sp, #0
 800596a:	6078      	str	r0, [r7, #4]
  uint32_t cycles = (SystemCoreClock/1000000L)*us;
 800596c:	4b0e      	ldr	r3, [pc, #56]	; (80059a8 <DelayUS+0x44>)
 800596e:	681b      	ldr	r3, [r3, #0]
 8005970:	4a0e      	ldr	r2, [pc, #56]	; (80059ac <DelayUS+0x48>)
 8005972:	fba2 2303 	umull	r2, r3, r2, r3
 8005976:	0c9a      	lsrs	r2, r3, #18
 8005978:	687b      	ldr	r3, [r7, #4]
 800597a:	fb02 f303 	mul.w	r3, r2, r3
 800597e:	617b      	str	r3, [r7, #20]
  uint32_t start = DWT->CYCCNT;
 8005980:	4b0b      	ldr	r3, [pc, #44]	; (80059b0 <DelayUS+0x4c>)
 8005982:	685b      	ldr	r3, [r3, #4]
 8005984:	613b      	str	r3, [r7, #16]
  volatile uint32_t cnt;

  do
  {
    cnt = DWT->CYCCNT - start;
 8005986:	4b0a      	ldr	r3, [pc, #40]	; (80059b0 <DelayUS+0x4c>)
 8005988:	685a      	ldr	r2, [r3, #4]
 800598a:	693b      	ldr	r3, [r7, #16]
 800598c:	1ad3      	subs	r3, r2, r3
 800598e:	60fb      	str	r3, [r7, #12]
  } while(cnt < cycles);
 8005990:	68fb      	ldr	r3, [r7, #12]
 8005992:	697a      	ldr	r2, [r7, #20]
 8005994:	429a      	cmp	r2, r3
 8005996:	d8f6      	bhi.n	8005986 <DelayUS+0x22>
}
 8005998:	bf00      	nop
 800599a:	bf00      	nop
 800599c:	371c      	adds	r7, #28
 800599e:	46bd      	mov	sp, r7
 80059a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80059a4:	4770      	bx	lr
 80059a6:	bf00      	nop
 80059a8:	20000010 	.word	0x20000010
 80059ac:	431bde83 	.word	0x431bde83
 80059b0:	e0001000 	.word	0xe0001000

080059b4 <timer_start>:
}
/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void timer_start(delay){
 80059b4:	b580      	push	{r7, lr}
 80059b6:	b082      	sub	sp, #8
 80059b8:	af00      	add	r7, sp, #0
 80059ba:	6078      	str	r0, [r7, #4]
	HAL_TIM_Base_Start_IT(&htim2);
 80059bc:	4807      	ldr	r0, [pc, #28]	; (80059dc <timer_start+0x28>)
 80059be:	f002 fe1b 	bl	80085f8 <HAL_TIM_Base_Start_IT>
	if(counter>delay)
 80059c2:	4b07      	ldr	r3, [pc, #28]	; (80059e0 <timer_start+0x2c>)
 80059c4:	681b      	ldr	r3, [r3, #0]
 80059c6:	687a      	ldr	r2, [r7, #4]
 80059c8:	429a      	cmp	r2, r3
 80059ca:	da02      	bge.n	80059d2 <timer_start+0x1e>
		{
			HAL_TIM_Base_Stop_IT(&htim2);
 80059cc:	4803      	ldr	r0, [pc, #12]	; (80059dc <timer_start+0x28>)
 80059ce:	f002 fe83 	bl	80086d8 <HAL_TIM_Base_Stop_IT>

		}

}
 80059d2:	bf00      	nop
 80059d4:	3708      	adds	r7, #8
 80059d6:	46bd      	mov	sp, r7
 80059d8:	bd80      	pop	{r7, pc}
 80059da:	bf00      	nop
 80059dc:	200005cc 	.word	0x200005cc
 80059e0:	200005ac 	.word	0x200005ac

080059e4 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80059e4:	b5b0      	push	{r4, r5, r7, lr}
 80059e6:	b086      	sub	sp, #24
 80059e8:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80059ea:	f000 fe77 	bl	80066dc <HAL_Init>

  /* USER CODE BEGIN Init */
  DS1302_Init();
 80059ee:	f000 fb69 	bl	80060c4 <DS1302_Init>

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80059f2:	f000 f913 	bl	8005c1c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80059f6:	f000 f9f7 	bl	8005de8 <MX_GPIO_Init>
  MX_I2C1_Init();
 80059fa:	f000 f979 	bl	8005cf0 <MX_I2C1_Init>
  MX_TIM2_Init();
 80059fe:	f000 f9a5 	bl	8005d4c <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */
     LCD_Init();
 8005a02:	f7fa fe83 	bl	800070c <LCD_Init>
     HD44780_Init(2);
 8005a06:	2002      	movs	r0, #2
 8005a08:	f7ff fdda 	bl	80055c0 <HD44780_Init>
//     setTimer.sec=45;
//     DS1302_SetTime_Struct(&setTimer);



      LCD_Send_String_On_Line1("     CITech");
 8005a0c:	4873      	ldr	r0, [pc, #460]	; (8005bdc <main+0x1f8>)
 8005a0e:	f7fa feaf 	bl	8000770 <LCD_Send_String_On_Line1>
	  HAL_Delay(2000);
 8005a12:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 8005a16:	f000 fed3 	bl	80067c0 <HAL_Delay>
	  LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8005a1a:	2001      	movs	r0, #1
 8005a1c:	f7fa fdd8 	bl	80005d0 <LCD_Send_Cmd>
	  LCD_Send_String_On_Line1("4 Pompali Dozaj");
 8005a20:	486f      	ldr	r0, [pc, #444]	; (8005be0 <main+0x1fc>)
 8005a22:	f7fa fea5 	bl	8000770 <LCD_Send_String_On_Line1>
      HAL_Delay(1000);
 8005a26:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8005a2a:	f000 fec9 	bl	80067c0 <HAL_Delay>
      LCD_Send_Cmd(LCD_CLEAR_DISPLAY);
 8005a2e:	2001      	movs	r0, #1
 8005a30:	f7fa fdce 	bl	80005d0 <LCD_Send_Cmd>
      LCD_Send_String_On_Line1("     CITech");
 8005a34:	4869      	ldr	r0, [pc, #420]	; (8005bdc <main+0x1f8>)
 8005a36:	f7fa fe9b 	bl	8000770 <LCD_Send_String_On_Line1>





	  time1=DS1302_ReadTime_Struct();
 8005a3a:	4c6a      	ldr	r4, [pc, #424]	; (8005be4 <main+0x200>)
 8005a3c:	463b      	mov	r3, r7
 8005a3e:	4618      	mov	r0, r3
 8005a40:	f000 fcd1 	bl	80063e6 <DS1302_ReadTime_Struct>
 8005a44:	4625      	mov	r5, r4
 8005a46:	463c      	mov	r4, r7
 8005a48:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8005a4a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8005a4c:	6823      	ldr	r3, [r4, #0]
 8005a4e:	602b      	str	r3, [r5, #0]
 //time1=DS1302_ReadTime_Struct_Burst();
	                                                                                                         timehour2 =  time1.hour % 10;
 8005a50:	4b64      	ldr	r3, [pc, #400]	; (8005be4 <main+0x200>)
 8005a52:	7c1a      	ldrb	r2, [r3, #16]
 8005a54:	4b64      	ldr	r3, [pc, #400]	; (8005be8 <main+0x204>)
 8005a56:	fba3 1302 	umull	r1, r3, r3, r2
 8005a5a:	08d9      	lsrs	r1, r3, #3
 8005a5c:	460b      	mov	r3, r1
 8005a5e:	009b      	lsls	r3, r3, #2
 8005a60:	440b      	add	r3, r1
 8005a62:	005b      	lsls	r3, r3, #1
 8005a64:	1ad3      	subs	r3, r2, r3
 8005a66:	b2da      	uxtb	r2, r3
 8005a68:	4b60      	ldr	r3, [pc, #384]	; (8005bec <main+0x208>)
 8005a6a:	701a      	strb	r2, [r3, #0]
	 	 	  				                          	 	  					                             timehour1 =  (time1.hour - timehour2)/10;
 8005a6c:	4b5d      	ldr	r3, [pc, #372]	; (8005be4 <main+0x200>)
 8005a6e:	7c1b      	ldrb	r3, [r3, #16]
 8005a70:	461a      	mov	r2, r3
 8005a72:	4b5e      	ldr	r3, [pc, #376]	; (8005bec <main+0x208>)
 8005a74:	781b      	ldrb	r3, [r3, #0]
 8005a76:	1ad3      	subs	r3, r2, r3
 8005a78:	4a5d      	ldr	r2, [pc, #372]	; (8005bf0 <main+0x20c>)
 8005a7a:	fb82 1203 	smull	r1, r2, r2, r3
 8005a7e:	1092      	asrs	r2, r2, #2
 8005a80:	17db      	asrs	r3, r3, #31
 8005a82:	1ad3      	subs	r3, r2, r3
 8005a84:	b2da      	uxtb	r2, r3
 8005a86:	4b5b      	ldr	r3, [pc, #364]	; (8005bf4 <main+0x210>)
 8005a88:	701a      	strb	r2, [r3, #0]
	 	 	  					                          	 	  					                         timemin2 =  time1.min % 10;
 8005a8a:	4b56      	ldr	r3, [pc, #344]	; (8005be4 <main+0x200>)
 8005a8c:	7c5a      	ldrb	r2, [r3, #17]
 8005a8e:	4b56      	ldr	r3, [pc, #344]	; (8005be8 <main+0x204>)
 8005a90:	fba3 1302 	umull	r1, r3, r3, r2
 8005a94:	08d9      	lsrs	r1, r3, #3
 8005a96:	460b      	mov	r3, r1
 8005a98:	009b      	lsls	r3, r3, #2
 8005a9a:	440b      	add	r3, r1
 8005a9c:	005b      	lsls	r3, r3, #1
 8005a9e:	1ad3      	subs	r3, r2, r3
 8005aa0:	b2da      	uxtb	r2, r3
 8005aa2:	4b55      	ldr	r3, [pc, #340]	; (8005bf8 <main+0x214>)
 8005aa4:	701a      	strb	r2, [r3, #0]
	 	 	  					                          	 	  					                         timemin1 =  (time1.min - timemin2)/10;
 8005aa6:	4b4f      	ldr	r3, [pc, #316]	; (8005be4 <main+0x200>)
 8005aa8:	7c5b      	ldrb	r3, [r3, #17]
 8005aaa:	461a      	mov	r2, r3
 8005aac:	4b52      	ldr	r3, [pc, #328]	; (8005bf8 <main+0x214>)
 8005aae:	781b      	ldrb	r3, [r3, #0]
 8005ab0:	1ad3      	subs	r3, r2, r3
 8005ab2:	4a4f      	ldr	r2, [pc, #316]	; (8005bf0 <main+0x20c>)
 8005ab4:	fb82 1203 	smull	r1, r2, r2, r3
 8005ab8:	1092      	asrs	r2, r2, #2
 8005aba:	17db      	asrs	r3, r3, #31
 8005abc:	1ad3      	subs	r3, r2, r3
 8005abe:	b2da      	uxtb	r2, r3
 8005ac0:	4b4e      	ldr	r3, [pc, #312]	; (8005bfc <main+0x218>)
 8005ac2:	701a      	strb	r2, [r3, #0]
	 	 	  					                          	 	  					                         timesec2 =  time1.sec % 10;
 8005ac4:	4b47      	ldr	r3, [pc, #284]	; (8005be4 <main+0x200>)
 8005ac6:	7c9a      	ldrb	r2, [r3, #18]
 8005ac8:	4b47      	ldr	r3, [pc, #284]	; (8005be8 <main+0x204>)
 8005aca:	fba3 1302 	umull	r1, r3, r3, r2
 8005ace:	08d9      	lsrs	r1, r3, #3
 8005ad0:	460b      	mov	r3, r1
 8005ad2:	009b      	lsls	r3, r3, #2
 8005ad4:	440b      	add	r3, r1
 8005ad6:	005b      	lsls	r3, r3, #1
 8005ad8:	1ad3      	subs	r3, r2, r3
 8005ada:	b2da      	uxtb	r2, r3
 8005adc:	4b48      	ldr	r3, [pc, #288]	; (8005c00 <main+0x21c>)
 8005ade:	701a      	strb	r2, [r3, #0]
	 	 	  					                          	 	  					                         timesec1 =  (time1.sec - timesec2)/10;
 8005ae0:	4b40      	ldr	r3, [pc, #256]	; (8005be4 <main+0x200>)
 8005ae2:	7c9b      	ldrb	r3, [r3, #18]
 8005ae4:	461a      	mov	r2, r3
 8005ae6:	4b46      	ldr	r3, [pc, #280]	; (8005c00 <main+0x21c>)
 8005ae8:	781b      	ldrb	r3, [r3, #0]
 8005aea:	1ad3      	subs	r3, r2, r3
 8005aec:	4a40      	ldr	r2, [pc, #256]	; (8005bf0 <main+0x20c>)
 8005aee:	fb82 1203 	smull	r1, r2, r2, r3
 8005af2:	1092      	asrs	r2, r2, #2
 8005af4:	17db      	asrs	r3, r3, #31
 8005af6:	1ad3      	subs	r3, r2, r3
 8005af8:	b2da      	uxtb	r2, r3
 8005afa:	4b42      	ldr	r3, [pc, #264]	; (8005c04 <main+0x220>)
 8005afc:	701a      	strb	r2, [r3, #0]

	                             itoa((timehour1), snum1, 10);
 8005afe:	4b3d      	ldr	r3, [pc, #244]	; (8005bf4 <main+0x210>)
 8005b00:	781b      	ldrb	r3, [r3, #0]
 8005b02:	220a      	movs	r2, #10
 8005b04:	4940      	ldr	r1, [pc, #256]	; (8005c08 <main+0x224>)
 8005b06:	4618      	mov	r0, r3
 8005b08:	f003 f8ce 	bl	8008ca8 <itoa>
	  	 	  					 HD44780_SetCursor(4,1);
 8005b0c:	2101      	movs	r1, #1
 8005b0e:	2004      	movs	r0, #4
 8005b10:	f7ff fdf0 	bl	80056f4 <HD44780_SetCursor>
	  	 	  					 HD44780_PrintStr(snum1);
 8005b14:	483c      	ldr	r0, [pc, #240]	; (8005c08 <main+0x224>)
 8005b16:	f7ff fe5e 	bl	80057d6 <HD44780_PrintStr>

	  	 	  				     itoa((timehour2), snum2, 10);
 8005b1a:	4b34      	ldr	r3, [pc, #208]	; (8005bec <main+0x208>)
 8005b1c:	781b      	ldrb	r3, [r3, #0]
 8005b1e:	220a      	movs	r2, #10
 8005b20:	493a      	ldr	r1, [pc, #232]	; (8005c0c <main+0x228>)
 8005b22:	4618      	mov	r0, r3
 8005b24:	f003 f8c0 	bl	8008ca8 <itoa>
	   	 	  					 HD44780_SetCursor(5,1);
 8005b28:	2101      	movs	r1, #1
 8005b2a:	2005      	movs	r0, #5
 8005b2c:	f7ff fde2 	bl	80056f4 <HD44780_SetCursor>
	  	 	  					 HD44780_PrintStr(snum2);
 8005b30:	4836      	ldr	r0, [pc, #216]	; (8005c0c <main+0x228>)
 8005b32:	f7ff fe50 	bl	80057d6 <HD44780_PrintStr>
//	  	 	  				     LCD_Send_String_On_Line2("      :");

	  	 	  				                             itoa((timemin1), snum1, 10);
 8005b36:	4b31      	ldr	r3, [pc, #196]	; (8005bfc <main+0x218>)
 8005b38:	781b      	ldrb	r3, [r3, #0]
 8005b3a:	220a      	movs	r2, #10
 8005b3c:	4932      	ldr	r1, [pc, #200]	; (8005c08 <main+0x224>)
 8005b3e:	4618      	mov	r0, r3
 8005b40:	f003 f8b2 	bl	8008ca8 <itoa>
	  	 	  					 	  					 HD44780_SetCursor(7,1);
 8005b44:	2101      	movs	r1, #1
 8005b46:	2007      	movs	r0, #7
 8005b48:	f7ff fdd4 	bl	80056f4 <HD44780_SetCursor>
	  	 	  					 	  					 HD44780_PrintStr(snum1);
 8005b4c:	482e      	ldr	r0, [pc, #184]	; (8005c08 <main+0x224>)
 8005b4e:	f7ff fe42 	bl	80057d6 <HD44780_PrintStr>

                                                         itoa((timemin2), snum1, 10);
 8005b52:	4b29      	ldr	r3, [pc, #164]	; (8005bf8 <main+0x214>)
 8005b54:	781b      	ldrb	r3, [r3, #0]
 8005b56:	220a      	movs	r2, #10
 8005b58:	492b      	ldr	r1, [pc, #172]	; (8005c08 <main+0x224>)
 8005b5a:	4618      	mov	r0, r3
 8005b5c:	f003 f8a4 	bl	8008ca8 <itoa>
	 	  					                             HD44780_SetCursor(8,1);
 8005b60:	2101      	movs	r1, #1
 8005b62:	2008      	movs	r0, #8
 8005b64:	f7ff fdc6 	bl	80056f4 <HD44780_SetCursor>
	 	  					                             HD44780_PrintStr(snum1);
 8005b68:	4827      	ldr	r0, [pc, #156]	; (8005c08 <main+0x224>)
 8005b6a:	f7ff fe34 	bl	80057d6 <HD44780_PrintStr>
//	 	  					                             LCD_Send_String_On_Line2("         :");

	 	  					                          	  	 	  				                             itoa((timesec1), snum1, 10);
 8005b6e:	4b25      	ldr	r3, [pc, #148]	; (8005c04 <main+0x220>)
 8005b70:	781b      	ldrb	r3, [r3, #0]
 8005b72:	220a      	movs	r2, #10
 8005b74:	4924      	ldr	r1, [pc, #144]	; (8005c08 <main+0x224>)
 8005b76:	4618      	mov	r0, r3
 8005b78:	f003 f896 	bl	8008ca8 <itoa>
	 	  					                          	  	 	  					 	  					 HD44780_SetCursor(10,1);
 8005b7c:	2101      	movs	r1, #1
 8005b7e:	200a      	movs	r0, #10
 8005b80:	f7ff fdb8 	bl	80056f4 <HD44780_SetCursor>
	 	  					                          	  	 	  					 	  					 HD44780_PrintStr(snum1);
 8005b84:	4820      	ldr	r0, [pc, #128]	; (8005c08 <main+0x224>)
 8005b86:	f7ff fe26 	bl	80057d6 <HD44780_PrintStr>

	 	  					                                                                                 itoa((timesec2), snum1, 10);
 8005b8a:	4b1d      	ldr	r3, [pc, #116]	; (8005c00 <main+0x21c>)
 8005b8c:	781b      	ldrb	r3, [r3, #0]
 8005b8e:	220a      	movs	r2, #10
 8005b90:	491d      	ldr	r1, [pc, #116]	; (8005c08 <main+0x224>)
 8005b92:	4618      	mov	r0, r3
 8005b94:	f003 f888 	bl	8008ca8 <itoa>
	 	  					                          	 	  					                             HD44780_SetCursor(11,1);
 8005b98:	2101      	movs	r1, #1
 8005b9a:	200b      	movs	r0, #11
 8005b9c:	f7ff fdaa 	bl	80056f4 <HD44780_SetCursor>
	 	  					                          	 	  					                             HD44780_PrintStr(snum1);
 8005ba0:	4819      	ldr	r0, [pc, #100]	; (8005c08 <main+0x224>)
 8005ba2:	f7ff fe18 	bl	80057d6 <HD44780_PrintStr>




	  if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==1){
 8005ba6:	2110      	movs	r1, #16
 8005ba8:	4819      	ldr	r0, [pc, #100]	; (8005c10 <main+0x22c>)
 8005baa:	f001 fac9 	bl	8007140 <HAL_GPIO_ReadPin>
 8005bae:	4603      	mov	r3, r0
 8005bb0:	2b01      	cmp	r3, #1
 8005bb2:	f47f af42 	bne.w	8005a3a <main+0x56>
		  timer_start(2);
 8005bb6:	2002      	movs	r0, #2
 8005bb8:	f7ff fefc 	bl	80059b4 <timer_start>
		  if(counter==delay){
 8005bbc:	4b15      	ldr	r3, [pc, #84]	; (8005c14 <main+0x230>)
 8005bbe:	681a      	ldr	r2, [r3, #0]
 8005bc0:	4b15      	ldr	r3, [pc, #84]	; (8005c18 <main+0x234>)
 8005bc2:	681b      	ldr	r3, [r3, #0]
 8005bc4:	429a      	cmp	r2, r3
 8005bc6:	f47f af38 	bne.w	8005a3a <main+0x56>
			  counter=0;
 8005bca:	4b12      	ldr	r3, [pc, #72]	; (8005c14 <main+0x230>)
 8005bcc:	2200      	movs	r2, #0
 8005bce:	601a      	str	r2, [r3, #0]
			  delay=0;
 8005bd0:	4b11      	ldr	r3, [pc, #68]	; (8005c18 <main+0x234>)
 8005bd2:	2200      	movs	r2, #0
 8005bd4:	601a      	str	r2, [r3, #0]
			  Genel_Ekran_Ayar();
 8005bd6:	f7fa fde7 	bl	80007a8 <Genel_Ekran_Ayar>
	  time1=DS1302_ReadTime_Struct();
 8005bda:	e72e      	b.n	8005a3a <main+0x56>
 8005bdc:	080090ec 	.word	0x080090ec
 8005be0:	080090f8 	.word	0x080090f8
 8005be4:	20000594 	.word	0x20000594
 8005be8:	cccccccd 	.word	0xcccccccd
 8005bec:	200005a8 	.word	0x200005a8
 8005bf0:	66666667 	.word	0x66666667
 8005bf4:	20000592 	.word	0x20000592
 8005bf8:	20000614 	.word	0x20000614
 8005bfc:	20000504 	.word	0x20000504
 8005c00:	2000055d 	.word	0x2000055d
 8005c04:	2000055c 	.word	0x2000055c
 8005c08:	20000560 	.word	0x20000560
 8005c0c:	20000630 	.word	0x20000630
 8005c10:	40020000 	.word	0x40020000
 8005c14:	200005ac 	.word	0x200005ac
 8005c18:	200000d0 	.word	0x200000d0

08005c1c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8005c1c:	b580      	push	{r7, lr}
 8005c1e:	b094      	sub	sp, #80	; 0x50
 8005c20:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8005c22:	f107 0320 	add.w	r3, r7, #32
 8005c26:	2230      	movs	r2, #48	; 0x30
 8005c28:	2100      	movs	r1, #0
 8005c2a:	4618      	mov	r0, r3
 8005c2c:	f003 f83e 	bl	8008cac <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8005c30:	f107 030c 	add.w	r3, r7, #12
 8005c34:	2200      	movs	r2, #0
 8005c36:	601a      	str	r2, [r3, #0]
 8005c38:	605a      	str	r2, [r3, #4]
 8005c3a:	609a      	str	r2, [r3, #8]
 8005c3c:	60da      	str	r2, [r3, #12]
 8005c3e:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8005c40:	2300      	movs	r3, #0
 8005c42:	60bb      	str	r3, [r7, #8]
 8005c44:	4b28      	ldr	r3, [pc, #160]	; (8005ce8 <SystemClock_Config+0xcc>)
 8005c46:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005c48:	4a27      	ldr	r2, [pc, #156]	; (8005ce8 <SystemClock_Config+0xcc>)
 8005c4a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005c4e:	6413      	str	r3, [r2, #64]	; 0x40
 8005c50:	4b25      	ldr	r3, [pc, #148]	; (8005ce8 <SystemClock_Config+0xcc>)
 8005c52:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005c54:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005c58:	60bb      	str	r3, [r7, #8]
 8005c5a:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8005c5c:	2300      	movs	r3, #0
 8005c5e:	607b      	str	r3, [r7, #4]
 8005c60:	4b22      	ldr	r3, [pc, #136]	; (8005cec <SystemClock_Config+0xd0>)
 8005c62:	681b      	ldr	r3, [r3, #0]
 8005c64:	4a21      	ldr	r2, [pc, #132]	; (8005cec <SystemClock_Config+0xd0>)
 8005c66:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8005c6a:	6013      	str	r3, [r2, #0]
 8005c6c:	4b1f      	ldr	r3, [pc, #124]	; (8005cec <SystemClock_Config+0xd0>)
 8005c6e:	681b      	ldr	r3, [r3, #0]
 8005c70:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8005c74:	607b      	str	r3, [r7, #4]
 8005c76:	687b      	ldr	r3, [r7, #4]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8005c78:	2301      	movs	r3, #1
 8005c7a:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8005c7c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8005c80:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8005c82:	2302      	movs	r3, #2
 8005c84:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8005c86:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8005c8a:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 4;
 8005c8c:	2304      	movs	r3, #4
 8005c8e:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 168;
 8005c90:	23a8      	movs	r3, #168	; 0xa8
 8005c92:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8005c94:	2302      	movs	r3, #2
 8005c96:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8005c98:	2304      	movs	r3, #4
 8005c9a:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8005c9c:	f107 0320 	add.w	r3, r7, #32
 8005ca0:	4618      	mov	r0, r3
 8005ca2:	f001 fff9 	bl	8007c98 <HAL_RCC_OscConfig>
 8005ca6:	4603      	mov	r3, r0
 8005ca8:	2b00      	cmp	r3, #0
 8005caa:	d001      	beq.n	8005cb0 <SystemClock_Config+0x94>
  {
    Error_Handler();
 8005cac:	f000 f918 	bl	8005ee0 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8005cb0:	230f      	movs	r3, #15
 8005cb2:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8005cb4:	2302      	movs	r3, #2
 8005cb6:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8005cb8:	2300      	movs	r3, #0
 8005cba:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8005cbc:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8005cc0:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8005cc2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005cc6:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8005cc8:	f107 030c 	add.w	r3, r7, #12
 8005ccc:	2105      	movs	r1, #5
 8005cce:	4618      	mov	r0, r3
 8005cd0:	f002 fa5a 	bl	8008188 <HAL_RCC_ClockConfig>
 8005cd4:	4603      	mov	r3, r0
 8005cd6:	2b00      	cmp	r3, #0
 8005cd8:	d001      	beq.n	8005cde <SystemClock_Config+0xc2>
  {
    Error_Handler();
 8005cda:	f000 f901 	bl	8005ee0 <Error_Handler>
  }
}
 8005cde:	bf00      	nop
 8005ce0:	3750      	adds	r7, #80	; 0x50
 8005ce2:	46bd      	mov	sp, r7
 8005ce4:	bd80      	pop	{r7, pc}
 8005ce6:	bf00      	nop
 8005ce8:	40023800 	.word	0x40023800
 8005cec:	40007000 	.word	0x40007000

08005cf0 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8005cf0:	b580      	push	{r7, lr}
 8005cf2:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8005cf4:	4b12      	ldr	r3, [pc, #72]	; (8005d40 <MX_I2C1_Init+0x50>)
 8005cf6:	4a13      	ldr	r2, [pc, #76]	; (8005d44 <MX_I2C1_Init+0x54>)
 8005cf8:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 8005cfa:	4b11      	ldr	r3, [pc, #68]	; (8005d40 <MX_I2C1_Init+0x50>)
 8005cfc:	4a12      	ldr	r2, [pc, #72]	; (8005d48 <MX_I2C1_Init+0x58>)
 8005cfe:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8005d00:	4b0f      	ldr	r3, [pc, #60]	; (8005d40 <MX_I2C1_Init+0x50>)
 8005d02:	2200      	movs	r2, #0
 8005d04:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8005d06:	4b0e      	ldr	r3, [pc, #56]	; (8005d40 <MX_I2C1_Init+0x50>)
 8005d08:	2200      	movs	r2, #0
 8005d0a:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8005d0c:	4b0c      	ldr	r3, [pc, #48]	; (8005d40 <MX_I2C1_Init+0x50>)
 8005d0e:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8005d12:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8005d14:	4b0a      	ldr	r3, [pc, #40]	; (8005d40 <MX_I2C1_Init+0x50>)
 8005d16:	2200      	movs	r2, #0
 8005d18:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8005d1a:	4b09      	ldr	r3, [pc, #36]	; (8005d40 <MX_I2C1_Init+0x50>)
 8005d1c:	2200      	movs	r2, #0
 8005d1e:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8005d20:	4b07      	ldr	r3, [pc, #28]	; (8005d40 <MX_I2C1_Init+0x50>)
 8005d22:	2200      	movs	r2, #0
 8005d24:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8005d26:	4b06      	ldr	r3, [pc, #24]	; (8005d40 <MX_I2C1_Init+0x50>)
 8005d28:	2200      	movs	r2, #0
 8005d2a:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8005d2c:	4804      	ldr	r0, [pc, #16]	; (8005d40 <MX_I2C1_Init+0x50>)
 8005d2e:	f001 fa39 	bl	80071a4 <HAL_I2C_Init>
 8005d32:	4603      	mov	r3, r0
 8005d34:	2b00      	cmp	r3, #0
 8005d36:	d001      	beq.n	8005d3c <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8005d38:	f000 f8d2 	bl	8005ee0 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8005d3c:	bf00      	nop
 8005d3e:	bd80      	pop	{r7, pc}
 8005d40:	20000508 	.word	0x20000508
 8005d44:	40005400 	.word	0x40005400
 8005d48:	000186a0 	.word	0x000186a0

08005d4c <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8005d4c:	b580      	push	{r7, lr}
 8005d4e:	b086      	sub	sp, #24
 8005d50:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8005d52:	f107 0308 	add.w	r3, r7, #8
 8005d56:	2200      	movs	r2, #0
 8005d58:	601a      	str	r2, [r3, #0]
 8005d5a:	605a      	str	r2, [r3, #4]
 8005d5c:	609a      	str	r2, [r3, #8]
 8005d5e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8005d60:	463b      	mov	r3, r7
 8005d62:	2200      	movs	r2, #0
 8005d64:	601a      	str	r2, [r3, #0]
 8005d66:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8005d68:	4b1e      	ldr	r3, [pc, #120]	; (8005de4 <MX_TIM2_Init+0x98>)
 8005d6a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8005d6e:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 21000;
 8005d70:	4b1c      	ldr	r3, [pc, #112]	; (8005de4 <MX_TIM2_Init+0x98>)
 8005d72:	f245 2208 	movw	r2, #21000	; 0x5208
 8005d76:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8005d78:	4b1a      	ldr	r3, [pc, #104]	; (8005de4 <MX_TIM2_Init+0x98>)
 8005d7a:	2200      	movs	r2, #0
 8005d7c:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 4000;
 8005d7e:	4b19      	ldr	r3, [pc, #100]	; (8005de4 <MX_TIM2_Init+0x98>)
 8005d80:	f44f 627a 	mov.w	r2, #4000	; 0xfa0
 8005d84:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8005d86:	4b17      	ldr	r3, [pc, #92]	; (8005de4 <MX_TIM2_Init+0x98>)
 8005d88:	2200      	movs	r2, #0
 8005d8a:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8005d8c:	4b15      	ldr	r3, [pc, #84]	; (8005de4 <MX_TIM2_Init+0x98>)
 8005d8e:	2200      	movs	r2, #0
 8005d90:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8005d92:	4814      	ldr	r0, [pc, #80]	; (8005de4 <MX_TIM2_Init+0x98>)
 8005d94:	f002 fbe0 	bl	8008558 <HAL_TIM_Base_Init>
 8005d98:	4603      	mov	r3, r0
 8005d9a:	2b00      	cmp	r3, #0
 8005d9c:	d001      	beq.n	8005da2 <MX_TIM2_Init+0x56>
  {
    Error_Handler();
 8005d9e:	f000 f89f 	bl	8005ee0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8005da2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005da6:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8005da8:	f107 0308 	add.w	r3, r7, #8
 8005dac:	4619      	mov	r1, r3
 8005dae:	480d      	ldr	r0, [pc, #52]	; (8005de4 <MX_TIM2_Init+0x98>)
 8005db0:	f002 fcc1 	bl	8008736 <HAL_TIM_ConfigClockSource>
 8005db4:	4603      	mov	r3, r0
 8005db6:	2b00      	cmp	r3, #0
 8005db8:	d001      	beq.n	8005dbe <MX_TIM2_Init+0x72>
  {
    Error_Handler();
 8005dba:	f000 f891 	bl	8005ee0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8005dbe:	2300      	movs	r3, #0
 8005dc0:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8005dc2:	2300      	movs	r3, #0
 8005dc4:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8005dc6:	463b      	mov	r3, r7
 8005dc8:	4619      	mov	r1, r3
 8005dca:	4806      	ldr	r0, [pc, #24]	; (8005de4 <MX_TIM2_Init+0x98>)
 8005dcc:	f002 feb4 	bl	8008b38 <HAL_TIMEx_MasterConfigSynchronization>
 8005dd0:	4603      	mov	r3, r0
 8005dd2:	2b00      	cmp	r3, #0
 8005dd4:	d001      	beq.n	8005dda <MX_TIM2_Init+0x8e>
  {
    Error_Handler();
 8005dd6:	f000 f883 	bl	8005ee0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8005dda:	bf00      	nop
 8005ddc:	3718      	adds	r7, #24
 8005dde:	46bd      	mov	sp, r7
 8005de0:	bd80      	pop	{r7, pc}
 8005de2:	bf00      	nop
 8005de4:	200005cc 	.word	0x200005cc

08005de8 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8005de8:	b580      	push	{r7, lr}
 8005dea:	b08a      	sub	sp, #40	; 0x28
 8005dec:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8005dee:	f107 0314 	add.w	r3, r7, #20
 8005df2:	2200      	movs	r2, #0
 8005df4:	601a      	str	r2, [r3, #0]
 8005df6:	605a      	str	r2, [r3, #4]
 8005df8:	609a      	str	r2, [r3, #8]
 8005dfa:	60da      	str	r2, [r3, #12]
 8005dfc:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8005dfe:	2300      	movs	r3, #0
 8005e00:	613b      	str	r3, [r7, #16]
 8005e02:	4b33      	ldr	r3, [pc, #204]	; (8005ed0 <MX_GPIO_Init+0xe8>)
 8005e04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005e06:	4a32      	ldr	r2, [pc, #200]	; (8005ed0 <MX_GPIO_Init+0xe8>)
 8005e08:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005e0c:	6313      	str	r3, [r2, #48]	; 0x30
 8005e0e:	4b30      	ldr	r3, [pc, #192]	; (8005ed0 <MX_GPIO_Init+0xe8>)
 8005e10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005e12:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005e16:	613b      	str	r3, [r7, #16]
 8005e18:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8005e1a:	2300      	movs	r3, #0
 8005e1c:	60fb      	str	r3, [r7, #12]
 8005e1e:	4b2c      	ldr	r3, [pc, #176]	; (8005ed0 <MX_GPIO_Init+0xe8>)
 8005e20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005e22:	4a2b      	ldr	r2, [pc, #172]	; (8005ed0 <MX_GPIO_Init+0xe8>)
 8005e24:	f043 0301 	orr.w	r3, r3, #1
 8005e28:	6313      	str	r3, [r2, #48]	; 0x30
 8005e2a:	4b29      	ldr	r3, [pc, #164]	; (8005ed0 <MX_GPIO_Init+0xe8>)
 8005e2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005e2e:	f003 0301 	and.w	r3, r3, #1
 8005e32:	60fb      	str	r3, [r7, #12]
 8005e34:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8005e36:	2300      	movs	r3, #0
 8005e38:	60bb      	str	r3, [r7, #8]
 8005e3a:	4b25      	ldr	r3, [pc, #148]	; (8005ed0 <MX_GPIO_Init+0xe8>)
 8005e3c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005e3e:	4a24      	ldr	r2, [pc, #144]	; (8005ed0 <MX_GPIO_Init+0xe8>)
 8005e40:	f043 0304 	orr.w	r3, r3, #4
 8005e44:	6313      	str	r3, [r2, #48]	; 0x30
 8005e46:	4b22      	ldr	r3, [pc, #136]	; (8005ed0 <MX_GPIO_Init+0xe8>)
 8005e48:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005e4a:	f003 0304 	and.w	r3, r3, #4
 8005e4e:	60bb      	str	r3, [r7, #8]
 8005e50:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8005e52:	2300      	movs	r3, #0
 8005e54:	607b      	str	r3, [r7, #4]
 8005e56:	4b1e      	ldr	r3, [pc, #120]	; (8005ed0 <MX_GPIO_Init+0xe8>)
 8005e58:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005e5a:	4a1d      	ldr	r2, [pc, #116]	; (8005ed0 <MX_GPIO_Init+0xe8>)
 8005e5c:	f043 0302 	orr.w	r3, r3, #2
 8005e60:	6313      	str	r3, [r2, #48]	; 0x30
 8005e62:	4b1b      	ldr	r3, [pc, #108]	; (8005ed0 <MX_GPIO_Init+0xe8>)
 8005e64:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005e66:	f003 0302 	and.w	r3, r3, #2
 8005e6a:	607b      	str	r3, [r7, #4]
 8005e6c:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5|GPIO_PIN_8|GPIO_PIN_9, GPIO_PIN_RESET);
 8005e6e:	2200      	movs	r2, #0
 8005e70:	f44f 7148 	mov.w	r1, #800	; 0x320
 8005e74:	4817      	ldr	r0, [pc, #92]	; (8005ed4 <MX_GPIO_Init+0xec>)
 8005e76:	f001 f97b 	bl	8007170 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : button_1_Pin button_2_Pin button_3_Pin button_4_Pin */
  GPIO_InitStruct.Pin = button_1_Pin|button_2_Pin|button_3_Pin|button_4_Pin;
 8005e7a:	23f0      	movs	r3, #240	; 0xf0
 8005e7c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8005e7e:	2300      	movs	r3, #0
 8005e80:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005e82:	2300      	movs	r3, #0
 8005e84:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8005e86:	f107 0314 	add.w	r3, r7, #20
 8005e8a:	4619      	mov	r1, r3
 8005e8c:	4812      	ldr	r0, [pc, #72]	; (8005ed8 <MX_GPIO_Init+0xf0>)
 8005e8e:	f000 ffbb 	bl	8006e08 <HAL_GPIO_Init>

  /*Configure GPIO pins : button_5_Pin button_6_Pin */
  GPIO_InitStruct.Pin = button_5_Pin|button_6_Pin;
 8005e92:	2330      	movs	r3, #48	; 0x30
 8005e94:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8005e96:	2300      	movs	r3, #0
 8005e98:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005e9a:	2300      	movs	r3, #0
 8005e9c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8005e9e:	f107 0314 	add.w	r3, r7, #20
 8005ea2:	4619      	mov	r1, r3
 8005ea4:	480d      	ldr	r0, [pc, #52]	; (8005edc <MX_GPIO_Init+0xf4>)
 8005ea6:	f000 ffaf 	bl	8006e08 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB5 PB8 PB9 */
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_8|GPIO_PIN_9;
 8005eaa:	f44f 7348 	mov.w	r3, #800	; 0x320
 8005eae:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8005eb0:	2301      	movs	r3, #1
 8005eb2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005eb4:	2300      	movs	r3, #0
 8005eb6:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8005eb8:	2300      	movs	r3, #0
 8005eba:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8005ebc:	f107 0314 	add.w	r3, r7, #20
 8005ec0:	4619      	mov	r1, r3
 8005ec2:	4804      	ldr	r0, [pc, #16]	; (8005ed4 <MX_GPIO_Init+0xec>)
 8005ec4:	f000 ffa0 	bl	8006e08 <HAL_GPIO_Init>

}
 8005ec8:	bf00      	nop
 8005eca:	3728      	adds	r7, #40	; 0x28
 8005ecc:	46bd      	mov	sp, r7
 8005ece:	bd80      	pop	{r7, pc}
 8005ed0:	40023800 	.word	0x40023800
 8005ed4:	40020400 	.word	0x40020400
 8005ed8:	40020000 	.word	0x40020000
 8005edc:	40020800 	.word	0x40020800

08005ee0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8005ee0:	b480      	push	{r7}
 8005ee2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8005ee4:	b672      	cpsid	i
}
 8005ee6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8005ee8:	e7fe      	b.n	8005ee8 <Error_Handler+0x8>
	...

08005eec <DEC2BCD>:
// ds1302.c
//

#include "rtc.h"

uint8_t DEC2BCD(uint8_t dec) {
 8005eec:	b480      	push	{r7}
 8005eee:	b085      	sub	sp, #20
 8005ef0:	af00      	add	r7, sp, #0
 8005ef2:	4603      	mov	r3, r0
 8005ef4:	71fb      	strb	r3, [r7, #7]
    const uint8_t tens = dec / 10;
 8005ef6:	79fb      	ldrb	r3, [r7, #7]
 8005ef8:	4a0e      	ldr	r2, [pc, #56]	; (8005f34 <DEC2BCD+0x48>)
 8005efa:	fba2 2303 	umull	r2, r3, r2, r3
 8005efe:	08db      	lsrs	r3, r3, #3
 8005f00:	73fb      	strb	r3, [r7, #15]
    const uint8_t ones = dec % 10;
 8005f02:	79fa      	ldrb	r2, [r7, #7]
 8005f04:	4b0b      	ldr	r3, [pc, #44]	; (8005f34 <DEC2BCD+0x48>)
 8005f06:	fba3 1302 	umull	r1, r3, r3, r2
 8005f0a:	08d9      	lsrs	r1, r3, #3
 8005f0c:	460b      	mov	r3, r1
 8005f0e:	009b      	lsls	r3, r3, #2
 8005f10:	440b      	add	r3, r1
 8005f12:	005b      	lsls	r3, r3, #1
 8005f14:	1ad3      	subs	r3, r2, r3
 8005f16:	73bb      	strb	r3, [r7, #14]
    return (tens << 4u) | ones;
 8005f18:	7bfb      	ldrb	r3, [r7, #15]
 8005f1a:	011b      	lsls	r3, r3, #4
 8005f1c:	b25a      	sxtb	r2, r3
 8005f1e:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8005f22:	4313      	orrs	r3, r2
 8005f24:	b25b      	sxtb	r3, r3
 8005f26:	b2db      	uxtb	r3, r3
}
 8005f28:	4618      	mov	r0, r3
 8005f2a:	3714      	adds	r7, #20
 8005f2c:	46bd      	mov	sp, r7
 8005f2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f32:	4770      	bx	lr
 8005f34:	cccccccd 	.word	0xcccccccd

08005f38 <BCD2DEC>:

uint8_t BCD2DEC(uint8_t bcd) {
 8005f38:	b480      	push	{r7}
 8005f3a:	b083      	sub	sp, #12
 8005f3c:	af00      	add	r7, sp, #0
 8005f3e:	4603      	mov	r3, r0
 8005f40:	71fb      	strb	r3, [r7, #7]
    return (10 * ((bcd & 0xF0) >> 4) + (bcd & 0x0F));
 8005f42:	79fb      	ldrb	r3, [r7, #7]
 8005f44:	091b      	lsrs	r3, r3, #4
 8005f46:	b2db      	uxtb	r3, r3
 8005f48:	461a      	mov	r2, r3
 8005f4a:	0092      	lsls	r2, r2, #2
 8005f4c:	4413      	add	r3, r2
 8005f4e:	005b      	lsls	r3, r3, #1
 8005f50:	b2da      	uxtb	r2, r3
 8005f52:	79fb      	ldrb	r3, [r7, #7]
 8005f54:	f003 030f 	and.w	r3, r3, #15
 8005f58:	b2db      	uxtb	r3, r3
 8005f5a:	4413      	add	r3, r2
 8005f5c:	b2db      	uxtb	r3, r3
}
 8005f5e:	4618      	mov	r0, r3
 8005f60:	370c      	adds	r7, #12
 8005f62:	46bd      	mov	sp, r7
 8005f64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f68:	4770      	bx	lr
	...

08005f6c <write_data_set>:

void write_data_set() {
 8005f6c:	b580      	push	{r7, lr}
 8005f6e:	af00      	add	r7, sp, #0
    HAL_GPIO_WritePin(DS1302_PIN_DAT_PORT, DS1302_PIN_DAT, GPIO_PIN_SET);
 8005f70:	2201      	movs	r2, #1
 8005f72:	f44f 7180 	mov.w	r1, #256	; 0x100
 8005f76:	4802      	ldr	r0, [pc, #8]	; (8005f80 <write_data_set+0x14>)
 8005f78:	f001 f8fa 	bl	8007170 <HAL_GPIO_WritePin>
}
 8005f7c:	bf00      	nop
 8005f7e:	bd80      	pop	{r7, pc}
 8005f80:	40020400 	.word	0x40020400

08005f84 <write_data_reset>:

void write_data_reset() {
 8005f84:	b580      	push	{r7, lr}
 8005f86:	af00      	add	r7, sp, #0
    HAL_GPIO_WritePin(DS1302_PIN_DAT_PORT, DS1302_PIN_DAT, GPIO_PIN_RESET);
 8005f88:	2200      	movs	r2, #0
 8005f8a:	f44f 7180 	mov.w	r1, #256	; 0x100
 8005f8e:	4802      	ldr	r0, [pc, #8]	; (8005f98 <write_data_reset+0x14>)
 8005f90:	f001 f8ee 	bl	8007170 <HAL_GPIO_WritePin>
}
 8005f94:	bf00      	nop
 8005f96:	bd80      	pop	{r7, pc}
 8005f98:	40020400 	.word	0x40020400

08005f9c <read_data_pin>:

/**
 * 读取 dat 针脚的数据
 * @return dat 针脚的数据
 */
uint8_t read_data_pin() {
 8005f9c:	b580      	push	{r7, lr}
 8005f9e:	af00      	add	r7, sp, #0
    if (HAL_GPIO_ReadPin(DS1302_PIN_DAT_PORT, DS1302_PIN_DAT) == GPIO_PIN_RESET) {
 8005fa0:	f44f 7180 	mov.w	r1, #256	; 0x100
 8005fa4:	4805      	ldr	r0, [pc, #20]	; (8005fbc <read_data_pin+0x20>)
 8005fa6:	f001 f8cb 	bl	8007140 <HAL_GPIO_ReadPin>
 8005faa:	4603      	mov	r3, r0
 8005fac:	2b00      	cmp	r3, #0
 8005fae:	d101      	bne.n	8005fb4 <read_data_pin+0x18>
        return 0;
 8005fb0:	2300      	movs	r3, #0
 8005fb2:	e000      	b.n	8005fb6 <read_data_pin+0x1a>
    } else {
        return 1;
 8005fb4:	2301      	movs	r3, #1
    }
}
 8005fb6:	4618      	mov	r0, r3
 8005fb8:	bd80      	pop	{r7, pc}
 8005fba:	bf00      	nop
 8005fbc:	40020400 	.word	0x40020400

08005fc0 <write_clk_set>:

void write_clk_set() {
 8005fc0:	b580      	push	{r7, lr}
 8005fc2:	af00      	add	r7, sp, #0
    HAL_GPIO_WritePin(DS1302_PIN_CLK_PORT, DS1302_PIN_CLK, GPIO_PIN_SET);
 8005fc4:	2201      	movs	r2, #1
 8005fc6:	f44f 7100 	mov.w	r1, #512	; 0x200
 8005fca:	4802      	ldr	r0, [pc, #8]	; (8005fd4 <write_clk_set+0x14>)
 8005fcc:	f001 f8d0 	bl	8007170 <HAL_GPIO_WritePin>
}
 8005fd0:	bf00      	nop
 8005fd2:	bd80      	pop	{r7, pc}
 8005fd4:	40020400 	.word	0x40020400

08005fd8 <write_clk_reset>:

void write_clk_reset() {
 8005fd8:	b580      	push	{r7, lr}
 8005fda:	af00      	add	r7, sp, #0
    HAL_GPIO_WritePin(DS1302_PIN_CLK_PORT, DS1302_PIN_CLK, GPIO_PIN_RESET);
 8005fdc:	2200      	movs	r2, #0
 8005fde:	f44f 7100 	mov.w	r1, #512	; 0x200
 8005fe2:	4802      	ldr	r0, [pc, #8]	; (8005fec <write_clk_reset+0x14>)
 8005fe4:	f001 f8c4 	bl	8007170 <HAL_GPIO_WritePin>
}
 8005fe8:	bf00      	nop
 8005fea:	bd80      	pop	{r7, pc}
 8005fec:	40020400 	.word	0x40020400

08005ff0 <write_rst_set>:

void write_rst_set() {
 8005ff0:	b580      	push	{r7, lr}
 8005ff2:	af00      	add	r7, sp, #0
    HAL_GPIO_WritePin(DS1302_PIN_RST_PORT, DS1302_PIN_RST, GPIO_PIN_SET);
 8005ff4:	2201      	movs	r2, #1
 8005ff6:	2120      	movs	r1, #32
 8005ff8:	4802      	ldr	r0, [pc, #8]	; (8006004 <write_rst_set+0x14>)
 8005ffa:	f001 f8b9 	bl	8007170 <HAL_GPIO_WritePin>
}
 8005ffe:	bf00      	nop
 8006000:	bd80      	pop	{r7, pc}
 8006002:	bf00      	nop
 8006004:	40020400 	.word	0x40020400

08006008 <write_rst_reset>:

void write_rst_reset() {
 8006008:	b580      	push	{r7, lr}
 800600a:	af00      	add	r7, sp, #0
    HAL_GPIO_WritePin(DS1302_PIN_RST_PORT, DS1302_PIN_RST, GPIO_PIN_RESET);
 800600c:	2200      	movs	r2, #0
 800600e:	2120      	movs	r1, #32
 8006010:	4802      	ldr	r0, [pc, #8]	; (800601c <write_rst_reset+0x14>)
 8006012:	f001 f8ad 	bl	8007170 <HAL_GPIO_WritePin>
}
 8006016:	bf00      	nop
 8006018:	bd80      	pop	{r7, pc}
 800601a:	bf00      	nop
 800601c:	40020400 	.word	0x40020400

08006020 <dat_pin_write_mode>:

/**
 * 修改 dat 针脚为写入模式
 */
static void dat_pin_write_mode(void) {
 8006020:	b580      	push	{r7, lr}
 8006022:	b086      	sub	sp, #24
 8006024:	af00      	add	r7, sp, #0
    GPIO_InitTypeDef GPIO_InitStructure;

    GPIO_InitStructure.Pin = DS1302_PIN_DAT;
 8006026:	f44f 7380 	mov.w	r3, #256	; 0x100
 800602a:	607b      	str	r3, [r7, #4]
    GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP;
 800602c:	2301      	movs	r3, #1
 800602e:	60bb      	str	r3, [r7, #8]
    GPIO_InitStructure.Speed = GPIO_SPEED_FREQ_LOW;
 8006030:	2300      	movs	r3, #0
 8006032:	613b      	str	r3, [r7, #16]
    HAL_GPIO_Init(DS1302_PIN_DAT_PORT, &GPIO_InitStructure);
 8006034:	1d3b      	adds	r3, r7, #4
 8006036:	4619      	mov	r1, r3
 8006038:	4804      	ldr	r0, [pc, #16]	; (800604c <dat_pin_write_mode+0x2c>)
 800603a:	f000 fee5 	bl	8006e08 <HAL_GPIO_Init>

    write_data_reset();
 800603e:	f7ff ffa1 	bl	8005f84 <write_data_reset>
}
 8006042:	bf00      	nop
 8006044:	3718      	adds	r7, #24
 8006046:	46bd      	mov	sp, r7
 8006048:	bd80      	pop	{r7, pc}
 800604a:	bf00      	nop
 800604c:	40020400 	.word	0x40020400

08006050 <dat_pin_read_mode>:

/**
 * 修改 dat 针脚为读取模式
 */
static void dat_pin_read_mode(void) {
 8006050:	b580      	push	{r7, lr}
 8006052:	b086      	sub	sp, #24
 8006054:	af00      	add	r7, sp, #0
    GPIO_InitTypeDef GPIO_InitStructure;

    GPIO_InitStructure.Pin = DS1302_PIN_DAT;
 8006056:	f44f 7380 	mov.w	r3, #256	; 0x100
 800605a:	607b      	str	r3, [r7, #4]
    GPIO_InitStructure.Mode = GPIO_MODE_INPUT;
 800605c:	2300      	movs	r3, #0
 800605e:	60bb      	str	r3, [r7, #8]
    GPIO_InitStructure.Pull = GPIO_PULLDOWN;
 8006060:	2302      	movs	r3, #2
 8006062:	60fb      	str	r3, [r7, #12]
    GPIO_InitStructure.Speed = GPIO_SPEED_FREQ_LOW;
 8006064:	2300      	movs	r3, #0
 8006066:	613b      	str	r3, [r7, #16]
    HAL_GPIO_Init(DS1302_PIN_DAT_PORT, &GPIO_InitStructure);
 8006068:	1d3b      	adds	r3, r7, #4
 800606a:	4619      	mov	r1, r3
 800606c:	4804      	ldr	r0, [pc, #16]	; (8006080 <dat_pin_read_mode+0x30>)
 800606e:	f000 fecb 	bl	8006e08 <HAL_GPIO_Init>

    write_data_reset();
 8006072:	f7ff ff87 	bl	8005f84 <write_data_reset>
}
 8006076:	bf00      	nop
 8006078:	3718      	adds	r7, #24
 800607a:	46bd      	mov	sp, r7
 800607c:	bd80      	pop	{r7, pc}
 800607e:	bf00      	nop
 8006080:	40020400 	.word	0x40020400

08006084 <ds1302_pin_init>:
/**
 * 初始化针脚
 * @param GPIOx 针脚组
 * @param GPIO_Pin 具体针脚名称
 */
void ds1302_pin_init(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin) {
 8006084:	b580      	push	{r7, lr}
 8006086:	b088      	sub	sp, #32
 8006088:	af00      	add	r7, sp, #0
 800608a:	6078      	str	r0, [r7, #4]
 800608c:	460b      	mov	r3, r1
 800608e:	807b      	strh	r3, [r7, #2]
    GPIO_InitTypeDef GPIO_InitStruct = {0};
 8006090:	f107 030c 	add.w	r3, r7, #12
 8006094:	2200      	movs	r2, #0
 8006096:	601a      	str	r2, [r3, #0]
 8006098:	605a      	str	r2, [r3, #4]
 800609a:	609a      	str	r2, [r3, #8]
 800609c:	60da      	str	r2, [r3, #12]
 800609e:	611a      	str	r2, [r3, #16]
    GPIO_InitStruct.Pin = GPIO_Pin;
 80060a0:	887b      	ldrh	r3, [r7, #2]
 80060a2:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80060a4:	2301      	movs	r3, #1
 80060a6:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80060a8:	2300      	movs	r3, #0
 80060aa:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80060ac:	2300      	movs	r3, #0
 80060ae:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(GPIOx, &GPIO_InitStruct);
 80060b0:	f107 030c 	add.w	r3, r7, #12
 80060b4:	4619      	mov	r1, r3
 80060b6:	6878      	ldr	r0, [r7, #4]
 80060b8:	f000 fea6 	bl	8006e08 <HAL_GPIO_Init>
}
 80060bc:	bf00      	nop
 80060be:	3720      	adds	r7, #32
 80060c0:	46bd      	mov	sp, r7
 80060c2:	bd80      	pop	{r7, pc}

080060c4 <DS1302_Init>:

/**
 * 初始化 DS1302 相关针脚
 */
void DS1302_Init() {
 80060c4:	b580      	push	{r7, lr}
 80060c6:	af00      	add	r7, sp, #0
    /*Configure GPIO pins : PBPin PBPin PBPin */
    ds1302_pin_init(DS1302_PIN_CLK_PORT, DS1302_PIN_CLK);
 80060c8:	f44f 7100 	mov.w	r1, #512	; 0x200
 80060cc:	4809      	ldr	r0, [pc, #36]	; (80060f4 <DS1302_Init+0x30>)
 80060ce:	f7ff ffd9 	bl	8006084 <ds1302_pin_init>
    ds1302_pin_init(DS1302_PIN_DAT_PORT, DS1302_PIN_DAT);
 80060d2:	f44f 7180 	mov.w	r1, #256	; 0x100
 80060d6:	4807      	ldr	r0, [pc, #28]	; (80060f4 <DS1302_Init+0x30>)
 80060d8:	f7ff ffd4 	bl	8006084 <ds1302_pin_init>
    ds1302_pin_init(DS1302_PIN_RST_PORT, DS1302_PIN_RST);
 80060dc:	2120      	movs	r1, #32
 80060de:	4805      	ldr	r0, [pc, #20]	; (80060f4 <DS1302_Init+0x30>)
 80060e0:	f7ff ffd0 	bl	8006084 <ds1302_pin_init>

    write_clk_reset();
 80060e4:	f7ff ff78 	bl	8005fd8 <write_clk_reset>
    write_data_reset();
 80060e8:	f7ff ff4c 	bl	8005f84 <write_data_reset>
    write_rst_reset();
 80060ec:	f7ff ff8c 	bl	8006008 <write_rst_reset>
//    uint8_t sec = ds1302_single_read(DS1302_SEC_ADD);
//    if ((sec & 0x80) != 0) {
//        ds1302_single_write(DS1302_CONTROL_ADD, 0x00); // 解除保护
//        // todo 初始化时间
//    }
}
 80060f0:	bf00      	nop
 80060f2:	bd80      	pop	{r7, pc}
 80060f4:	40020400 	.word	0x40020400

080060f8 <ds1302_byte_write>:

/**
 * 向 DS1302 写入数据
 * @param data 需要写入的数据
 */
void ds1302_byte_write(uint8_t data) {
 80060f8:	b580      	push	{r7, lr}
 80060fa:	b084      	sub	sp, #16
 80060fc:	af00      	add	r7, sp, #0
 80060fe:	4603      	mov	r3, r0
 8006100:	71fb      	strb	r3, [r7, #7]
    uint8_t detect;
    for (detect = 0x01; detect != 0; detect <<= 1) {
 8006102:	2301      	movs	r3, #1
 8006104:	73fb      	strb	r3, [r7, #15]
 8006106:	e011      	b.n	800612c <ds1302_byte_write+0x34>
        if ((data & detect) != 0) { // 对 dat 端口写入数据
 8006108:	79fa      	ldrb	r2, [r7, #7]
 800610a:	7bfb      	ldrb	r3, [r7, #15]
 800610c:	4013      	ands	r3, r2
 800610e:	b2db      	uxtb	r3, r3
 8006110:	2b00      	cmp	r3, #0
 8006112:	d002      	beq.n	800611a <ds1302_byte_write+0x22>
            write_data_set();
 8006114:	f7ff ff2a 	bl	8005f6c <write_data_set>
 8006118:	e001      	b.n	800611e <ds1302_byte_write+0x26>
        } else {
            write_data_reset();
 800611a:	f7ff ff33 	bl	8005f84 <write_data_reset>
        }

        write_clk_set(); // 拉高 clk 时钟
 800611e:	f7ff ff4f 	bl	8005fc0 <write_clk_set>
        write_clk_reset(); // 拉低 clk 时钟
 8006122:	f7ff ff59 	bl	8005fd8 <write_clk_reset>
    for (detect = 0x01; detect != 0; detect <<= 1) {
 8006126:	7bfb      	ldrb	r3, [r7, #15]
 8006128:	005b      	lsls	r3, r3, #1
 800612a:	73fb      	strb	r3, [r7, #15]
 800612c:	7bfb      	ldrb	r3, [r7, #15]
 800612e:	2b00      	cmp	r3, #0
 8006130:	d1ea      	bne.n	8006108 <ds1302_byte_write+0x10>
    }
    write_data_set();
 8006132:	f7ff ff1b 	bl	8005f6c <write_data_set>
}
 8006136:	bf00      	nop
 8006138:	3710      	adds	r7, #16
 800613a:	46bd      	mov	sp, r7
 800613c:	bd80      	pop	{r7, pc}

0800613e <ds1302_byte_read>:

/**
 * 从 DS1302 读取数据
 * @return 读取出的数据
 */
uint8_t ds1302_byte_read() {
 800613e:	b580      	push	{r7, lr}
 8006140:	b082      	sub	sp, #8
 8006142:	af00      	add	r7, sp, #0
    uint8_t data = 0;
 8006144:	2300      	movs	r3, #0
 8006146:	71fb      	strb	r3, [r7, #7]
    uint8_t detect;
    for (detect = 0x01; detect != 0; detect <<= 1) {
 8006148:	2301      	movs	r3, #1
 800614a:	71bb      	strb	r3, [r7, #6]
 800614c:	e00f      	b.n	800616e <ds1302_byte_read+0x30>
        if (read_data_pin() != 0) { // 读取 dat 端口数据
 800614e:	f7ff ff25 	bl	8005f9c <read_data_pin>
 8006152:	4603      	mov	r3, r0
 8006154:	2b00      	cmp	r3, #0
 8006156:	d003      	beq.n	8006160 <ds1302_byte_read+0x22>
            data |= detect;
 8006158:	79fa      	ldrb	r2, [r7, #7]
 800615a:	79bb      	ldrb	r3, [r7, #6]
 800615c:	4313      	orrs	r3, r2
 800615e:	71fb      	strb	r3, [r7, #7]
        }

        write_clk_set(); // 拉高 clk 时钟
 8006160:	f7ff ff2e 	bl	8005fc0 <write_clk_set>
        write_clk_reset(); // 拉低 clk 时钟
 8006164:	f7ff ff38 	bl	8005fd8 <write_clk_reset>
    for (detect = 0x01; detect != 0; detect <<= 1) {
 8006168:	79bb      	ldrb	r3, [r7, #6]
 800616a:	005b      	lsls	r3, r3, #1
 800616c:	71bb      	strb	r3, [r7, #6]
 800616e:	79bb      	ldrb	r3, [r7, #6]
 8006170:	2b00      	cmp	r3, #0
 8006172:	d1ec      	bne.n	800614e <ds1302_byte_read+0x10>
    }
    return data;
 8006174:	79fb      	ldrb	r3, [r7, #7]
}
 8006176:	4618      	mov	r0, r3
 8006178:	3708      	adds	r7, #8
 800617a:	46bd      	mov	sp, r7
 800617c:	bd80      	pop	{r7, pc}

0800617e <ds1302_single_write>:
/**
 * 向 DS1302 写入一次数据
 * @param addr 寄存器地址
 * @param data 需要写入的数据
 */
void ds1302_single_write(uint8_t addr, uint8_t data) {
 800617e:	b580      	push	{r7, lr}
 8006180:	b082      	sub	sp, #8
 8006182:	af00      	add	r7, sp, #0
 8006184:	4603      	mov	r3, r0
 8006186:	460a      	mov	r2, r1
 8006188:	71fb      	strb	r3, [r7, #7]
 800618a:	4613      	mov	r3, r2
 800618c:	71bb      	strb	r3, [r7, #6]
    write_rst_reset();
 800618e:	f7ff ff3b 	bl	8006008 <write_rst_reset>
    write_clk_reset();
 8006192:	f7ff ff21 	bl	8005fd8 <write_clk_reset>

    write_rst_set(); // 拉高 rst 可以开始使用 DS1302
 8006196:	f7ff ff2b 	bl	8005ff0 <write_rst_set>

    dat_pin_write_mode(); // 切换 dat 端口为输出模式
 800619a:	f7ff ff41 	bl	8006020 <dat_pin_write_mode>

    ds1302_byte_write(addr); // 告诉 DS1302 要写入的寄存器地址
 800619e:	79fb      	ldrb	r3, [r7, #7]
 80061a0:	4618      	mov	r0, r3
 80061a2:	f7ff ffa9 	bl	80060f8 <ds1302_byte_write>
    ds1302_byte_write(data); // 告诉 DS1302 要写入的内容
 80061a6:	79bb      	ldrb	r3, [r7, #6]
 80061a8:	4618      	mov	r0, r3
 80061aa:	f7ff ffa5 	bl	80060f8 <ds1302_byte_write>

    write_rst_reset();
 80061ae:	f7ff ff2b 	bl	8006008 <write_rst_reset>
}
 80061b2:	bf00      	nop
 80061b4:	3708      	adds	r7, #8
 80061b6:	46bd      	mov	sp, r7
 80061b8:	bd80      	pop	{r7, pc}

080061ba <ds1302_single_read>:
/**
 * 从 DS1302 读取一次数据
 * @param addr 寄存器地址
 * @return data 需要读取的数据
 */
uint8_t ds1302_single_read(uint8_t addr) {
 80061ba:	b580      	push	{r7, lr}
 80061bc:	b084      	sub	sp, #16
 80061be:	af00      	add	r7, sp, #0
 80061c0:	4603      	mov	r3, r0
 80061c2:	71fb      	strb	r3, [r7, #7]
    addr = addr | 0x01; // 变更寄存器地址
 80061c4:	79fb      	ldrb	r3, [r7, #7]
 80061c6:	f043 0301 	orr.w	r3, r3, #1
 80061ca:	71fb      	strb	r3, [r7, #7]

    write_rst_reset();
 80061cc:	f7ff ff1c 	bl	8006008 <write_rst_reset>
    write_clk_reset();
 80061d0:	f7ff ff02 	bl	8005fd8 <write_clk_reset>

    write_rst_set();// 拉高 rst 可以开始使用 DS1302
 80061d4:	f7ff ff0c 	bl	8005ff0 <write_rst_set>

    dat_pin_write_mode();// 切换 dat 端口为输出模式
 80061d8:	f7ff ff22 	bl	8006020 <dat_pin_write_mode>

    ds1302_byte_write(addr);// 告诉 DS1302 要读取的寄存器地址
 80061dc:	79fb      	ldrb	r3, [r7, #7]
 80061de:	4618      	mov	r0, r3
 80061e0:	f7ff ff8a 	bl	80060f8 <ds1302_byte_write>

    dat_pin_read_mode();// 切换 dat 端口为输入模式
 80061e4:	f7ff ff34 	bl	8006050 <dat_pin_read_mode>

    uint8_t data = ds1302_byte_read();// 从 DS1302 读取数据
 80061e8:	f7ff ffa9 	bl	800613e <ds1302_byte_read>
 80061ec:	4603      	mov	r3, r0
 80061ee:	73fb      	strb	r3, [r7, #15]
    write_rst_reset();
 80061f0:	f7ff ff0a 	bl	8006008 <write_rst_reset>

    return data;
 80061f4:	7bfb      	ldrb	r3, [r7, #15]
}
 80061f6:	4618      	mov	r0, r3
 80061f8:	3710      	adds	r7, #16
 80061fa:	46bd      	mov	sp, r7
 80061fc:	bd80      	pop	{r7, pc}

080061fe <convert_time_struct>:
/**
 * 校验并转换 timeStruct
 * @param timeStruct
 * @return
 */
Time_Struct convert_time_struct(Time_Struct *timeStruct) {
 80061fe:	b5b0      	push	{r4, r5, r7, lr}
 8006200:	b084      	sub	sp, #16
 8006202:	af00      	add	r7, sp, #0
 8006204:	6078      	str	r0, [r7, #4]
 8006206:	6039      	str	r1, [r7, #0]
    if (timeStruct->sec < 0 || timeStruct->sec > 59) {
 8006208:	683b      	ldr	r3, [r7, #0]
 800620a:	7c9b      	ldrb	r3, [r3, #18]
 800620c:	2b3b      	cmp	r3, #59	; 0x3b
 800620e:	d902      	bls.n	8006216 <convert_time_struct+0x18>
        timeStruct->sec = 0;
 8006210:	683b      	ldr	r3, [r7, #0]
 8006212:	2200      	movs	r2, #0
 8006214:	749a      	strb	r2, [r3, #18]
    }
    if (timeStruct->min < 0 || timeStruct->min > 59) {
 8006216:	683b      	ldr	r3, [r7, #0]
 8006218:	7c5b      	ldrb	r3, [r3, #17]
 800621a:	2b3b      	cmp	r3, #59	; 0x3b
 800621c:	d902      	bls.n	8006224 <convert_time_struct+0x26>
        timeStruct->min = 0;
 800621e:	683b      	ldr	r3, [r7, #0]
 8006220:	2200      	movs	r2, #0
 8006222:	745a      	strb	r2, [r3, #17]
    }
    if (timeStruct->isHourClock24) {
 8006224:	683b      	ldr	r3, [r7, #0]
 8006226:	689b      	ldr	r3, [r3, #8]
 8006228:	2b00      	cmp	r3, #0
 800622a:	d007      	beq.n	800623c <convert_time_struct+0x3e>
        if (timeStruct->hour < 0 || timeStruct->hour > 23) {
 800622c:	683b      	ldr	r3, [r7, #0]
 800622e:	7c1b      	ldrb	r3, [r3, #16]
 8006230:	2b17      	cmp	r3, #23
 8006232:	d90e      	bls.n	8006252 <convert_time_struct+0x54>
            timeStruct->hour = 0;
 8006234:	683b      	ldr	r3, [r7, #0]
 8006236:	2200      	movs	r2, #0
 8006238:	741a      	strb	r2, [r3, #16]
 800623a:	e00a      	b.n	8006252 <convert_time_struct+0x54>
        }
    } else {
        if (timeStruct->hour < 1 || timeStruct->hour > 12) {
 800623c:	683b      	ldr	r3, [r7, #0]
 800623e:	7c1b      	ldrb	r3, [r3, #16]
 8006240:	2b00      	cmp	r3, #0
 8006242:	d003      	beq.n	800624c <convert_time_struct+0x4e>
 8006244:	683b      	ldr	r3, [r7, #0]
 8006246:	7c1b      	ldrb	r3, [r3, #16]
 8006248:	2b0c      	cmp	r3, #12
 800624a:	d902      	bls.n	8006252 <convert_time_struct+0x54>
            timeStruct->hour = 1;
 800624c:	683b      	ldr	r3, [r7, #0]
 800624e:	2201      	movs	r2, #1
 8006250:	741a      	strb	r2, [r3, #16]
        }
    }
    if (timeStruct->date < 1 || timeStruct->date > 31) {
 8006252:	683b      	ldr	r3, [r7, #0]
 8006254:	78db      	ldrb	r3, [r3, #3]
 8006256:	2b00      	cmp	r3, #0
 8006258:	d003      	beq.n	8006262 <convert_time_struct+0x64>
 800625a:	683b      	ldr	r3, [r7, #0]
 800625c:	78db      	ldrb	r3, [r3, #3]
 800625e:	2b1f      	cmp	r3, #31
 8006260:	d902      	bls.n	8006268 <convert_time_struct+0x6a>
        timeStruct->date = 1;
 8006262:	683b      	ldr	r3, [r7, #0]
 8006264:	2201      	movs	r2, #1
 8006266:	70da      	strb	r2, [r3, #3]
    }
    if (timeStruct->day < 1 || timeStruct->day > 7) {
 8006268:	683b      	ldr	r3, [r7, #0]
 800626a:	791b      	ldrb	r3, [r3, #4]
 800626c:	2b00      	cmp	r3, #0
 800626e:	d003      	beq.n	8006278 <convert_time_struct+0x7a>
 8006270:	683b      	ldr	r3, [r7, #0]
 8006272:	791b      	ldrb	r3, [r3, #4]
 8006274:	2b07      	cmp	r3, #7
 8006276:	d902      	bls.n	800627e <convert_time_struct+0x80>
        timeStruct->day = 1;
 8006278:	683b      	ldr	r3, [r7, #0]
 800627a:	2201      	movs	r2, #1
 800627c:	711a      	strb	r2, [r3, #4]
    }
    if (timeStruct->month < 1 || timeStruct->month > 12) {
 800627e:	683b      	ldr	r3, [r7, #0]
 8006280:	789b      	ldrb	r3, [r3, #2]
 8006282:	2b00      	cmp	r3, #0
 8006284:	d003      	beq.n	800628e <convert_time_struct+0x90>
 8006286:	683b      	ldr	r3, [r7, #0]
 8006288:	789b      	ldrb	r3, [r3, #2]
 800628a:	2b0c      	cmp	r3, #12
 800628c:	d902      	bls.n	8006294 <convert_time_struct+0x96>
        timeStruct->month = 1;
 800628e:	683b      	ldr	r3, [r7, #0]
 8006290:	2201      	movs	r2, #1
 8006292:	709a      	strb	r2, [r3, #2]
    }
    if (timeStruct->year < 2000 || timeStruct->year > 2099) {
 8006294:	683b      	ldr	r3, [r7, #0]
 8006296:	881b      	ldrh	r3, [r3, #0]
 8006298:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 800629c:	d305      	bcc.n	80062aa <convert_time_struct+0xac>
 800629e:	683b      	ldr	r3, [r7, #0]
 80062a0:	881b      	ldrh	r3, [r3, #0]
 80062a2:	f640 0233 	movw	r2, #2099	; 0x833
 80062a6:	4293      	cmp	r3, r2
 80062a8:	d903      	bls.n	80062b2 <convert_time_struct+0xb4>
        timeStruct->year = 00;
 80062aa:	683b      	ldr	r3, [r7, #0]
 80062ac:	2200      	movs	r2, #0
 80062ae:	801a      	strh	r2, [r3, #0]
 80062b0:	e006      	b.n	80062c0 <convert_time_struct+0xc2>
    } else {
        timeStruct->year -= 2000;
 80062b2:	683b      	ldr	r3, [r7, #0]
 80062b4:	881b      	ldrh	r3, [r3, #0]
 80062b6:	f5a3 63fa 	sub.w	r3, r3, #2000	; 0x7d0
 80062ba:	b29a      	uxth	r2, r3
 80062bc:	683b      	ldr	r3, [r7, #0]
 80062be:	801a      	strh	r2, [r3, #0]
    }

    uint8_t hour = 0;
 80062c0:	2300      	movs	r3, #0
 80062c2:	73fb      	strb	r3, [r7, #15]
    if (timeStruct->isHourClock24) {
 80062c4:	683b      	ldr	r3, [r7, #0]
 80062c6:	689b      	ldr	r3, [r3, #8]
 80062c8:	2b00      	cmp	r3, #0
 80062ca:	d00e      	beq.n	80062ea <convert_time_struct+0xec>
        hour |= DEC2BCD(timeStruct->hour) & 0x3F;
 80062cc:	683b      	ldr	r3, [r7, #0]
 80062ce:	7c1b      	ldrb	r3, [r3, #16]
 80062d0:	4618      	mov	r0, r3
 80062d2:	f7ff fe0b 	bl	8005eec <DEC2BCD>
 80062d6:	4603      	mov	r3, r0
 80062d8:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80062dc:	b25a      	sxtb	r2, r3
 80062de:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80062e2:	4313      	orrs	r3, r2
 80062e4:	b25b      	sxtb	r3, r3
 80062e6:	73fb      	strb	r3, [r7, #15]
 80062e8:	e019      	b.n	800631e <convert_time_struct+0x120>
    } else {
        hour |= 0x80;
 80062ea:	7bfb      	ldrb	r3, [r7, #15]
 80062ec:	f063 037f 	orn	r3, r3, #127	; 0x7f
 80062f0:	73fb      	strb	r3, [r7, #15]
        if (!timeStruct->isAm) {
 80062f2:	683b      	ldr	r3, [r7, #0]
 80062f4:	68db      	ldr	r3, [r3, #12]
 80062f6:	2b00      	cmp	r3, #0
 80062f8:	d103      	bne.n	8006302 <convert_time_struct+0x104>
            hour |= 0x20;
 80062fa:	7bfb      	ldrb	r3, [r7, #15]
 80062fc:	f043 0320 	orr.w	r3, r3, #32
 8006300:	73fb      	strb	r3, [r7, #15]
        }
        hour |= DEC2BCD(timeStruct->hour) & 0x1F;
 8006302:	683b      	ldr	r3, [r7, #0]
 8006304:	7c1b      	ldrb	r3, [r3, #16]
 8006306:	4618      	mov	r0, r3
 8006308:	f7ff fdf0 	bl	8005eec <DEC2BCD>
 800630c:	4603      	mov	r3, r0
 800630e:	f003 031f 	and.w	r3, r3, #31
 8006312:	b25a      	sxtb	r2, r3
 8006314:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8006318:	4313      	orrs	r3, r2
 800631a:	b25b      	sxtb	r3, r3
 800631c:	73fb      	strb	r3, [r7, #15]
    }
    timeStruct->hour = hour;
 800631e:	683b      	ldr	r3, [r7, #0]
 8006320:	7bfa      	ldrb	r2, [r7, #15]
 8006322:	741a      	strb	r2, [r3, #16]

    return *timeStruct;
 8006324:	687a      	ldr	r2, [r7, #4]
 8006326:	683b      	ldr	r3, [r7, #0]
 8006328:	4614      	mov	r4, r2
 800632a:	461d      	mov	r5, r3
 800632c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800632e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006330:	682b      	ldr	r3, [r5, #0]
 8006332:	6023      	str	r3, [r4, #0]
}
 8006334:	6878      	ldr	r0, [r7, #4]
 8006336:	3710      	adds	r7, #16
 8006338:	46bd      	mov	sp, r7
 800633a:	bdb0      	pop	{r4, r5, r7, pc}

0800633c <DS1302_SetTime_Struct>:

void DS1302_SetTime_Struct(Time_Struct *timeStruct) {
 800633c:	b580      	push	{r7, lr}
 800633e:	b088      	sub	sp, #32
 8006340:	af00      	add	r7, sp, #0
 8006342:	6078      	str	r0, [r7, #4]
    Time_Struct time = convert_time_struct(timeStruct);
 8006344:	f107 030c 	add.w	r3, r7, #12
 8006348:	6879      	ldr	r1, [r7, #4]
 800634a:	4618      	mov	r0, r3
 800634c:	f7ff ff57 	bl	80061fe <convert_time_struct>

    ds1302_single_write(DS1302_CONTROL_ADD, 0x00); // 解除 DS1302 写入保护
 8006350:	2100      	movs	r1, #0
 8006352:	208e      	movs	r0, #142	; 0x8e
 8006354:	f7ff ff13 	bl	800617e <ds1302_single_write>

    ds1302_single_write(DS1302_YEAR_ADD, DEC2BCD(time.year));
 8006358:	89bb      	ldrh	r3, [r7, #12]
 800635a:	b2db      	uxtb	r3, r3
 800635c:	4618      	mov	r0, r3
 800635e:	f7ff fdc5 	bl	8005eec <DEC2BCD>
 8006362:	4603      	mov	r3, r0
 8006364:	4619      	mov	r1, r3
 8006366:	208c      	movs	r0, #140	; 0x8c
 8006368:	f7ff ff09 	bl	800617e <ds1302_single_write>
    ds1302_single_write(DS1302_MONTH_ADD, DEC2BCD(time.month));
 800636c:	7bbb      	ldrb	r3, [r7, #14]
 800636e:	4618      	mov	r0, r3
 8006370:	f7ff fdbc 	bl	8005eec <DEC2BCD>
 8006374:	4603      	mov	r3, r0
 8006376:	4619      	mov	r1, r3
 8006378:	2088      	movs	r0, #136	; 0x88
 800637a:	f7ff ff00 	bl	800617e <ds1302_single_write>
    ds1302_single_write(DS1302_DAY_ADD, DEC2BCD(time.day));
 800637e:	7c3b      	ldrb	r3, [r7, #16]
 8006380:	4618      	mov	r0, r3
 8006382:	f7ff fdb3 	bl	8005eec <DEC2BCD>
 8006386:	4603      	mov	r3, r0
 8006388:	4619      	mov	r1, r3
 800638a:	208a      	movs	r0, #138	; 0x8a
 800638c:	f7ff fef7 	bl	800617e <ds1302_single_write>
    ds1302_single_write(DS1302_DATE_ADD, DEC2BCD(time.date));
 8006390:	7bfb      	ldrb	r3, [r7, #15]
 8006392:	4618      	mov	r0, r3
 8006394:	f7ff fdaa 	bl	8005eec <DEC2BCD>
 8006398:	4603      	mov	r3, r0
 800639a:	4619      	mov	r1, r3
 800639c:	2086      	movs	r0, #134	; 0x86
 800639e:	f7ff feee 	bl	800617e <ds1302_single_write>
    ds1302_single_write(DS1302_HR_ADD, time.hour);
 80063a2:	7f3b      	ldrb	r3, [r7, #28]
 80063a4:	4619      	mov	r1, r3
 80063a6:	2084      	movs	r0, #132	; 0x84
 80063a8:	f7ff fee9 	bl	800617e <ds1302_single_write>
    ds1302_single_write(DS1302_MIN_ADD, DEC2BCD(time.min));
 80063ac:	7f7b      	ldrb	r3, [r7, #29]
 80063ae:	4618      	mov	r0, r3
 80063b0:	f7ff fd9c 	bl	8005eec <DEC2BCD>
 80063b4:	4603      	mov	r3, r0
 80063b6:	4619      	mov	r1, r3
 80063b8:	2082      	movs	r0, #130	; 0x82
 80063ba:	f7ff fee0 	bl	800617e <ds1302_single_write>
    ds1302_single_write(DS1302_SEC_ADD, DEC2BCD(time.sec & 0x7f));
 80063be:	7fbb      	ldrb	r3, [r7, #30]
 80063c0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80063c4:	b2db      	uxtb	r3, r3
 80063c6:	4618      	mov	r0, r3
 80063c8:	f7ff fd90 	bl	8005eec <DEC2BCD>
 80063cc:	4603      	mov	r3, r0
 80063ce:	4619      	mov	r1, r3
 80063d0:	2080      	movs	r0, #128	; 0x80
 80063d2:	f7ff fed4 	bl	800617e <ds1302_single_write>

    ds1302_single_write(DS1302_CONTROL_ADD, 0x80); // 设置 DS1302 写入保护
 80063d6:	2180      	movs	r1, #128	; 0x80
 80063d8:	208e      	movs	r0, #142	; 0x8e
 80063da:	f7ff fed0 	bl	800617e <ds1302_single_write>
}
 80063de:	bf00      	nop
 80063e0:	3720      	adds	r7, #32
 80063e2:	46bd      	mov	sp, r7
 80063e4:	bd80      	pop	{r7, pc}

080063e6 <DS1302_ReadTime_Struct>:

Time_Struct DS1302_ReadTime_Struct() {
 80063e6:	b5b0      	push	{r4, r5, r7, lr}
 80063e8:	b088      	sub	sp, #32
 80063ea:	af00      	add	r7, sp, #0
 80063ec:	6078      	str	r0, [r7, #4]
    Time_Struct timeStruct;
    uint8_t tmp;

    tmp = ds1302_single_read(DS1302_YEAR_ADD);
 80063ee:	208c      	movs	r0, #140	; 0x8c
 80063f0:	f7ff fee3 	bl	80061ba <ds1302_single_read>
 80063f4:	4603      	mov	r3, r0
 80063f6:	77fb      	strb	r3, [r7, #31]
    timeStruct.year = BCD2DEC(tmp) + 2000;
 80063f8:	7ffb      	ldrb	r3, [r7, #31]
 80063fa:	4618      	mov	r0, r3
 80063fc:	f7ff fd9c 	bl	8005f38 <BCD2DEC>
 8006400:	4603      	mov	r3, r0
 8006402:	b29b      	uxth	r3, r3
 8006404:	f503 63fa 	add.w	r3, r3, #2000	; 0x7d0
 8006408:	b29b      	uxth	r3, r3
 800640a:	813b      	strh	r3, [r7, #8]
    tmp = ds1302_single_read(DS1302_MONTH_ADD);
 800640c:	2088      	movs	r0, #136	; 0x88
 800640e:	f7ff fed4 	bl	80061ba <ds1302_single_read>
 8006412:	4603      	mov	r3, r0
 8006414:	77fb      	strb	r3, [r7, #31]
    timeStruct.month = BCD2DEC(tmp);
 8006416:	7ffb      	ldrb	r3, [r7, #31]
 8006418:	4618      	mov	r0, r3
 800641a:	f7ff fd8d 	bl	8005f38 <BCD2DEC>
 800641e:	4603      	mov	r3, r0
 8006420:	72bb      	strb	r3, [r7, #10]
    tmp = ds1302_single_read(DS1302_DAY_ADD);
 8006422:	208a      	movs	r0, #138	; 0x8a
 8006424:	f7ff fec9 	bl	80061ba <ds1302_single_read>
 8006428:	4603      	mov	r3, r0
 800642a:	77fb      	strb	r3, [r7, #31]
    timeStruct.day = BCD2DEC(tmp);
 800642c:	7ffb      	ldrb	r3, [r7, #31]
 800642e:	4618      	mov	r0, r3
 8006430:	f7ff fd82 	bl	8005f38 <BCD2DEC>
 8006434:	4603      	mov	r3, r0
 8006436:	733b      	strb	r3, [r7, #12]
    tmp = ds1302_single_read(DS1302_DATE_ADD);
 8006438:	2086      	movs	r0, #134	; 0x86
 800643a:	f7ff febe 	bl	80061ba <ds1302_single_read>
 800643e:	4603      	mov	r3, r0
 8006440:	77fb      	strb	r3, [r7, #31]
    timeStruct.date = BCD2DEC(tmp);
 8006442:	7ffb      	ldrb	r3, [r7, #31]
 8006444:	4618      	mov	r0, r3
 8006446:	f7ff fd77 	bl	8005f38 <BCD2DEC>
 800644a:	4603      	mov	r3, r0
 800644c:	72fb      	strb	r3, [r7, #11]
    uint8_t hour = ds1302_single_read(DS1302_HR_ADD);
 800644e:	2084      	movs	r0, #132	; 0x84
 8006450:	f7ff feb3 	bl	80061ba <ds1302_single_read>
 8006454:	4603      	mov	r3, r0
 8006456:	77bb      	strb	r3, [r7, #30]
    tmp = ds1302_single_read(DS1302_MIN_ADD);
 8006458:	2082      	movs	r0, #130	; 0x82
 800645a:	f7ff feae 	bl	80061ba <ds1302_single_read>
 800645e:	4603      	mov	r3, r0
 8006460:	77fb      	strb	r3, [r7, #31]
    timeStruct.min = BCD2DEC(tmp);
 8006462:	7ffb      	ldrb	r3, [r7, #31]
 8006464:	4618      	mov	r0, r3
 8006466:	f7ff fd67 	bl	8005f38 <BCD2DEC>
 800646a:	4603      	mov	r3, r0
 800646c:	767b      	strb	r3, [r7, #25]
    tmp = ds1302_single_read(DS1302_SEC_ADD) & 0x7f;
 800646e:	2080      	movs	r0, #128	; 0x80
 8006470:	f7ff fea3 	bl	80061ba <ds1302_single_read>
 8006474:	4603      	mov	r3, r0
 8006476:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800647a:	77fb      	strb	r3, [r7, #31]
    timeStruct.sec = BCD2DEC(tmp);
 800647c:	7ffb      	ldrb	r3, [r7, #31]
 800647e:	4618      	mov	r0, r3
 8006480:	f7ff fd5a 	bl	8005f38 <BCD2DEC>
 8006484:	4603      	mov	r3, r0
 8006486:	76bb      	strb	r3, [r7, #26]
    timeStruct.isAm = FALSE;
 8006488:	2300      	movs	r3, #0
 800648a:	617b      	str	r3, [r7, #20]

    if (hour & 0x80) {
 800648c:	f997 301e 	ldrsb.w	r3, [r7, #30]
 8006490:	2b00      	cmp	r3, #0
 8006492:	da15      	bge.n	80064c0 <DS1302_ReadTime_Struct+0xda>
        timeStruct.isHourClock24 = FALSE;
 8006494:	2300      	movs	r3, #0
 8006496:	613b      	str	r3, [r7, #16]
        if (hour & 0x20) {
 8006498:	7fbb      	ldrb	r3, [r7, #30]
 800649a:	f003 0320 	and.w	r3, r3, #32
 800649e:	2b00      	cmp	r3, #0
 80064a0:	d002      	beq.n	80064a8 <DS1302_ReadTime_Struct+0xc2>
            timeStruct.isAm = FALSE;
 80064a2:	2300      	movs	r3, #0
 80064a4:	617b      	str	r3, [r7, #20]
 80064a6:	e001      	b.n	80064ac <DS1302_ReadTime_Struct+0xc6>
        } else {
            timeStruct.isAm = TRUE;
 80064a8:	2301      	movs	r3, #1
 80064aa:	617b      	str	r3, [r7, #20]
        }
        timeStruct.hour = BCD2DEC(hour & 0x1F);
 80064ac:	7fbb      	ldrb	r3, [r7, #30]
 80064ae:	f003 031f 	and.w	r3, r3, #31
 80064b2:	b2db      	uxtb	r3, r3
 80064b4:	4618      	mov	r0, r3
 80064b6:	f7ff fd3f 	bl	8005f38 <BCD2DEC>
 80064ba:	4603      	mov	r3, r0
 80064bc:	763b      	strb	r3, [r7, #24]
 80064be:	e00a      	b.n	80064d6 <DS1302_ReadTime_Struct+0xf0>
    } else {
        timeStruct.isHourClock24 = TRUE;
 80064c0:	2301      	movs	r3, #1
 80064c2:	613b      	str	r3, [r7, #16]
        timeStruct.hour = BCD2DEC((hour & 0x1F) | (hour & 0x20));
 80064c4:	7fbb      	ldrb	r3, [r7, #30]
 80064c6:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80064ca:	b2db      	uxtb	r3, r3
 80064cc:	4618      	mov	r0, r3
 80064ce:	f7ff fd33 	bl	8005f38 <BCD2DEC>
 80064d2:	4603      	mov	r3, r0
 80064d4:	763b      	strb	r3, [r7, #24]
    }

    return timeStruct;
 80064d6:	687b      	ldr	r3, [r7, #4]
 80064d8:	461d      	mov	r5, r3
 80064da:	f107 0408 	add.w	r4, r7, #8
 80064de:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80064e0:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80064e2:	6823      	ldr	r3, [r4, #0]
 80064e4:	602b      	str	r3, [r5, #0]
}
 80064e6:	6878      	ldr	r0, [r7, #4]
 80064e8:	3720      	adds	r7, #32
 80064ea:	46bd      	mov	sp, r7
 80064ec:	bdb0      	pop	{r4, r5, r7, pc}
	...

080064f0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80064f0:	b480      	push	{r7}
 80064f2:	b083      	sub	sp, #12
 80064f4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80064f6:	2300      	movs	r3, #0
 80064f8:	607b      	str	r3, [r7, #4]
 80064fa:	4b10      	ldr	r3, [pc, #64]	; (800653c <HAL_MspInit+0x4c>)
 80064fc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80064fe:	4a0f      	ldr	r2, [pc, #60]	; (800653c <HAL_MspInit+0x4c>)
 8006500:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8006504:	6453      	str	r3, [r2, #68]	; 0x44
 8006506:	4b0d      	ldr	r3, [pc, #52]	; (800653c <HAL_MspInit+0x4c>)
 8006508:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800650a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800650e:	607b      	str	r3, [r7, #4]
 8006510:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8006512:	2300      	movs	r3, #0
 8006514:	603b      	str	r3, [r7, #0]
 8006516:	4b09      	ldr	r3, [pc, #36]	; (800653c <HAL_MspInit+0x4c>)
 8006518:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800651a:	4a08      	ldr	r2, [pc, #32]	; (800653c <HAL_MspInit+0x4c>)
 800651c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8006520:	6413      	str	r3, [r2, #64]	; 0x40
 8006522:	4b06      	ldr	r3, [pc, #24]	; (800653c <HAL_MspInit+0x4c>)
 8006524:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006526:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800652a:	603b      	str	r3, [r7, #0]
 800652c:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800652e:	bf00      	nop
 8006530:	370c      	adds	r7, #12
 8006532:	46bd      	mov	sp, r7
 8006534:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006538:	4770      	bx	lr
 800653a:	bf00      	nop
 800653c:	40023800 	.word	0x40023800

08006540 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8006540:	b580      	push	{r7, lr}
 8006542:	b08a      	sub	sp, #40	; 0x28
 8006544:	af00      	add	r7, sp, #0
 8006546:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8006548:	f107 0314 	add.w	r3, r7, #20
 800654c:	2200      	movs	r2, #0
 800654e:	601a      	str	r2, [r3, #0]
 8006550:	605a      	str	r2, [r3, #4]
 8006552:	609a      	str	r2, [r3, #8]
 8006554:	60da      	str	r2, [r3, #12]
 8006556:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C1)
 8006558:	687b      	ldr	r3, [r7, #4]
 800655a:	681b      	ldr	r3, [r3, #0]
 800655c:	4a19      	ldr	r2, [pc, #100]	; (80065c4 <HAL_I2C_MspInit+0x84>)
 800655e:	4293      	cmp	r3, r2
 8006560:	d12b      	bne.n	80065ba <HAL_I2C_MspInit+0x7a>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8006562:	2300      	movs	r3, #0
 8006564:	613b      	str	r3, [r7, #16]
 8006566:	4b18      	ldr	r3, [pc, #96]	; (80065c8 <HAL_I2C_MspInit+0x88>)
 8006568:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800656a:	4a17      	ldr	r2, [pc, #92]	; (80065c8 <HAL_I2C_MspInit+0x88>)
 800656c:	f043 0302 	orr.w	r3, r3, #2
 8006570:	6313      	str	r3, [r2, #48]	; 0x30
 8006572:	4b15      	ldr	r3, [pc, #84]	; (80065c8 <HAL_I2C_MspInit+0x88>)
 8006574:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006576:	f003 0302 	and.w	r3, r3, #2
 800657a:	613b      	str	r3, [r7, #16]
 800657c:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800657e:	23c0      	movs	r3, #192	; 0xc0
 8006580:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8006582:	2312      	movs	r3, #18
 8006584:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006586:	2300      	movs	r3, #0
 8006588:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800658a:	2303      	movs	r3, #3
 800658c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 800658e:	2304      	movs	r3, #4
 8006590:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8006592:	f107 0314 	add.w	r3, r7, #20
 8006596:	4619      	mov	r1, r3
 8006598:	480c      	ldr	r0, [pc, #48]	; (80065cc <HAL_I2C_MspInit+0x8c>)
 800659a:	f000 fc35 	bl	8006e08 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 800659e:	2300      	movs	r3, #0
 80065a0:	60fb      	str	r3, [r7, #12]
 80065a2:	4b09      	ldr	r3, [pc, #36]	; (80065c8 <HAL_I2C_MspInit+0x88>)
 80065a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80065a6:	4a08      	ldr	r2, [pc, #32]	; (80065c8 <HAL_I2C_MspInit+0x88>)
 80065a8:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80065ac:	6413      	str	r3, [r2, #64]	; 0x40
 80065ae:	4b06      	ldr	r3, [pc, #24]	; (80065c8 <HAL_I2C_MspInit+0x88>)
 80065b0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80065b2:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80065b6:	60fb      	str	r3, [r7, #12]
 80065b8:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 80065ba:	bf00      	nop
 80065bc:	3728      	adds	r7, #40	; 0x28
 80065be:	46bd      	mov	sp, r7
 80065c0:	bd80      	pop	{r7, pc}
 80065c2:	bf00      	nop
 80065c4:	40005400 	.word	0x40005400
 80065c8:	40023800 	.word	0x40023800
 80065cc:	40020400 	.word	0x40020400

080065d0 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 80065d0:	b480      	push	{r7}
 80065d2:	b085      	sub	sp, #20
 80065d4:	af00      	add	r7, sp, #0
 80065d6:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 80065d8:	687b      	ldr	r3, [r7, #4]
 80065da:	681b      	ldr	r3, [r3, #0]
 80065dc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80065e0:	d10d      	bne.n	80065fe <HAL_TIM_Base_MspInit+0x2e>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 80065e2:	2300      	movs	r3, #0
 80065e4:	60fb      	str	r3, [r7, #12]
 80065e6:	4b09      	ldr	r3, [pc, #36]	; (800660c <HAL_TIM_Base_MspInit+0x3c>)
 80065e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80065ea:	4a08      	ldr	r2, [pc, #32]	; (800660c <HAL_TIM_Base_MspInit+0x3c>)
 80065ec:	f043 0301 	orr.w	r3, r3, #1
 80065f0:	6413      	str	r3, [r2, #64]	; 0x40
 80065f2:	4b06      	ldr	r3, [pc, #24]	; (800660c <HAL_TIM_Base_MspInit+0x3c>)
 80065f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80065f6:	f003 0301 	and.w	r3, r3, #1
 80065fa:	60fb      	str	r3, [r7, #12]
 80065fc:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 80065fe:	bf00      	nop
 8006600:	3714      	adds	r7, #20
 8006602:	46bd      	mov	sp, r7
 8006604:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006608:	4770      	bx	lr
 800660a:	bf00      	nop
 800660c:	40023800 	.word	0x40023800

08006610 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8006610:	b480      	push	{r7}
 8006612:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8006614:	e7fe      	b.n	8006614 <NMI_Handler+0x4>

08006616 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8006616:	b480      	push	{r7}
 8006618:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800661a:	e7fe      	b.n	800661a <HardFault_Handler+0x4>

0800661c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 800661c:	b480      	push	{r7}
 800661e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8006620:	e7fe      	b.n	8006620 <MemManage_Handler+0x4>

08006622 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8006622:	b480      	push	{r7}
 8006624:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8006626:	e7fe      	b.n	8006626 <BusFault_Handler+0x4>

08006628 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8006628:	b480      	push	{r7}
 800662a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800662c:	e7fe      	b.n	800662c <UsageFault_Handler+0x4>

0800662e <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800662e:	b480      	push	{r7}
 8006630:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8006632:	bf00      	nop
 8006634:	46bd      	mov	sp, r7
 8006636:	f85d 7b04 	ldr.w	r7, [sp], #4
 800663a:	4770      	bx	lr

0800663c <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800663c:	b480      	push	{r7}
 800663e:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8006640:	bf00      	nop
 8006642:	46bd      	mov	sp, r7
 8006644:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006648:	4770      	bx	lr

0800664a <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800664a:	b480      	push	{r7}
 800664c:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800664e:	bf00      	nop
 8006650:	46bd      	mov	sp, r7
 8006652:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006656:	4770      	bx	lr

08006658 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8006658:	b580      	push	{r7, lr}
 800665a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800665c:	f000 f890 	bl	8006780 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8006660:	bf00      	nop
 8006662:	bd80      	pop	{r7, pc}

08006664 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8006664:	b480      	push	{r7}
 8006666:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8006668:	4b06      	ldr	r3, [pc, #24]	; (8006684 <SystemInit+0x20>)
 800666a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800666e:	4a05      	ldr	r2, [pc, #20]	; (8006684 <SystemInit+0x20>)
 8006670:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8006674:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8006678:	bf00      	nop
 800667a:	46bd      	mov	sp, r7
 800667c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006680:	4770      	bx	lr
 8006682:	bf00      	nop
 8006684:	e000ed00 	.word	0xe000ed00

08006688 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8006688:	f8df d034 	ldr.w	sp, [pc, #52]	; 80066c0 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 800668c:	480d      	ldr	r0, [pc, #52]	; (80066c4 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 800668e:	490e      	ldr	r1, [pc, #56]	; (80066c8 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8006690:	4a0e      	ldr	r2, [pc, #56]	; (80066cc <LoopFillZerobss+0x1e>)
  movs r3, #0
 8006692:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8006694:	e002      	b.n	800669c <LoopCopyDataInit>

08006696 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8006696:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8006698:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800669a:	3304      	adds	r3, #4

0800669c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800669c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800669e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80066a0:	d3f9      	bcc.n	8006696 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80066a2:	4a0b      	ldr	r2, [pc, #44]	; (80066d0 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 80066a4:	4c0b      	ldr	r4, [pc, #44]	; (80066d4 <LoopFillZerobss+0x26>)
  movs r3, #0
 80066a6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80066a8:	e001      	b.n	80066ae <LoopFillZerobss>

080066aa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80066aa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80066ac:	3204      	adds	r2, #4

080066ae <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80066ae:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80066b0:	d3fb      	bcc.n	80066aa <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80066b2:	f7ff ffd7 	bl	8006664 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80066b6:	f002 fabb 	bl	8008c30 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80066ba:	f7ff f993 	bl	80059e4 <main>
  bx  lr    
 80066be:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 80066c0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80066c4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80066c8:	2000001c 	.word	0x2000001c
  ldr r2, =_sidata
 80066cc:	08009158 	.word	0x08009158
  ldr r2, =_sbss
 80066d0:	2000001c 	.word	0x2000001c
  ldr r4, =_ebss
 80066d4:	20000688 	.word	0x20000688

080066d8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80066d8:	e7fe      	b.n	80066d8 <ADC_IRQHandler>
	...

080066dc <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80066dc:	b580      	push	{r7, lr}
 80066de:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 80066e0:	4b0e      	ldr	r3, [pc, #56]	; (800671c <HAL_Init+0x40>)
 80066e2:	681b      	ldr	r3, [r3, #0]
 80066e4:	4a0d      	ldr	r2, [pc, #52]	; (800671c <HAL_Init+0x40>)
 80066e6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80066ea:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 80066ec:	4b0b      	ldr	r3, [pc, #44]	; (800671c <HAL_Init+0x40>)
 80066ee:	681b      	ldr	r3, [r3, #0]
 80066f0:	4a0a      	ldr	r2, [pc, #40]	; (800671c <HAL_Init+0x40>)
 80066f2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80066f6:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80066f8:	4b08      	ldr	r3, [pc, #32]	; (800671c <HAL_Init+0x40>)
 80066fa:	681b      	ldr	r3, [r3, #0]
 80066fc:	4a07      	ldr	r2, [pc, #28]	; (800671c <HAL_Init+0x40>)
 80066fe:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006702:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8006704:	2003      	movs	r0, #3
 8006706:	f000 f931 	bl	800696c <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800670a:	200f      	movs	r0, #15
 800670c:	f000 f808 	bl	8006720 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8006710:	f7ff feee 	bl	80064f0 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8006714:	2300      	movs	r3, #0
}
 8006716:	4618      	mov	r0, r3
 8006718:	bd80      	pop	{r7, pc}
 800671a:	bf00      	nop
 800671c:	40023c00 	.word	0x40023c00

08006720 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8006720:	b580      	push	{r7, lr}
 8006722:	b082      	sub	sp, #8
 8006724:	af00      	add	r7, sp, #0
 8006726:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8006728:	4b12      	ldr	r3, [pc, #72]	; (8006774 <HAL_InitTick+0x54>)
 800672a:	681a      	ldr	r2, [r3, #0]
 800672c:	4b12      	ldr	r3, [pc, #72]	; (8006778 <HAL_InitTick+0x58>)
 800672e:	781b      	ldrb	r3, [r3, #0]
 8006730:	4619      	mov	r1, r3
 8006732:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006736:	fbb3 f3f1 	udiv	r3, r3, r1
 800673a:	fbb2 f3f3 	udiv	r3, r2, r3
 800673e:	4618      	mov	r0, r3
 8006740:	f000 f93b 	bl	80069ba <HAL_SYSTICK_Config>
 8006744:	4603      	mov	r3, r0
 8006746:	2b00      	cmp	r3, #0
 8006748:	d001      	beq.n	800674e <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 800674a:	2301      	movs	r3, #1
 800674c:	e00e      	b.n	800676c <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800674e:	687b      	ldr	r3, [r7, #4]
 8006750:	2b0f      	cmp	r3, #15
 8006752:	d80a      	bhi.n	800676a <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8006754:	2200      	movs	r2, #0
 8006756:	6879      	ldr	r1, [r7, #4]
 8006758:	f04f 30ff 	mov.w	r0, #4294967295
 800675c:	f000 f911 	bl	8006982 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8006760:	4a06      	ldr	r2, [pc, #24]	; (800677c <HAL_InitTick+0x5c>)
 8006762:	687b      	ldr	r3, [r7, #4]
 8006764:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8006766:	2300      	movs	r3, #0
 8006768:	e000      	b.n	800676c <HAL_InitTick+0x4c>
    return HAL_ERROR;
 800676a:	2301      	movs	r3, #1
}
 800676c:	4618      	mov	r0, r3
 800676e:	3708      	adds	r7, #8
 8006770:	46bd      	mov	sp, r7
 8006772:	bd80      	pop	{r7, pc}
 8006774:	20000010 	.word	0x20000010
 8006778:	20000018 	.word	0x20000018
 800677c:	20000014 	.word	0x20000014

08006780 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8006780:	b480      	push	{r7}
 8006782:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8006784:	4b06      	ldr	r3, [pc, #24]	; (80067a0 <HAL_IncTick+0x20>)
 8006786:	781b      	ldrb	r3, [r3, #0]
 8006788:	461a      	mov	r2, r3
 800678a:	4b06      	ldr	r3, [pc, #24]	; (80067a4 <HAL_IncTick+0x24>)
 800678c:	681b      	ldr	r3, [r3, #0]
 800678e:	4413      	add	r3, r2
 8006790:	4a04      	ldr	r2, [pc, #16]	; (80067a4 <HAL_IncTick+0x24>)
 8006792:	6013      	str	r3, [r2, #0]
}
 8006794:	bf00      	nop
 8006796:	46bd      	mov	sp, r7
 8006798:	f85d 7b04 	ldr.w	r7, [sp], #4
 800679c:	4770      	bx	lr
 800679e:	bf00      	nop
 80067a0:	20000018 	.word	0x20000018
 80067a4:	20000664 	.word	0x20000664

080067a8 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 80067a8:	b480      	push	{r7}
 80067aa:	af00      	add	r7, sp, #0
  return uwTick;
 80067ac:	4b03      	ldr	r3, [pc, #12]	; (80067bc <HAL_GetTick+0x14>)
 80067ae:	681b      	ldr	r3, [r3, #0]
}
 80067b0:	4618      	mov	r0, r3
 80067b2:	46bd      	mov	sp, r7
 80067b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067b8:	4770      	bx	lr
 80067ba:	bf00      	nop
 80067bc:	20000664 	.word	0x20000664

080067c0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80067c0:	b580      	push	{r7, lr}
 80067c2:	b084      	sub	sp, #16
 80067c4:	af00      	add	r7, sp, #0
 80067c6:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 80067c8:	f7ff ffee 	bl	80067a8 <HAL_GetTick>
 80067cc:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 80067ce:	687b      	ldr	r3, [r7, #4]
 80067d0:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80067d2:	68fb      	ldr	r3, [r7, #12]
 80067d4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80067d8:	d005      	beq.n	80067e6 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 80067da:	4b0a      	ldr	r3, [pc, #40]	; (8006804 <HAL_Delay+0x44>)
 80067dc:	781b      	ldrb	r3, [r3, #0]
 80067de:	461a      	mov	r2, r3
 80067e0:	68fb      	ldr	r3, [r7, #12]
 80067e2:	4413      	add	r3, r2
 80067e4:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 80067e6:	bf00      	nop
 80067e8:	f7ff ffde 	bl	80067a8 <HAL_GetTick>
 80067ec:	4602      	mov	r2, r0
 80067ee:	68bb      	ldr	r3, [r7, #8]
 80067f0:	1ad3      	subs	r3, r2, r3
 80067f2:	68fa      	ldr	r2, [r7, #12]
 80067f4:	429a      	cmp	r2, r3
 80067f6:	d8f7      	bhi.n	80067e8 <HAL_Delay+0x28>
  {
  }
}
 80067f8:	bf00      	nop
 80067fa:	bf00      	nop
 80067fc:	3710      	adds	r7, #16
 80067fe:	46bd      	mov	sp, r7
 8006800:	bd80      	pop	{r7, pc}
 8006802:	bf00      	nop
 8006804:	20000018 	.word	0x20000018

08006808 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8006808:	b480      	push	{r7}
 800680a:	b085      	sub	sp, #20
 800680c:	af00      	add	r7, sp, #0
 800680e:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8006810:	687b      	ldr	r3, [r7, #4]
 8006812:	f003 0307 	and.w	r3, r3, #7
 8006816:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8006818:	4b0c      	ldr	r3, [pc, #48]	; (800684c <__NVIC_SetPriorityGrouping+0x44>)
 800681a:	68db      	ldr	r3, [r3, #12]
 800681c:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800681e:	68ba      	ldr	r2, [r7, #8]
 8006820:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8006824:	4013      	ands	r3, r2
 8006826:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8006828:	68fb      	ldr	r3, [r7, #12]
 800682a:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800682c:	68bb      	ldr	r3, [r7, #8]
 800682e:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8006830:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8006834:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8006838:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 800683a:	4a04      	ldr	r2, [pc, #16]	; (800684c <__NVIC_SetPriorityGrouping+0x44>)
 800683c:	68bb      	ldr	r3, [r7, #8]
 800683e:	60d3      	str	r3, [r2, #12]
}
 8006840:	bf00      	nop
 8006842:	3714      	adds	r7, #20
 8006844:	46bd      	mov	sp, r7
 8006846:	f85d 7b04 	ldr.w	r7, [sp], #4
 800684a:	4770      	bx	lr
 800684c:	e000ed00 	.word	0xe000ed00

08006850 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8006850:	b480      	push	{r7}
 8006852:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8006854:	4b04      	ldr	r3, [pc, #16]	; (8006868 <__NVIC_GetPriorityGrouping+0x18>)
 8006856:	68db      	ldr	r3, [r3, #12]
 8006858:	0a1b      	lsrs	r3, r3, #8
 800685a:	f003 0307 	and.w	r3, r3, #7
}
 800685e:	4618      	mov	r0, r3
 8006860:	46bd      	mov	sp, r7
 8006862:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006866:	4770      	bx	lr
 8006868:	e000ed00 	.word	0xe000ed00

0800686c <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 800686c:	b480      	push	{r7}
 800686e:	b083      	sub	sp, #12
 8006870:	af00      	add	r7, sp, #0
 8006872:	4603      	mov	r3, r0
 8006874:	6039      	str	r1, [r7, #0]
 8006876:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8006878:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800687c:	2b00      	cmp	r3, #0
 800687e:	db0a      	blt.n	8006896 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006880:	683b      	ldr	r3, [r7, #0]
 8006882:	b2da      	uxtb	r2, r3
 8006884:	490c      	ldr	r1, [pc, #48]	; (80068b8 <__NVIC_SetPriority+0x4c>)
 8006886:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800688a:	0112      	lsls	r2, r2, #4
 800688c:	b2d2      	uxtb	r2, r2
 800688e:	440b      	add	r3, r1
 8006890:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8006894:	e00a      	b.n	80068ac <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006896:	683b      	ldr	r3, [r7, #0]
 8006898:	b2da      	uxtb	r2, r3
 800689a:	4908      	ldr	r1, [pc, #32]	; (80068bc <__NVIC_SetPriority+0x50>)
 800689c:	79fb      	ldrb	r3, [r7, #7]
 800689e:	f003 030f 	and.w	r3, r3, #15
 80068a2:	3b04      	subs	r3, #4
 80068a4:	0112      	lsls	r2, r2, #4
 80068a6:	b2d2      	uxtb	r2, r2
 80068a8:	440b      	add	r3, r1
 80068aa:	761a      	strb	r2, [r3, #24]
}
 80068ac:	bf00      	nop
 80068ae:	370c      	adds	r7, #12
 80068b0:	46bd      	mov	sp, r7
 80068b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80068b6:	4770      	bx	lr
 80068b8:	e000e100 	.word	0xe000e100
 80068bc:	e000ed00 	.word	0xe000ed00

080068c0 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80068c0:	b480      	push	{r7}
 80068c2:	b089      	sub	sp, #36	; 0x24
 80068c4:	af00      	add	r7, sp, #0
 80068c6:	60f8      	str	r0, [r7, #12]
 80068c8:	60b9      	str	r1, [r7, #8]
 80068ca:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80068cc:	68fb      	ldr	r3, [r7, #12]
 80068ce:	f003 0307 	and.w	r3, r3, #7
 80068d2:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80068d4:	69fb      	ldr	r3, [r7, #28]
 80068d6:	f1c3 0307 	rsb	r3, r3, #7
 80068da:	2b04      	cmp	r3, #4
 80068dc:	bf28      	it	cs
 80068de:	2304      	movcs	r3, #4
 80068e0:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80068e2:	69fb      	ldr	r3, [r7, #28]
 80068e4:	3304      	adds	r3, #4
 80068e6:	2b06      	cmp	r3, #6
 80068e8:	d902      	bls.n	80068f0 <NVIC_EncodePriority+0x30>
 80068ea:	69fb      	ldr	r3, [r7, #28]
 80068ec:	3b03      	subs	r3, #3
 80068ee:	e000      	b.n	80068f2 <NVIC_EncodePriority+0x32>
 80068f0:	2300      	movs	r3, #0
 80068f2:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80068f4:	f04f 32ff 	mov.w	r2, #4294967295
 80068f8:	69bb      	ldr	r3, [r7, #24]
 80068fa:	fa02 f303 	lsl.w	r3, r2, r3
 80068fe:	43da      	mvns	r2, r3
 8006900:	68bb      	ldr	r3, [r7, #8]
 8006902:	401a      	ands	r2, r3
 8006904:	697b      	ldr	r3, [r7, #20]
 8006906:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8006908:	f04f 31ff 	mov.w	r1, #4294967295
 800690c:	697b      	ldr	r3, [r7, #20]
 800690e:	fa01 f303 	lsl.w	r3, r1, r3
 8006912:	43d9      	mvns	r1, r3
 8006914:	687b      	ldr	r3, [r7, #4]
 8006916:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8006918:	4313      	orrs	r3, r2
         );
}
 800691a:	4618      	mov	r0, r3
 800691c:	3724      	adds	r7, #36	; 0x24
 800691e:	46bd      	mov	sp, r7
 8006920:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006924:	4770      	bx	lr
	...

08006928 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8006928:	b580      	push	{r7, lr}
 800692a:	b082      	sub	sp, #8
 800692c:	af00      	add	r7, sp, #0
 800692e:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8006930:	687b      	ldr	r3, [r7, #4]
 8006932:	3b01      	subs	r3, #1
 8006934:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8006938:	d301      	bcc.n	800693e <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 800693a:	2301      	movs	r3, #1
 800693c:	e00f      	b.n	800695e <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800693e:	4a0a      	ldr	r2, [pc, #40]	; (8006968 <SysTick_Config+0x40>)
 8006940:	687b      	ldr	r3, [r7, #4]
 8006942:	3b01      	subs	r3, #1
 8006944:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8006946:	210f      	movs	r1, #15
 8006948:	f04f 30ff 	mov.w	r0, #4294967295
 800694c:	f7ff ff8e 	bl	800686c <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8006950:	4b05      	ldr	r3, [pc, #20]	; (8006968 <SysTick_Config+0x40>)
 8006952:	2200      	movs	r2, #0
 8006954:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8006956:	4b04      	ldr	r3, [pc, #16]	; (8006968 <SysTick_Config+0x40>)
 8006958:	2207      	movs	r2, #7
 800695a:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 800695c:	2300      	movs	r3, #0
}
 800695e:	4618      	mov	r0, r3
 8006960:	3708      	adds	r7, #8
 8006962:	46bd      	mov	sp, r7
 8006964:	bd80      	pop	{r7, pc}
 8006966:	bf00      	nop
 8006968:	e000e010 	.word	0xe000e010

0800696c <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 800696c:	b580      	push	{r7, lr}
 800696e:	b082      	sub	sp, #8
 8006970:	af00      	add	r7, sp, #0
 8006972:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8006974:	6878      	ldr	r0, [r7, #4]
 8006976:	f7ff ff47 	bl	8006808 <__NVIC_SetPriorityGrouping>
}
 800697a:	bf00      	nop
 800697c:	3708      	adds	r7, #8
 800697e:	46bd      	mov	sp, r7
 8006980:	bd80      	pop	{r7, pc}

08006982 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8006982:	b580      	push	{r7, lr}
 8006984:	b086      	sub	sp, #24
 8006986:	af00      	add	r7, sp, #0
 8006988:	4603      	mov	r3, r0
 800698a:	60b9      	str	r1, [r7, #8]
 800698c:	607a      	str	r2, [r7, #4]
 800698e:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8006990:	2300      	movs	r3, #0
 8006992:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8006994:	f7ff ff5c 	bl	8006850 <__NVIC_GetPriorityGrouping>
 8006998:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 800699a:	687a      	ldr	r2, [r7, #4]
 800699c:	68b9      	ldr	r1, [r7, #8]
 800699e:	6978      	ldr	r0, [r7, #20]
 80069a0:	f7ff ff8e 	bl	80068c0 <NVIC_EncodePriority>
 80069a4:	4602      	mov	r2, r0
 80069a6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80069aa:	4611      	mov	r1, r2
 80069ac:	4618      	mov	r0, r3
 80069ae:	f7ff ff5d 	bl	800686c <__NVIC_SetPriority>
}
 80069b2:	bf00      	nop
 80069b4:	3718      	adds	r7, #24
 80069b6:	46bd      	mov	sp, r7
 80069b8:	bd80      	pop	{r7, pc}

080069ba <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80069ba:	b580      	push	{r7, lr}
 80069bc:	b082      	sub	sp, #8
 80069be:	af00      	add	r7, sp, #0
 80069c0:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80069c2:	6878      	ldr	r0, [r7, #4]
 80069c4:	f7ff ffb0 	bl	8006928 <SysTick_Config>
 80069c8:	4603      	mov	r3, r0
}
 80069ca:	4618      	mov	r0, r3
 80069cc:	3708      	adds	r7, #8
 80069ce:	46bd      	mov	sp, r7
 80069d0:	bd80      	pop	{r7, pc}
	...

080069d4 <HAL_SYSTICK_CLKSourceConfig>:
  *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock source.
  *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
  * @retval None
  */
void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
{
 80069d4:	b480      	push	{r7}
 80069d6:	b083      	sub	sp, #12
 80069d8:	af00      	add	r7, sp, #0
 80069da:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
  if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 80069dc:	687b      	ldr	r3, [r7, #4]
 80069de:	2b04      	cmp	r3, #4
 80069e0:	d106      	bne.n	80069f0 <HAL_SYSTICK_CLKSourceConfig+0x1c>
  {
    SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 80069e2:	4b09      	ldr	r3, [pc, #36]	; (8006a08 <HAL_SYSTICK_CLKSourceConfig+0x34>)
 80069e4:	681b      	ldr	r3, [r3, #0]
 80069e6:	4a08      	ldr	r2, [pc, #32]	; (8006a08 <HAL_SYSTICK_CLKSourceConfig+0x34>)
 80069e8:	f043 0304 	orr.w	r3, r3, #4
 80069ec:	6013      	str	r3, [r2, #0]
  }
  else
  {
    SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
  }
}
 80069ee:	e005      	b.n	80069fc <HAL_SYSTICK_CLKSourceConfig+0x28>
    SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 80069f0:	4b05      	ldr	r3, [pc, #20]	; (8006a08 <HAL_SYSTICK_CLKSourceConfig+0x34>)
 80069f2:	681b      	ldr	r3, [r3, #0]
 80069f4:	4a04      	ldr	r2, [pc, #16]	; (8006a08 <HAL_SYSTICK_CLKSourceConfig+0x34>)
 80069f6:	f023 0304 	bic.w	r3, r3, #4
 80069fa:	6013      	str	r3, [r2, #0]
}
 80069fc:	bf00      	nop
 80069fe:	370c      	adds	r7, #12
 8006a00:	46bd      	mov	sp, r7
 8006a02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a06:	4770      	bx	lr
 8006a08:	e000e010 	.word	0xe000e010

08006a0c <HAL_FLASH_Program>:
  * @param  Data specifies the data to be programmed
  * 
  * @retval HAL_StatusTypeDef HAL Status
  */
HAL_StatusTypeDef HAL_FLASH_Program(uint32_t TypeProgram, uint32_t Address, uint64_t Data)
{
 8006a0c:	b580      	push	{r7, lr}
 8006a0e:	b086      	sub	sp, #24
 8006a10:	af00      	add	r7, sp, #0
 8006a12:	60f8      	str	r0, [r7, #12]
 8006a14:	60b9      	str	r1, [r7, #8]
 8006a16:	e9c7 2300 	strd	r2, r3, [r7]
  HAL_StatusTypeDef status = HAL_ERROR;
 8006a1a:	2301      	movs	r3, #1
 8006a1c:	75fb      	strb	r3, [r7, #23]
  
  /* Process Locked */
  __HAL_LOCK(&pFlash);
 8006a1e:	4b23      	ldr	r3, [pc, #140]	; (8006aac <HAL_FLASH_Program+0xa0>)
 8006a20:	7e1b      	ldrb	r3, [r3, #24]
 8006a22:	2b01      	cmp	r3, #1
 8006a24:	d101      	bne.n	8006a2a <HAL_FLASH_Program+0x1e>
 8006a26:	2302      	movs	r3, #2
 8006a28:	e03b      	b.n	8006aa2 <HAL_FLASH_Program+0x96>
 8006a2a:	4b20      	ldr	r3, [pc, #128]	; (8006aac <HAL_FLASH_Program+0xa0>)
 8006a2c:	2201      	movs	r2, #1
 8006a2e:	761a      	strb	r2, [r3, #24]
  
  /* Check the parameters */
  assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
  
  /* Wait for last operation to be completed */
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8006a30:	f24c 3050 	movw	r0, #50000	; 0xc350
 8006a34:	f000 f870 	bl	8006b18 <FLASH_WaitForLastOperation>
 8006a38:	4603      	mov	r3, r0
 8006a3a:	75fb      	strb	r3, [r7, #23]
  
  if(status == HAL_OK)
 8006a3c:	7dfb      	ldrb	r3, [r7, #23]
 8006a3e:	2b00      	cmp	r3, #0
 8006a40:	d12b      	bne.n	8006a9a <HAL_FLASH_Program+0x8e>
  {
    if(TypeProgram == FLASH_TYPEPROGRAM_BYTE)
 8006a42:	68fb      	ldr	r3, [r7, #12]
 8006a44:	2b00      	cmp	r3, #0
 8006a46:	d105      	bne.n	8006a54 <HAL_FLASH_Program+0x48>
    {
      /*Program byte (8-bit) at a specified address.*/
      FLASH_Program_Byte(Address, (uint8_t) Data);
 8006a48:	783b      	ldrb	r3, [r7, #0]
 8006a4a:	4619      	mov	r1, r3
 8006a4c:	68b8      	ldr	r0, [r7, #8]
 8006a4e:	f000 f91b 	bl	8006c88 <FLASH_Program_Byte>
 8006a52:	e016      	b.n	8006a82 <HAL_FLASH_Program+0x76>
    }
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 8006a54:	68fb      	ldr	r3, [r7, #12]
 8006a56:	2b01      	cmp	r3, #1
 8006a58:	d105      	bne.n	8006a66 <HAL_FLASH_Program+0x5a>
    {
      /*Program halfword (16-bit) at a specified address.*/
      FLASH_Program_HalfWord(Address, (uint16_t) Data);
 8006a5a:	883b      	ldrh	r3, [r7, #0]
 8006a5c:	4619      	mov	r1, r3
 8006a5e:	68b8      	ldr	r0, [r7, #8]
 8006a60:	f000 f8ee 	bl	8006c40 <FLASH_Program_HalfWord>
 8006a64:	e00d      	b.n	8006a82 <HAL_FLASH_Program+0x76>
    }
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 8006a66:	68fb      	ldr	r3, [r7, #12]
 8006a68:	2b02      	cmp	r3, #2
 8006a6a:	d105      	bne.n	8006a78 <HAL_FLASH_Program+0x6c>
    {
      /*Program word (32-bit) at a specified address.*/
      FLASH_Program_Word(Address, (uint32_t) Data);
 8006a6c:	683b      	ldr	r3, [r7, #0]
 8006a6e:	4619      	mov	r1, r3
 8006a70:	68b8      	ldr	r0, [r7, #8]
 8006a72:	f000 f8c3 	bl	8006bfc <FLASH_Program_Word>
 8006a76:	e004      	b.n	8006a82 <HAL_FLASH_Program+0x76>
    }
    else
    {
      /*Program double word (64-bit) at a specified address.*/
      FLASH_Program_DoubleWord(Address, Data);
 8006a78:	e9d7 2300 	ldrd	r2, r3, [r7]
 8006a7c:	68b8      	ldr	r0, [r7, #8]
 8006a7e:	f000 f88b 	bl	8006b98 <FLASH_Program_DoubleWord>
    }
    
    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8006a82:	f24c 3050 	movw	r0, #50000	; 0xc350
 8006a86:	f000 f847 	bl	8006b18 <FLASH_WaitForLastOperation>
 8006a8a:	4603      	mov	r3, r0
 8006a8c:	75fb      	strb	r3, [r7, #23]
    
    /* If the program operation is completed, disable the PG Bit */
    FLASH->CR &= (~FLASH_CR_PG);  
 8006a8e:	4b08      	ldr	r3, [pc, #32]	; (8006ab0 <HAL_FLASH_Program+0xa4>)
 8006a90:	691b      	ldr	r3, [r3, #16]
 8006a92:	4a07      	ldr	r2, [pc, #28]	; (8006ab0 <HAL_FLASH_Program+0xa4>)
 8006a94:	f023 0301 	bic.w	r3, r3, #1
 8006a98:	6113      	str	r3, [r2, #16]
  }
  
  /* Process Unlocked */
  __HAL_UNLOCK(&pFlash);
 8006a9a:	4b04      	ldr	r3, [pc, #16]	; (8006aac <HAL_FLASH_Program+0xa0>)
 8006a9c:	2200      	movs	r2, #0
 8006a9e:	761a      	strb	r2, [r3, #24]
  
  return status;
 8006aa0:	7dfb      	ldrb	r3, [r7, #23]
}
 8006aa2:	4618      	mov	r0, r3
 8006aa4:	3718      	adds	r7, #24
 8006aa6:	46bd      	mov	sp, r7
 8006aa8:	bd80      	pop	{r7, pc}
 8006aaa:	bf00      	nop
 8006aac:	20000668 	.word	0x20000668
 8006ab0:	40023c00 	.word	0x40023c00

08006ab4 <HAL_FLASH_Unlock>:
/**
  * @brief  Unlock the FLASH control register access
  * @retval HAL Status
  */
HAL_StatusTypeDef HAL_FLASH_Unlock(void)
{
 8006ab4:	b480      	push	{r7}
 8006ab6:	b083      	sub	sp, #12
 8006ab8:	af00      	add	r7, sp, #0
  HAL_StatusTypeDef status = HAL_OK;
 8006aba:	2300      	movs	r3, #0
 8006abc:	71fb      	strb	r3, [r7, #7]

  if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8006abe:	4b0b      	ldr	r3, [pc, #44]	; (8006aec <HAL_FLASH_Unlock+0x38>)
 8006ac0:	691b      	ldr	r3, [r3, #16]
 8006ac2:	2b00      	cmp	r3, #0
 8006ac4:	da0b      	bge.n	8006ade <HAL_FLASH_Unlock+0x2a>
  {
    /* Authorize the FLASH Registers access */
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 8006ac6:	4b09      	ldr	r3, [pc, #36]	; (8006aec <HAL_FLASH_Unlock+0x38>)
 8006ac8:	4a09      	ldr	r2, [pc, #36]	; (8006af0 <HAL_FLASH_Unlock+0x3c>)
 8006aca:	605a      	str	r2, [r3, #4]
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 8006acc:	4b07      	ldr	r3, [pc, #28]	; (8006aec <HAL_FLASH_Unlock+0x38>)
 8006ace:	4a09      	ldr	r2, [pc, #36]	; (8006af4 <HAL_FLASH_Unlock+0x40>)
 8006ad0:	605a      	str	r2, [r3, #4]

    /* Verify Flash is unlocked */
    if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8006ad2:	4b06      	ldr	r3, [pc, #24]	; (8006aec <HAL_FLASH_Unlock+0x38>)
 8006ad4:	691b      	ldr	r3, [r3, #16]
 8006ad6:	2b00      	cmp	r3, #0
 8006ad8:	da01      	bge.n	8006ade <HAL_FLASH_Unlock+0x2a>
    {
      status = HAL_ERROR;
 8006ada:	2301      	movs	r3, #1
 8006adc:	71fb      	strb	r3, [r7, #7]
    }
  }

  return status;
 8006ade:	79fb      	ldrb	r3, [r7, #7]
}
 8006ae0:	4618      	mov	r0, r3
 8006ae2:	370c      	adds	r7, #12
 8006ae4:	46bd      	mov	sp, r7
 8006ae6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006aea:	4770      	bx	lr
 8006aec:	40023c00 	.word	0x40023c00
 8006af0:	45670123 	.word	0x45670123
 8006af4:	cdef89ab 	.word	0xcdef89ab

08006af8 <HAL_FLASH_Lock>:
/**
  * @brief  Locks the FLASH control register access
  * @retval HAL Status
  */
HAL_StatusTypeDef HAL_FLASH_Lock(void)
{
 8006af8:	b480      	push	{r7}
 8006afa:	af00      	add	r7, sp, #0
  /* Set the LOCK Bit to lock the FLASH Registers access */
  FLASH->CR |= FLASH_CR_LOCK;
 8006afc:	4b05      	ldr	r3, [pc, #20]	; (8006b14 <HAL_FLASH_Lock+0x1c>)
 8006afe:	691b      	ldr	r3, [r3, #16]
 8006b00:	4a04      	ldr	r2, [pc, #16]	; (8006b14 <HAL_FLASH_Lock+0x1c>)
 8006b02:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8006b06:	6113      	str	r3, [r2, #16]
  
  return HAL_OK;  
 8006b08:	2300      	movs	r3, #0
}
 8006b0a:	4618      	mov	r0, r3
 8006b0c:	46bd      	mov	sp, r7
 8006b0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b12:	4770      	bx	lr
 8006b14:	40023c00 	.word	0x40023c00

08006b18 <FLASH_WaitForLastOperation>:
  * @brief  Wait for a FLASH operation to complete.
  * @param  Timeout maximum flash operationtimeout
  * @retval HAL Status
  */
HAL_StatusTypeDef FLASH_WaitForLastOperation(uint32_t Timeout)
{ 
 8006b18:	b580      	push	{r7, lr}
 8006b1a:	b084      	sub	sp, #16
 8006b1c:	af00      	add	r7, sp, #0
 8006b1e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0U;
 8006b20:	2300      	movs	r3, #0
 8006b22:	60fb      	str	r3, [r7, #12]
  
  /* Clear Error Code */
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8006b24:	4b1a      	ldr	r3, [pc, #104]	; (8006b90 <FLASH_WaitForLastOperation+0x78>)
 8006b26:	2200      	movs	r2, #0
 8006b28:	61da      	str	r2, [r3, #28]
  
  /* Wait for the FLASH operation to complete by polling on BUSY flag to be reset.
     Even if the FLASH operation fails, the BUSY flag will be reset and an error
     flag will be set */
  /* Get tick */
  tickstart = HAL_GetTick();
 8006b2a:	f7ff fe3d 	bl	80067a8 <HAL_GetTick>
 8006b2e:	60f8      	str	r0, [r7, #12]

  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8006b30:	e010      	b.n	8006b54 <FLASH_WaitForLastOperation+0x3c>
  { 
    if(Timeout != HAL_MAX_DELAY)
 8006b32:	687b      	ldr	r3, [r7, #4]
 8006b34:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006b38:	d00c      	beq.n	8006b54 <FLASH_WaitForLastOperation+0x3c>
    {
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8006b3a:	687b      	ldr	r3, [r7, #4]
 8006b3c:	2b00      	cmp	r3, #0
 8006b3e:	d007      	beq.n	8006b50 <FLASH_WaitForLastOperation+0x38>
 8006b40:	f7ff fe32 	bl	80067a8 <HAL_GetTick>
 8006b44:	4602      	mov	r2, r0
 8006b46:	68fb      	ldr	r3, [r7, #12]
 8006b48:	1ad3      	subs	r3, r2, r3
 8006b4a:	687a      	ldr	r2, [r7, #4]
 8006b4c:	429a      	cmp	r2, r3
 8006b4e:	d201      	bcs.n	8006b54 <FLASH_WaitForLastOperation+0x3c>
      {
        return HAL_TIMEOUT;
 8006b50:	2303      	movs	r3, #3
 8006b52:	e019      	b.n	8006b88 <FLASH_WaitForLastOperation+0x70>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8006b54:	4b0f      	ldr	r3, [pc, #60]	; (8006b94 <FLASH_WaitForLastOperation+0x7c>)
 8006b56:	68db      	ldr	r3, [r3, #12]
 8006b58:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8006b5c:	2b00      	cmp	r3, #0
 8006b5e:	d1e8      	bne.n	8006b32 <FLASH_WaitForLastOperation+0x1a>
      }
    } 
  }

  /* Check FLASH End of Operation flag  */
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8006b60:	4b0c      	ldr	r3, [pc, #48]	; (8006b94 <FLASH_WaitForLastOperation+0x7c>)
 8006b62:	68db      	ldr	r3, [r3, #12]
 8006b64:	f003 0301 	and.w	r3, r3, #1
 8006b68:	2b00      	cmp	r3, #0
 8006b6a:	d002      	beq.n	8006b72 <FLASH_WaitForLastOperation+0x5a>
  {
    /* Clear FLASH End of Operation pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8006b6c:	4b09      	ldr	r3, [pc, #36]	; (8006b94 <FLASH_WaitForLastOperation+0x7c>)
 8006b6e:	2201      	movs	r2, #1
 8006b70:	60da      	str	r2, [r3, #12]
  }
#if defined(FLASH_SR_RDERR)  
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
                           FLASH_FLAG_PGPERR | FLASH_FLAG_PGSERR | FLASH_FLAG_RDERR)) != RESET)
#else
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8006b72:	4b08      	ldr	r3, [pc, #32]	; (8006b94 <FLASH_WaitForLastOperation+0x7c>)
 8006b74:	68db      	ldr	r3, [r3, #12]
 8006b76:	f003 03f2 	and.w	r3, r3, #242	; 0xf2
 8006b7a:	2b00      	cmp	r3, #0
 8006b7c:	d003      	beq.n	8006b86 <FLASH_WaitForLastOperation+0x6e>
                           FLASH_FLAG_PGPERR | FLASH_FLAG_PGSERR)) != RESET)
#endif /* FLASH_SR_RDERR */
  {
    /*Save the error code*/
    FLASH_SetErrorCode();
 8006b7e:	f000 f8a5 	bl	8006ccc <FLASH_SetErrorCode>
    return HAL_ERROR;
 8006b82:	2301      	movs	r3, #1
 8006b84:	e000      	b.n	8006b88 <FLASH_WaitForLastOperation+0x70>
  }

  /* If there is no error flag set */
  return HAL_OK;
 8006b86:	2300      	movs	r3, #0
  
}  
 8006b88:	4618      	mov	r0, r3
 8006b8a:	3710      	adds	r7, #16
 8006b8c:	46bd      	mov	sp, r7
 8006b8e:	bd80      	pop	{r7, pc}
 8006b90:	20000668 	.word	0x20000668
 8006b94:	40023c00 	.word	0x40023c00

08006b98 <FLASH_Program_DoubleWord>:
  * @param  Address specifies the address to be programmed.
  * @param  Data specifies the data to be programmed.
  * @retval None
  */
static void FLASH_Program_DoubleWord(uint32_t Address, uint64_t Data)
{
 8006b98:	b480      	push	{r7}
 8006b9a:	b085      	sub	sp, #20
 8006b9c:	af00      	add	r7, sp, #0
 8006b9e:	60f8      	str	r0, [r7, #12]
 8006ba0:	e9c7 2300 	strd	r2, r3, [r7]
  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Address));
  
  /* If the previous operation is completed, proceed to program the new data */
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8006ba4:	4b14      	ldr	r3, [pc, #80]	; (8006bf8 <FLASH_Program_DoubleWord+0x60>)
 8006ba6:	691b      	ldr	r3, [r3, #16]
 8006ba8:	4a13      	ldr	r2, [pc, #76]	; (8006bf8 <FLASH_Program_DoubleWord+0x60>)
 8006baa:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006bae:	6113      	str	r3, [r2, #16]
  FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 8006bb0:	4b11      	ldr	r3, [pc, #68]	; (8006bf8 <FLASH_Program_DoubleWord+0x60>)
 8006bb2:	691b      	ldr	r3, [r3, #16]
 8006bb4:	4a10      	ldr	r2, [pc, #64]	; (8006bf8 <FLASH_Program_DoubleWord+0x60>)
 8006bb6:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8006bba:	6113      	str	r3, [r2, #16]
  FLASH->CR |= FLASH_CR_PG;
 8006bbc:	4b0e      	ldr	r3, [pc, #56]	; (8006bf8 <FLASH_Program_DoubleWord+0x60>)
 8006bbe:	691b      	ldr	r3, [r3, #16]
 8006bc0:	4a0d      	ldr	r2, [pc, #52]	; (8006bf8 <FLASH_Program_DoubleWord+0x60>)
 8006bc2:	f043 0301 	orr.w	r3, r3, #1
 8006bc6:	6113      	str	r3, [r2, #16]

  /* Program first word */
  *(__IO uint32_t*)Address = (uint32_t)Data;
 8006bc8:	68fb      	ldr	r3, [r7, #12]
 8006bca:	683a      	ldr	r2, [r7, #0]
 8006bcc:	601a      	str	r2, [r3, #0]
           so that all instructions following the ISB are fetched from cache or memory,
           after the instruction has been completed.
 */
__STATIC_FORCEINLINE void __ISB(void)
{
  __ASM volatile ("isb 0xF":::"memory");
 8006bce:	f3bf 8f6f 	isb	sy
}
 8006bd2:	bf00      	nop
  /* Barrier to ensure programming is performed in 2 steps, in right order
    (independently of compiler optimization behavior) */
  __ISB();

  /* Program second word */
  *(__IO uint32_t*)(Address+4) = (uint32_t)(Data >> 32);
 8006bd4:	e9d7 0100 	ldrd	r0, r1, [r7]
 8006bd8:	f04f 0200 	mov.w	r2, #0
 8006bdc:	f04f 0300 	mov.w	r3, #0
 8006be0:	000a      	movs	r2, r1
 8006be2:	2300      	movs	r3, #0
 8006be4:	68f9      	ldr	r1, [r7, #12]
 8006be6:	3104      	adds	r1, #4
 8006be8:	4613      	mov	r3, r2
 8006bea:	600b      	str	r3, [r1, #0]
}
 8006bec:	bf00      	nop
 8006bee:	3714      	adds	r7, #20
 8006bf0:	46bd      	mov	sp, r7
 8006bf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006bf6:	4770      	bx	lr
 8006bf8:	40023c00 	.word	0x40023c00

08006bfc <FLASH_Program_Word>:
  * @param  Address specifies the address to be programmed.
  * @param  Data specifies the data to be programmed.
  * @retval None
  */
static void FLASH_Program_Word(uint32_t Address, uint32_t Data)
{
 8006bfc:	b480      	push	{r7}
 8006bfe:	b083      	sub	sp, #12
 8006c00:	af00      	add	r7, sp, #0
 8006c02:	6078      	str	r0, [r7, #4]
 8006c04:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Address));
  
  /* If the previous operation is completed, proceed to program the new data */
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8006c06:	4b0d      	ldr	r3, [pc, #52]	; (8006c3c <FLASH_Program_Word+0x40>)
 8006c08:	691b      	ldr	r3, [r3, #16]
 8006c0a:	4a0c      	ldr	r2, [pc, #48]	; (8006c3c <FLASH_Program_Word+0x40>)
 8006c0c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006c10:	6113      	str	r3, [r2, #16]
  FLASH->CR |= FLASH_PSIZE_WORD;
 8006c12:	4b0a      	ldr	r3, [pc, #40]	; (8006c3c <FLASH_Program_Word+0x40>)
 8006c14:	691b      	ldr	r3, [r3, #16]
 8006c16:	4a09      	ldr	r2, [pc, #36]	; (8006c3c <FLASH_Program_Word+0x40>)
 8006c18:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006c1c:	6113      	str	r3, [r2, #16]
  FLASH->CR |= FLASH_CR_PG;
 8006c1e:	4b07      	ldr	r3, [pc, #28]	; (8006c3c <FLASH_Program_Word+0x40>)
 8006c20:	691b      	ldr	r3, [r3, #16]
 8006c22:	4a06      	ldr	r2, [pc, #24]	; (8006c3c <FLASH_Program_Word+0x40>)
 8006c24:	f043 0301 	orr.w	r3, r3, #1
 8006c28:	6113      	str	r3, [r2, #16]

  *(__IO uint32_t*)Address = Data;
 8006c2a:	687b      	ldr	r3, [r7, #4]
 8006c2c:	683a      	ldr	r2, [r7, #0]
 8006c2e:	601a      	str	r2, [r3, #0]
}
 8006c30:	bf00      	nop
 8006c32:	370c      	adds	r7, #12
 8006c34:	46bd      	mov	sp, r7
 8006c36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c3a:	4770      	bx	lr
 8006c3c:	40023c00 	.word	0x40023c00

08006c40 <FLASH_Program_HalfWord>:
  * @param  Address specifies the address to be programmed.
  * @param  Data specifies the data to be programmed.
  * @retval None
  */
static void FLASH_Program_HalfWord(uint32_t Address, uint16_t Data)
{
 8006c40:	b480      	push	{r7}
 8006c42:	b083      	sub	sp, #12
 8006c44:	af00      	add	r7, sp, #0
 8006c46:	6078      	str	r0, [r7, #4]
 8006c48:	460b      	mov	r3, r1
 8006c4a:	807b      	strh	r3, [r7, #2]
  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Address));
  
  /* If the previous operation is completed, proceed to program the new data */
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8006c4c:	4b0d      	ldr	r3, [pc, #52]	; (8006c84 <FLASH_Program_HalfWord+0x44>)
 8006c4e:	691b      	ldr	r3, [r3, #16]
 8006c50:	4a0c      	ldr	r2, [pc, #48]	; (8006c84 <FLASH_Program_HalfWord+0x44>)
 8006c52:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006c56:	6113      	str	r3, [r2, #16]
  FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 8006c58:	4b0a      	ldr	r3, [pc, #40]	; (8006c84 <FLASH_Program_HalfWord+0x44>)
 8006c5a:	691b      	ldr	r3, [r3, #16]
 8006c5c:	4a09      	ldr	r2, [pc, #36]	; (8006c84 <FLASH_Program_HalfWord+0x44>)
 8006c5e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006c62:	6113      	str	r3, [r2, #16]
  FLASH->CR |= FLASH_CR_PG;
 8006c64:	4b07      	ldr	r3, [pc, #28]	; (8006c84 <FLASH_Program_HalfWord+0x44>)
 8006c66:	691b      	ldr	r3, [r3, #16]
 8006c68:	4a06      	ldr	r2, [pc, #24]	; (8006c84 <FLASH_Program_HalfWord+0x44>)
 8006c6a:	f043 0301 	orr.w	r3, r3, #1
 8006c6e:	6113      	str	r3, [r2, #16]

  *(__IO uint16_t*)Address = Data;
 8006c70:	687b      	ldr	r3, [r7, #4]
 8006c72:	887a      	ldrh	r2, [r7, #2]
 8006c74:	801a      	strh	r2, [r3, #0]
}
 8006c76:	bf00      	nop
 8006c78:	370c      	adds	r7, #12
 8006c7a:	46bd      	mov	sp, r7
 8006c7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c80:	4770      	bx	lr
 8006c82:	bf00      	nop
 8006c84:	40023c00 	.word	0x40023c00

08006c88 <FLASH_Program_Byte>:
  * @param  Address specifies the address to be programmed.
  * @param  Data specifies the data to be programmed.
  * @retval None
  */
static void FLASH_Program_Byte(uint32_t Address, uint8_t Data)
{
 8006c88:	b480      	push	{r7}
 8006c8a:	b083      	sub	sp, #12
 8006c8c:	af00      	add	r7, sp, #0
 8006c8e:	6078      	str	r0, [r7, #4]
 8006c90:	460b      	mov	r3, r1
 8006c92:	70fb      	strb	r3, [r7, #3]
  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Address));
  
  /* If the previous operation is completed, proceed to program the new data */
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8006c94:	4b0c      	ldr	r3, [pc, #48]	; (8006cc8 <FLASH_Program_Byte+0x40>)
 8006c96:	691b      	ldr	r3, [r3, #16]
 8006c98:	4a0b      	ldr	r2, [pc, #44]	; (8006cc8 <FLASH_Program_Byte+0x40>)
 8006c9a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006c9e:	6113      	str	r3, [r2, #16]
  FLASH->CR |= FLASH_PSIZE_BYTE;
 8006ca0:	4b09      	ldr	r3, [pc, #36]	; (8006cc8 <FLASH_Program_Byte+0x40>)
 8006ca2:	4a09      	ldr	r2, [pc, #36]	; (8006cc8 <FLASH_Program_Byte+0x40>)
 8006ca4:	691b      	ldr	r3, [r3, #16]
 8006ca6:	6113      	str	r3, [r2, #16]
  FLASH->CR |= FLASH_CR_PG;
 8006ca8:	4b07      	ldr	r3, [pc, #28]	; (8006cc8 <FLASH_Program_Byte+0x40>)
 8006caa:	691b      	ldr	r3, [r3, #16]
 8006cac:	4a06      	ldr	r2, [pc, #24]	; (8006cc8 <FLASH_Program_Byte+0x40>)
 8006cae:	f043 0301 	orr.w	r3, r3, #1
 8006cb2:	6113      	str	r3, [r2, #16]

  *(__IO uint8_t*)Address = Data;
 8006cb4:	687b      	ldr	r3, [r7, #4]
 8006cb6:	78fa      	ldrb	r2, [r7, #3]
 8006cb8:	701a      	strb	r2, [r3, #0]
}
 8006cba:	bf00      	nop
 8006cbc:	370c      	adds	r7, #12
 8006cbe:	46bd      	mov	sp, r7
 8006cc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006cc4:	4770      	bx	lr
 8006cc6:	bf00      	nop
 8006cc8:	40023c00 	.word	0x40023c00

08006ccc <FLASH_SetErrorCode>:
/**
  * @brief  Set the specific FLASH error flag.
  * @retval None
  */
static void FLASH_SetErrorCode(void)
{ 
 8006ccc:	b480      	push	{r7}
 8006cce:	af00      	add	r7, sp, #0
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 8006cd0:	4b27      	ldr	r3, [pc, #156]	; (8006d70 <FLASH_SetErrorCode+0xa4>)
 8006cd2:	68db      	ldr	r3, [r3, #12]
 8006cd4:	f003 0310 	and.w	r3, r3, #16
 8006cd8:	2b00      	cmp	r3, #0
 8006cda:	d008      	beq.n	8006cee <FLASH_SetErrorCode+0x22>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 8006cdc:	4b25      	ldr	r3, [pc, #148]	; (8006d74 <FLASH_SetErrorCode+0xa8>)
 8006cde:	69db      	ldr	r3, [r3, #28]
 8006ce0:	f043 0310 	orr.w	r3, r3, #16
 8006ce4:	4a23      	ldr	r2, [pc, #140]	; (8006d74 <FLASH_SetErrorCode+0xa8>)
 8006ce6:	61d3      	str	r3, [r2, #28]
   
   /* Clear FLASH write protection error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 8006ce8:	4b21      	ldr	r3, [pc, #132]	; (8006d70 <FLASH_SetErrorCode+0xa4>)
 8006cea:	2210      	movs	r2, #16
 8006cec:	60da      	str	r2, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 8006cee:	4b20      	ldr	r3, [pc, #128]	; (8006d70 <FLASH_SetErrorCode+0xa4>)
 8006cf0:	68db      	ldr	r3, [r3, #12]
 8006cf2:	f003 0320 	and.w	r3, r3, #32
 8006cf6:	2b00      	cmp	r3, #0
 8006cf8:	d008      	beq.n	8006d0c <FLASH_SetErrorCode+0x40>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 8006cfa:	4b1e      	ldr	r3, [pc, #120]	; (8006d74 <FLASH_SetErrorCode+0xa8>)
 8006cfc:	69db      	ldr	r3, [r3, #28]
 8006cfe:	f043 0308 	orr.w	r3, r3, #8
 8006d02:	4a1c      	ldr	r2, [pc, #112]	; (8006d74 <FLASH_SetErrorCode+0xa8>)
 8006d04:	61d3      	str	r3, [r2, #28]
   
   /* Clear FLASH Programming alignment error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 8006d06:	4b1a      	ldr	r3, [pc, #104]	; (8006d70 <FLASH_SetErrorCode+0xa4>)
 8006d08:	2220      	movs	r2, #32
 8006d0a:	60da      	str	r2, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 8006d0c:	4b18      	ldr	r3, [pc, #96]	; (8006d70 <FLASH_SetErrorCode+0xa4>)
 8006d0e:	68db      	ldr	r3, [r3, #12]
 8006d10:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006d14:	2b00      	cmp	r3, #0
 8006d16:	d008      	beq.n	8006d2a <FLASH_SetErrorCode+0x5e>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 8006d18:	4b16      	ldr	r3, [pc, #88]	; (8006d74 <FLASH_SetErrorCode+0xa8>)
 8006d1a:	69db      	ldr	r3, [r3, #28]
 8006d1c:	f043 0304 	orr.w	r3, r3, #4
 8006d20:	4a14      	ldr	r2, [pc, #80]	; (8006d74 <FLASH_SetErrorCode+0xa8>)
 8006d22:	61d3      	str	r3, [r2, #28]
    
    /* Clear FLASH Programming parallelism error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 8006d24:	4b12      	ldr	r3, [pc, #72]	; (8006d70 <FLASH_SetErrorCode+0xa4>)
 8006d26:	2240      	movs	r2, #64	; 0x40
 8006d28:	60da      	str	r2, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGSERR) != RESET)
 8006d2a:	4b11      	ldr	r3, [pc, #68]	; (8006d70 <FLASH_SetErrorCode+0xa4>)
 8006d2c:	68db      	ldr	r3, [r3, #12]
 8006d2e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006d32:	2b00      	cmp	r3, #0
 8006d34:	d008      	beq.n	8006d48 <FLASH_SetErrorCode+0x7c>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 8006d36:	4b0f      	ldr	r3, [pc, #60]	; (8006d74 <FLASH_SetErrorCode+0xa8>)
 8006d38:	69db      	ldr	r3, [r3, #28]
 8006d3a:	f043 0302 	orr.w	r3, r3, #2
 8006d3e:	4a0d      	ldr	r2, [pc, #52]	; (8006d74 <FLASH_SetErrorCode+0xa8>)
 8006d40:	61d3      	str	r3, [r2, #28]
    
    /* Clear FLASH Programming sequence error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 8006d42:	4b0b      	ldr	r3, [pc, #44]	; (8006d70 <FLASH_SetErrorCode+0xa4>)
 8006d44:	2280      	movs	r2, #128	; 0x80
 8006d46:	60da      	str	r2, [r3, #12]
    
    /* Clear FLASH Proprietary readout protection error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
  }
#endif /* FLASH_SR_RDERR */  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 8006d48:	4b09      	ldr	r3, [pc, #36]	; (8006d70 <FLASH_SetErrorCode+0xa4>)
 8006d4a:	68db      	ldr	r3, [r3, #12]
 8006d4c:	f003 0302 	and.w	r3, r3, #2
 8006d50:	2b00      	cmp	r3, #0
 8006d52:	d008      	beq.n	8006d66 <FLASH_SetErrorCode+0x9a>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 8006d54:	4b07      	ldr	r3, [pc, #28]	; (8006d74 <FLASH_SetErrorCode+0xa8>)
 8006d56:	69db      	ldr	r3, [r3, #28]
 8006d58:	f043 0320 	orr.w	r3, r3, #32
 8006d5c:	4a05      	ldr	r2, [pc, #20]	; (8006d74 <FLASH_SetErrorCode+0xa8>)
 8006d5e:	61d3      	str	r3, [r2, #28]
    
    /* Clear FLASH Operation error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 8006d60:	4b03      	ldr	r3, [pc, #12]	; (8006d70 <FLASH_SetErrorCode+0xa4>)
 8006d62:	2202      	movs	r2, #2
 8006d64:	60da      	str	r2, [r3, #12]
  }
}
 8006d66:	bf00      	nop
 8006d68:	46bd      	mov	sp, r7
 8006d6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d6e:	4770      	bx	lr
 8006d70:	40023c00 	.word	0x40023c00
 8006d74:	20000668 	.word	0x20000668

08006d78 <FLASH_Erase_Sector>:
  *                                  the operation will be done by double word (64-bit)
  *
  * @retval None
  */
void FLASH_Erase_Sector(uint32_t Sector, uint8_t VoltageRange)
{
 8006d78:	b480      	push	{r7}
 8006d7a:	b085      	sub	sp, #20
 8006d7c:	af00      	add	r7, sp, #0
 8006d7e:	6078      	str	r0, [r7, #4]
 8006d80:	460b      	mov	r3, r1
 8006d82:	70fb      	strb	r3, [r7, #3]
  uint32_t tmp_psize = 0U;
 8006d84:	2300      	movs	r3, #0
 8006d86:	60fb      	str	r3, [r7, #12]

  /* Check the parameters */
  assert_param(IS_FLASH_SECTOR(Sector));
  assert_param(IS_VOLTAGERANGE(VoltageRange));

  if (VoltageRange == FLASH_VOLTAGE_RANGE_1)
 8006d88:	78fb      	ldrb	r3, [r7, #3]
 8006d8a:	2b00      	cmp	r3, #0
 8006d8c:	d102      	bne.n	8006d94 <FLASH_Erase_Sector+0x1c>
  {
    tmp_psize = FLASH_PSIZE_BYTE;
 8006d8e:	2300      	movs	r3, #0
 8006d90:	60fb      	str	r3, [r7, #12]
 8006d92:	e010      	b.n	8006db6 <FLASH_Erase_Sector+0x3e>
  }
  else if (VoltageRange == FLASH_VOLTAGE_RANGE_2)
 8006d94:	78fb      	ldrb	r3, [r7, #3]
 8006d96:	2b01      	cmp	r3, #1
 8006d98:	d103      	bne.n	8006da2 <FLASH_Erase_Sector+0x2a>
  {
    tmp_psize = FLASH_PSIZE_HALF_WORD;
 8006d9a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8006d9e:	60fb      	str	r3, [r7, #12]
 8006da0:	e009      	b.n	8006db6 <FLASH_Erase_Sector+0x3e>
  }
  else if (VoltageRange == FLASH_VOLTAGE_RANGE_3)
 8006da2:	78fb      	ldrb	r3, [r7, #3]
 8006da4:	2b02      	cmp	r3, #2
 8006da6:	d103      	bne.n	8006db0 <FLASH_Erase_Sector+0x38>
  {
    tmp_psize = FLASH_PSIZE_WORD;
 8006da8:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006dac:	60fb      	str	r3, [r7, #12]
 8006dae:	e002      	b.n	8006db6 <FLASH_Erase_Sector+0x3e>
  }
  else
  {
    tmp_psize = FLASH_PSIZE_DOUBLE_WORD;
 8006db0:	f44f 7340 	mov.w	r3, #768	; 0x300
 8006db4:	60fb      	str	r3, [r7, #12]
  }

  /* If the previous operation is completed, proceed to erase the sector */
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8006db6:	4b13      	ldr	r3, [pc, #76]	; (8006e04 <FLASH_Erase_Sector+0x8c>)
 8006db8:	691b      	ldr	r3, [r3, #16]
 8006dba:	4a12      	ldr	r2, [pc, #72]	; (8006e04 <FLASH_Erase_Sector+0x8c>)
 8006dbc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006dc0:	6113      	str	r3, [r2, #16]
  FLASH->CR |= tmp_psize;
 8006dc2:	4b10      	ldr	r3, [pc, #64]	; (8006e04 <FLASH_Erase_Sector+0x8c>)
 8006dc4:	691a      	ldr	r2, [r3, #16]
 8006dc6:	490f      	ldr	r1, [pc, #60]	; (8006e04 <FLASH_Erase_Sector+0x8c>)
 8006dc8:	68fb      	ldr	r3, [r7, #12]
 8006dca:	4313      	orrs	r3, r2
 8006dcc:	610b      	str	r3, [r1, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 8006dce:	4b0d      	ldr	r3, [pc, #52]	; (8006e04 <FLASH_Erase_Sector+0x8c>)
 8006dd0:	691b      	ldr	r3, [r3, #16]
 8006dd2:	4a0c      	ldr	r2, [pc, #48]	; (8006e04 <FLASH_Erase_Sector+0x8c>)
 8006dd4:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8006dd8:	6113      	str	r3, [r2, #16]
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 8006dda:	4b0a      	ldr	r3, [pc, #40]	; (8006e04 <FLASH_Erase_Sector+0x8c>)
 8006ddc:	691a      	ldr	r2, [r3, #16]
 8006dde:	687b      	ldr	r3, [r7, #4]
 8006de0:	00db      	lsls	r3, r3, #3
 8006de2:	4313      	orrs	r3, r2
 8006de4:	4a07      	ldr	r2, [pc, #28]	; (8006e04 <FLASH_Erase_Sector+0x8c>)
 8006de6:	f043 0302 	orr.w	r3, r3, #2
 8006dea:	6113      	str	r3, [r2, #16]
  FLASH->CR |= FLASH_CR_STRT;
 8006dec:	4b05      	ldr	r3, [pc, #20]	; (8006e04 <FLASH_Erase_Sector+0x8c>)
 8006dee:	691b      	ldr	r3, [r3, #16]
 8006df0:	4a04      	ldr	r2, [pc, #16]	; (8006e04 <FLASH_Erase_Sector+0x8c>)
 8006df2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006df6:	6113      	str	r3, [r2, #16]
}
 8006df8:	bf00      	nop
 8006dfa:	3714      	adds	r7, #20
 8006dfc:	46bd      	mov	sp, r7
 8006dfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e02:	4770      	bx	lr
 8006e04:	40023c00 	.word	0x40023c00

08006e08 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8006e08:	b480      	push	{r7}
 8006e0a:	b089      	sub	sp, #36	; 0x24
 8006e0c:	af00      	add	r7, sp, #0
 8006e0e:	6078      	str	r0, [r7, #4]
 8006e10:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8006e12:	2300      	movs	r3, #0
 8006e14:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8006e16:	2300      	movs	r3, #0
 8006e18:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 8006e1a:	2300      	movs	r3, #0
 8006e1c:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8006e1e:	2300      	movs	r3, #0
 8006e20:	61fb      	str	r3, [r7, #28]
 8006e22:	e16b      	b.n	80070fc <HAL_GPIO_Init+0x2f4>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8006e24:	2201      	movs	r2, #1
 8006e26:	69fb      	ldr	r3, [r7, #28]
 8006e28:	fa02 f303 	lsl.w	r3, r2, r3
 8006e2c:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8006e2e:	683b      	ldr	r3, [r7, #0]
 8006e30:	681b      	ldr	r3, [r3, #0]
 8006e32:	697a      	ldr	r2, [r7, #20]
 8006e34:	4013      	ands	r3, r2
 8006e36:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8006e38:	693a      	ldr	r2, [r7, #16]
 8006e3a:	697b      	ldr	r3, [r7, #20]
 8006e3c:	429a      	cmp	r2, r3
 8006e3e:	f040 815a 	bne.w	80070f6 <HAL_GPIO_Init+0x2ee>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8006e42:	683b      	ldr	r3, [r7, #0]
 8006e44:	685b      	ldr	r3, [r3, #4]
 8006e46:	f003 0303 	and.w	r3, r3, #3
 8006e4a:	2b01      	cmp	r3, #1
 8006e4c:	d005      	beq.n	8006e5a <HAL_GPIO_Init+0x52>
          (GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8006e4e:	683b      	ldr	r3, [r7, #0]
 8006e50:	685b      	ldr	r3, [r3, #4]
 8006e52:	f003 0303 	and.w	r3, r3, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8006e56:	2b02      	cmp	r3, #2
 8006e58:	d130      	bne.n	8006ebc <HAL_GPIO_Init+0xb4>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8006e5a:	687b      	ldr	r3, [r7, #4]
 8006e5c:	689b      	ldr	r3, [r3, #8]
 8006e5e:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006e60:	69fb      	ldr	r3, [r7, #28]
 8006e62:	005b      	lsls	r3, r3, #1
 8006e64:	2203      	movs	r2, #3
 8006e66:	fa02 f303 	lsl.w	r3, r2, r3
 8006e6a:	43db      	mvns	r3, r3
 8006e6c:	69ba      	ldr	r2, [r7, #24]
 8006e6e:	4013      	ands	r3, r2
 8006e70:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8006e72:	683b      	ldr	r3, [r7, #0]
 8006e74:	68da      	ldr	r2, [r3, #12]
 8006e76:	69fb      	ldr	r3, [r7, #28]
 8006e78:	005b      	lsls	r3, r3, #1
 8006e7a:	fa02 f303 	lsl.w	r3, r2, r3
 8006e7e:	69ba      	ldr	r2, [r7, #24]
 8006e80:	4313      	orrs	r3, r2
 8006e82:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8006e84:	687b      	ldr	r3, [r7, #4]
 8006e86:	69ba      	ldr	r2, [r7, #24]
 8006e88:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8006e8a:	687b      	ldr	r3, [r7, #4]
 8006e8c:	685b      	ldr	r3, [r3, #4]
 8006e8e:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8006e90:	2201      	movs	r2, #1
 8006e92:	69fb      	ldr	r3, [r7, #28]
 8006e94:	fa02 f303 	lsl.w	r3, r2, r3
 8006e98:	43db      	mvns	r3, r3
 8006e9a:	69ba      	ldr	r2, [r7, #24]
 8006e9c:	4013      	ands	r3, r2
 8006e9e:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8006ea0:	683b      	ldr	r3, [r7, #0]
 8006ea2:	685b      	ldr	r3, [r3, #4]
 8006ea4:	091b      	lsrs	r3, r3, #4
 8006ea6:	f003 0201 	and.w	r2, r3, #1
 8006eaa:	69fb      	ldr	r3, [r7, #28]
 8006eac:	fa02 f303 	lsl.w	r3, r2, r3
 8006eb0:	69ba      	ldr	r2, [r7, #24]
 8006eb2:	4313      	orrs	r3, r2
 8006eb4:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8006eb6:	687b      	ldr	r3, [r7, #4]
 8006eb8:	69ba      	ldr	r2, [r7, #24]
 8006eba:	605a      	str	r2, [r3, #4]
       }

      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8006ebc:	683b      	ldr	r3, [r7, #0]
 8006ebe:	685b      	ldr	r3, [r3, #4]
 8006ec0:	f003 0303 	and.w	r3, r3, #3
 8006ec4:	2b03      	cmp	r3, #3
 8006ec6:	d017      	beq.n	8006ef8 <HAL_GPIO_Init+0xf0>
      {
        /* Check the parameters */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
        
        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8006ec8:	687b      	ldr	r3, [r7, #4]
 8006eca:	68db      	ldr	r3, [r3, #12]
 8006ecc:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8006ece:	69fb      	ldr	r3, [r7, #28]
 8006ed0:	005b      	lsls	r3, r3, #1
 8006ed2:	2203      	movs	r2, #3
 8006ed4:	fa02 f303 	lsl.w	r3, r2, r3
 8006ed8:	43db      	mvns	r3, r3
 8006eda:	69ba      	ldr	r2, [r7, #24]
 8006edc:	4013      	ands	r3, r2
 8006ede:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8006ee0:	683b      	ldr	r3, [r7, #0]
 8006ee2:	689a      	ldr	r2, [r3, #8]
 8006ee4:	69fb      	ldr	r3, [r7, #28]
 8006ee6:	005b      	lsls	r3, r3, #1
 8006ee8:	fa02 f303 	lsl.w	r3, r2, r3
 8006eec:	69ba      	ldr	r2, [r7, #24]
 8006eee:	4313      	orrs	r3, r2
 8006ef0:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 8006ef2:	687b      	ldr	r3, [r7, #4]
 8006ef4:	69ba      	ldr	r2, [r7, #24]
 8006ef6:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8006ef8:	683b      	ldr	r3, [r7, #0]
 8006efa:	685b      	ldr	r3, [r3, #4]
 8006efc:	f003 0303 	and.w	r3, r3, #3
 8006f00:	2b02      	cmp	r3, #2
 8006f02:	d123      	bne.n	8006f4c <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8006f04:	69fb      	ldr	r3, [r7, #28]
 8006f06:	08da      	lsrs	r2, r3, #3
 8006f08:	687b      	ldr	r3, [r7, #4]
 8006f0a:	3208      	adds	r2, #8
 8006f0c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8006f10:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8006f12:	69fb      	ldr	r3, [r7, #28]
 8006f14:	f003 0307 	and.w	r3, r3, #7
 8006f18:	009b      	lsls	r3, r3, #2
 8006f1a:	220f      	movs	r2, #15
 8006f1c:	fa02 f303 	lsl.w	r3, r2, r3
 8006f20:	43db      	mvns	r3, r3
 8006f22:	69ba      	ldr	r2, [r7, #24]
 8006f24:	4013      	ands	r3, r2
 8006f26:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8006f28:	683b      	ldr	r3, [r7, #0]
 8006f2a:	691a      	ldr	r2, [r3, #16]
 8006f2c:	69fb      	ldr	r3, [r7, #28]
 8006f2e:	f003 0307 	and.w	r3, r3, #7
 8006f32:	009b      	lsls	r3, r3, #2
 8006f34:	fa02 f303 	lsl.w	r3, r2, r3
 8006f38:	69ba      	ldr	r2, [r7, #24]
 8006f3a:	4313      	orrs	r3, r2
 8006f3c:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8006f3e:	69fb      	ldr	r3, [r7, #28]
 8006f40:	08da      	lsrs	r2, r3, #3
 8006f42:	687b      	ldr	r3, [r7, #4]
 8006f44:	3208      	adds	r2, #8
 8006f46:	69b9      	ldr	r1, [r7, #24]
 8006f48:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8006f4c:	687b      	ldr	r3, [r7, #4]
 8006f4e:	681b      	ldr	r3, [r3, #0]
 8006f50:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8006f52:	69fb      	ldr	r3, [r7, #28]
 8006f54:	005b      	lsls	r3, r3, #1
 8006f56:	2203      	movs	r2, #3
 8006f58:	fa02 f303 	lsl.w	r3, r2, r3
 8006f5c:	43db      	mvns	r3, r3
 8006f5e:	69ba      	ldr	r2, [r7, #24]
 8006f60:	4013      	ands	r3, r2
 8006f62:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8006f64:	683b      	ldr	r3, [r7, #0]
 8006f66:	685b      	ldr	r3, [r3, #4]
 8006f68:	f003 0203 	and.w	r2, r3, #3
 8006f6c:	69fb      	ldr	r3, [r7, #28]
 8006f6e:	005b      	lsls	r3, r3, #1
 8006f70:	fa02 f303 	lsl.w	r3, r2, r3
 8006f74:	69ba      	ldr	r2, [r7, #24]
 8006f76:	4313      	orrs	r3, r2
 8006f78:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8006f7a:	687b      	ldr	r3, [r7, #4]
 8006f7c:	69ba      	ldr	r2, [r7, #24]
 8006f7e:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8006f80:	683b      	ldr	r3, [r7, #0]
 8006f82:	685b      	ldr	r3, [r3, #4]
 8006f84:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8006f88:	2b00      	cmp	r3, #0
 8006f8a:	f000 80b4 	beq.w	80070f6 <HAL_GPIO_Init+0x2ee>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006f8e:	2300      	movs	r3, #0
 8006f90:	60fb      	str	r3, [r7, #12]
 8006f92:	4b60      	ldr	r3, [pc, #384]	; (8007114 <HAL_GPIO_Init+0x30c>)
 8006f94:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006f96:	4a5f      	ldr	r2, [pc, #380]	; (8007114 <HAL_GPIO_Init+0x30c>)
 8006f98:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8006f9c:	6453      	str	r3, [r2, #68]	; 0x44
 8006f9e:	4b5d      	ldr	r3, [pc, #372]	; (8007114 <HAL_GPIO_Init+0x30c>)
 8006fa0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006fa2:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8006fa6:	60fb      	str	r3, [r7, #12]
 8006fa8:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8006faa:	4a5b      	ldr	r2, [pc, #364]	; (8007118 <HAL_GPIO_Init+0x310>)
 8006fac:	69fb      	ldr	r3, [r7, #28]
 8006fae:	089b      	lsrs	r3, r3, #2
 8006fb0:	3302      	adds	r3, #2
 8006fb2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8006fb6:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006fb8:	69fb      	ldr	r3, [r7, #28]
 8006fba:	f003 0303 	and.w	r3, r3, #3
 8006fbe:	009b      	lsls	r3, r3, #2
 8006fc0:	220f      	movs	r2, #15
 8006fc2:	fa02 f303 	lsl.w	r3, r2, r3
 8006fc6:	43db      	mvns	r3, r3
 8006fc8:	69ba      	ldr	r2, [r7, #24]
 8006fca:	4013      	ands	r3, r2
 8006fcc:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006fce:	687b      	ldr	r3, [r7, #4]
 8006fd0:	4a52      	ldr	r2, [pc, #328]	; (800711c <HAL_GPIO_Init+0x314>)
 8006fd2:	4293      	cmp	r3, r2
 8006fd4:	d02b      	beq.n	800702e <HAL_GPIO_Init+0x226>
 8006fd6:	687b      	ldr	r3, [r7, #4]
 8006fd8:	4a51      	ldr	r2, [pc, #324]	; (8007120 <HAL_GPIO_Init+0x318>)
 8006fda:	4293      	cmp	r3, r2
 8006fdc:	d025      	beq.n	800702a <HAL_GPIO_Init+0x222>
 8006fde:	687b      	ldr	r3, [r7, #4]
 8006fe0:	4a50      	ldr	r2, [pc, #320]	; (8007124 <HAL_GPIO_Init+0x31c>)
 8006fe2:	4293      	cmp	r3, r2
 8006fe4:	d01f      	beq.n	8007026 <HAL_GPIO_Init+0x21e>
 8006fe6:	687b      	ldr	r3, [r7, #4]
 8006fe8:	4a4f      	ldr	r2, [pc, #316]	; (8007128 <HAL_GPIO_Init+0x320>)
 8006fea:	4293      	cmp	r3, r2
 8006fec:	d019      	beq.n	8007022 <HAL_GPIO_Init+0x21a>
 8006fee:	687b      	ldr	r3, [r7, #4]
 8006ff0:	4a4e      	ldr	r2, [pc, #312]	; (800712c <HAL_GPIO_Init+0x324>)
 8006ff2:	4293      	cmp	r3, r2
 8006ff4:	d013      	beq.n	800701e <HAL_GPIO_Init+0x216>
 8006ff6:	687b      	ldr	r3, [r7, #4]
 8006ff8:	4a4d      	ldr	r2, [pc, #308]	; (8007130 <HAL_GPIO_Init+0x328>)
 8006ffa:	4293      	cmp	r3, r2
 8006ffc:	d00d      	beq.n	800701a <HAL_GPIO_Init+0x212>
 8006ffe:	687b      	ldr	r3, [r7, #4]
 8007000:	4a4c      	ldr	r2, [pc, #304]	; (8007134 <HAL_GPIO_Init+0x32c>)
 8007002:	4293      	cmp	r3, r2
 8007004:	d007      	beq.n	8007016 <HAL_GPIO_Init+0x20e>
 8007006:	687b      	ldr	r3, [r7, #4]
 8007008:	4a4b      	ldr	r2, [pc, #300]	; (8007138 <HAL_GPIO_Init+0x330>)
 800700a:	4293      	cmp	r3, r2
 800700c:	d101      	bne.n	8007012 <HAL_GPIO_Init+0x20a>
 800700e:	2307      	movs	r3, #7
 8007010:	e00e      	b.n	8007030 <HAL_GPIO_Init+0x228>
 8007012:	2308      	movs	r3, #8
 8007014:	e00c      	b.n	8007030 <HAL_GPIO_Init+0x228>
 8007016:	2306      	movs	r3, #6
 8007018:	e00a      	b.n	8007030 <HAL_GPIO_Init+0x228>
 800701a:	2305      	movs	r3, #5
 800701c:	e008      	b.n	8007030 <HAL_GPIO_Init+0x228>
 800701e:	2304      	movs	r3, #4
 8007020:	e006      	b.n	8007030 <HAL_GPIO_Init+0x228>
 8007022:	2303      	movs	r3, #3
 8007024:	e004      	b.n	8007030 <HAL_GPIO_Init+0x228>
 8007026:	2302      	movs	r3, #2
 8007028:	e002      	b.n	8007030 <HAL_GPIO_Init+0x228>
 800702a:	2301      	movs	r3, #1
 800702c:	e000      	b.n	8007030 <HAL_GPIO_Init+0x228>
 800702e:	2300      	movs	r3, #0
 8007030:	69fa      	ldr	r2, [r7, #28]
 8007032:	f002 0203 	and.w	r2, r2, #3
 8007036:	0092      	lsls	r2, r2, #2
 8007038:	4093      	lsls	r3, r2
 800703a:	69ba      	ldr	r2, [r7, #24]
 800703c:	4313      	orrs	r3, r2
 800703e:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8007040:	4935      	ldr	r1, [pc, #212]	; (8007118 <HAL_GPIO_Init+0x310>)
 8007042:	69fb      	ldr	r3, [r7, #28]
 8007044:	089b      	lsrs	r3, r3, #2
 8007046:	3302      	adds	r3, #2
 8007048:	69ba      	ldr	r2, [r7, #24]
 800704a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800704e:	4b3b      	ldr	r3, [pc, #236]	; (800713c <HAL_GPIO_Init+0x334>)
 8007050:	681b      	ldr	r3, [r3, #0]
 8007052:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8007054:	693b      	ldr	r3, [r7, #16]
 8007056:	43db      	mvns	r3, r3
 8007058:	69ba      	ldr	r2, [r7, #24]
 800705a:	4013      	ands	r3, r2
 800705c:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800705e:	683b      	ldr	r3, [r7, #0]
 8007060:	685b      	ldr	r3, [r3, #4]
 8007062:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8007066:	2b00      	cmp	r3, #0
 8007068:	d003      	beq.n	8007072 <HAL_GPIO_Init+0x26a>
        {
          temp |= iocurrent;
 800706a:	69ba      	ldr	r2, [r7, #24]
 800706c:	693b      	ldr	r3, [r7, #16]
 800706e:	4313      	orrs	r3, r2
 8007070:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8007072:	4a32      	ldr	r2, [pc, #200]	; (800713c <HAL_GPIO_Init+0x334>)
 8007074:	69bb      	ldr	r3, [r7, #24]
 8007076:	6013      	str	r3, [r2, #0]

        temp = EXTI->EMR;
 8007078:	4b30      	ldr	r3, [pc, #192]	; (800713c <HAL_GPIO_Init+0x334>)
 800707a:	685b      	ldr	r3, [r3, #4]
 800707c:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800707e:	693b      	ldr	r3, [r7, #16]
 8007080:	43db      	mvns	r3, r3
 8007082:	69ba      	ldr	r2, [r7, #24]
 8007084:	4013      	ands	r3, r2
 8007086:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8007088:	683b      	ldr	r3, [r7, #0]
 800708a:	685b      	ldr	r3, [r3, #4]
 800708c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007090:	2b00      	cmp	r3, #0
 8007092:	d003      	beq.n	800709c <HAL_GPIO_Init+0x294>
        {
          temp |= iocurrent;
 8007094:	69ba      	ldr	r2, [r7, #24]
 8007096:	693b      	ldr	r3, [r7, #16]
 8007098:	4313      	orrs	r3, r2
 800709a:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 800709c:	4a27      	ldr	r2, [pc, #156]	; (800713c <HAL_GPIO_Init+0x334>)
 800709e:	69bb      	ldr	r3, [r7, #24]
 80070a0:	6053      	str	r3, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80070a2:	4b26      	ldr	r3, [pc, #152]	; (800713c <HAL_GPIO_Init+0x334>)
 80070a4:	689b      	ldr	r3, [r3, #8]
 80070a6:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80070a8:	693b      	ldr	r3, [r7, #16]
 80070aa:	43db      	mvns	r3, r3
 80070ac:	69ba      	ldr	r2, [r7, #24]
 80070ae:	4013      	ands	r3, r2
 80070b0:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80070b2:	683b      	ldr	r3, [r7, #0]
 80070b4:	685b      	ldr	r3, [r3, #4]
 80070b6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80070ba:	2b00      	cmp	r3, #0
 80070bc:	d003      	beq.n	80070c6 <HAL_GPIO_Init+0x2be>
        {
          temp |= iocurrent;
 80070be:	69ba      	ldr	r2, [r7, #24]
 80070c0:	693b      	ldr	r3, [r7, #16]
 80070c2:	4313      	orrs	r3, r2
 80070c4:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 80070c6:	4a1d      	ldr	r2, [pc, #116]	; (800713c <HAL_GPIO_Init+0x334>)
 80070c8:	69bb      	ldr	r3, [r7, #24]
 80070ca:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 80070cc:	4b1b      	ldr	r3, [pc, #108]	; (800713c <HAL_GPIO_Init+0x334>)
 80070ce:	68db      	ldr	r3, [r3, #12]
 80070d0:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80070d2:	693b      	ldr	r3, [r7, #16]
 80070d4:	43db      	mvns	r3, r3
 80070d6:	69ba      	ldr	r2, [r7, #24]
 80070d8:	4013      	ands	r3, r2
 80070da:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80070dc:	683b      	ldr	r3, [r7, #0]
 80070de:	685b      	ldr	r3, [r3, #4]
 80070e0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80070e4:	2b00      	cmp	r3, #0
 80070e6:	d003      	beq.n	80070f0 <HAL_GPIO_Init+0x2e8>
        {
          temp |= iocurrent;
 80070e8:	69ba      	ldr	r2, [r7, #24]
 80070ea:	693b      	ldr	r3, [r7, #16]
 80070ec:	4313      	orrs	r3, r2
 80070ee:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 80070f0:	4a12      	ldr	r2, [pc, #72]	; (800713c <HAL_GPIO_Init+0x334>)
 80070f2:	69bb      	ldr	r3, [r7, #24]
 80070f4:	60d3      	str	r3, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80070f6:	69fb      	ldr	r3, [r7, #28]
 80070f8:	3301      	adds	r3, #1
 80070fa:	61fb      	str	r3, [r7, #28]
 80070fc:	69fb      	ldr	r3, [r7, #28]
 80070fe:	2b0f      	cmp	r3, #15
 8007100:	f67f ae90 	bls.w	8006e24 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8007104:	bf00      	nop
 8007106:	bf00      	nop
 8007108:	3724      	adds	r7, #36	; 0x24
 800710a:	46bd      	mov	sp, r7
 800710c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007110:	4770      	bx	lr
 8007112:	bf00      	nop
 8007114:	40023800 	.word	0x40023800
 8007118:	40013800 	.word	0x40013800
 800711c:	40020000 	.word	0x40020000
 8007120:	40020400 	.word	0x40020400
 8007124:	40020800 	.word	0x40020800
 8007128:	40020c00 	.word	0x40020c00
 800712c:	40021000 	.word	0x40021000
 8007130:	40021400 	.word	0x40021400
 8007134:	40021800 	.word	0x40021800
 8007138:	40021c00 	.word	0x40021c00
 800713c:	40013c00 	.word	0x40013c00

08007140 <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 8007140:	b480      	push	{r7}
 8007142:	b085      	sub	sp, #20
 8007144:	af00      	add	r7, sp, #0
 8007146:	6078      	str	r0, [r7, #4]
 8007148:	460b      	mov	r3, r1
 800714a:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800714c:	687b      	ldr	r3, [r7, #4]
 800714e:	691a      	ldr	r2, [r3, #16]
 8007150:	887b      	ldrh	r3, [r7, #2]
 8007152:	4013      	ands	r3, r2
 8007154:	2b00      	cmp	r3, #0
 8007156:	d002      	beq.n	800715e <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 8007158:	2301      	movs	r3, #1
 800715a:	73fb      	strb	r3, [r7, #15]
 800715c:	e001      	b.n	8007162 <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 800715e:	2300      	movs	r3, #0
 8007160:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 8007162:	7bfb      	ldrb	r3, [r7, #15]
}
 8007164:	4618      	mov	r0, r3
 8007166:	3714      	adds	r7, #20
 8007168:	46bd      	mov	sp, r7
 800716a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800716e:	4770      	bx	lr

08007170 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8007170:	b480      	push	{r7}
 8007172:	b083      	sub	sp, #12
 8007174:	af00      	add	r7, sp, #0
 8007176:	6078      	str	r0, [r7, #4]
 8007178:	460b      	mov	r3, r1
 800717a:	807b      	strh	r3, [r7, #2]
 800717c:	4613      	mov	r3, r2
 800717e:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8007180:	787b      	ldrb	r3, [r7, #1]
 8007182:	2b00      	cmp	r3, #0
 8007184:	d003      	beq.n	800718e <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 8007186:	887a      	ldrh	r2, [r7, #2]
 8007188:	687b      	ldr	r3, [r7, #4]
 800718a:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 800718c:	e003      	b.n	8007196 <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800718e:	887b      	ldrh	r3, [r7, #2]
 8007190:	041a      	lsls	r2, r3, #16
 8007192:	687b      	ldr	r3, [r7, #4]
 8007194:	619a      	str	r2, [r3, #24]
}
 8007196:	bf00      	nop
 8007198:	370c      	adds	r7, #12
 800719a:	46bd      	mov	sp, r7
 800719c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071a0:	4770      	bx	lr
	...

080071a4 <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 80071a4:	b580      	push	{r7, lr}
 80071a6:	b084      	sub	sp, #16
 80071a8:	af00      	add	r7, sp, #0
 80071aa:	6078      	str	r0, [r7, #4]
  uint32_t freqrange;
  uint32_t pclk1;

  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 80071ac:	687b      	ldr	r3, [r7, #4]
 80071ae:	2b00      	cmp	r3, #0
 80071b0:	d101      	bne.n	80071b6 <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 80071b2:	2301      	movs	r3, #1
 80071b4:	e12b      	b.n	800740e <HAL_I2C_Init+0x26a>
  assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 80071b6:	687b      	ldr	r3, [r7, #4]
 80071b8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80071bc:	b2db      	uxtb	r3, r3
 80071be:	2b00      	cmp	r3, #0
 80071c0:	d106      	bne.n	80071d0 <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 80071c2:	687b      	ldr	r3, [r7, #4]
 80071c4:	2200      	movs	r2, #0
 80071c6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_I2C_MspInit(hi2c);
 80071ca:	6878      	ldr	r0, [r7, #4]
 80071cc:	f7ff f9b8 	bl	8006540 <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 80071d0:	687b      	ldr	r3, [r7, #4]
 80071d2:	2224      	movs	r2, #36	; 0x24
 80071d4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 80071d8:	687b      	ldr	r3, [r7, #4]
 80071da:	681b      	ldr	r3, [r3, #0]
 80071dc:	681a      	ldr	r2, [r3, #0]
 80071de:	687b      	ldr	r3, [r7, #4]
 80071e0:	681b      	ldr	r3, [r3, #0]
 80071e2:	f022 0201 	bic.w	r2, r2, #1
 80071e6:	601a      	str	r2, [r3, #0]

  /*Reset I2C*/
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80071e8:	687b      	ldr	r3, [r7, #4]
 80071ea:	681b      	ldr	r3, [r3, #0]
 80071ec:	681a      	ldr	r2, [r3, #0]
 80071ee:	687b      	ldr	r3, [r7, #4]
 80071f0:	681b      	ldr	r3, [r3, #0]
 80071f2:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80071f6:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 80071f8:	687b      	ldr	r3, [r7, #4]
 80071fa:	681b      	ldr	r3, [r3, #0]
 80071fc:	681a      	ldr	r2, [r3, #0]
 80071fe:	687b      	ldr	r3, [r7, #4]
 8007200:	681b      	ldr	r3, [r3, #0]
 8007202:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8007206:	601a      	str	r2, [r3, #0]

  /* Get PCLK1 frequency */
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8007208:	f001 f992 	bl	8008530 <HAL_RCC_GetPCLK1Freq>
 800720c:	60f8      	str	r0, [r7, #12]

  /* Check the minimum allowed PCLK1 frequency */
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800720e:	687b      	ldr	r3, [r7, #4]
 8007210:	685b      	ldr	r3, [r3, #4]
 8007212:	4a81      	ldr	r2, [pc, #516]	; (8007418 <HAL_I2C_Init+0x274>)
 8007214:	4293      	cmp	r3, r2
 8007216:	d807      	bhi.n	8007228 <HAL_I2C_Init+0x84>
 8007218:	68fb      	ldr	r3, [r7, #12]
 800721a:	4a80      	ldr	r2, [pc, #512]	; (800741c <HAL_I2C_Init+0x278>)
 800721c:	4293      	cmp	r3, r2
 800721e:	bf94      	ite	ls
 8007220:	2301      	movls	r3, #1
 8007222:	2300      	movhi	r3, #0
 8007224:	b2db      	uxtb	r3, r3
 8007226:	e006      	b.n	8007236 <HAL_I2C_Init+0x92>
 8007228:	68fb      	ldr	r3, [r7, #12]
 800722a:	4a7d      	ldr	r2, [pc, #500]	; (8007420 <HAL_I2C_Init+0x27c>)
 800722c:	4293      	cmp	r3, r2
 800722e:	bf94      	ite	ls
 8007230:	2301      	movls	r3, #1
 8007232:	2300      	movhi	r3, #0
 8007234:	b2db      	uxtb	r3, r3
 8007236:	2b00      	cmp	r3, #0
 8007238:	d001      	beq.n	800723e <HAL_I2C_Init+0x9a>
  {
    return HAL_ERROR;
 800723a:	2301      	movs	r3, #1
 800723c:	e0e7      	b.n	800740e <HAL_I2C_Init+0x26a>
  }

  /* Calculate frequency range */
  freqrange = I2C_FREQRANGE(pclk1);
 800723e:	68fb      	ldr	r3, [r7, #12]
 8007240:	4a78      	ldr	r2, [pc, #480]	; (8007424 <HAL_I2C_Init+0x280>)
 8007242:	fba2 2303 	umull	r2, r3, r2, r3
 8007246:	0c9b      	lsrs	r3, r3, #18
 8007248:	60bb      	str	r3, [r7, #8]

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Frequency range */
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800724a:	687b      	ldr	r3, [r7, #4]
 800724c:	681b      	ldr	r3, [r3, #0]
 800724e:	685b      	ldr	r3, [r3, #4]
 8007250:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8007254:	687b      	ldr	r3, [r7, #4]
 8007256:	681b      	ldr	r3, [r3, #0]
 8007258:	68ba      	ldr	r2, [r7, #8]
 800725a:	430a      	orrs	r2, r1
 800725c:	605a      	str	r2, [r3, #4]

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800725e:	687b      	ldr	r3, [r7, #4]
 8007260:	681b      	ldr	r3, [r3, #0]
 8007262:	6a1b      	ldr	r3, [r3, #32]
 8007264:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8007268:	687b      	ldr	r3, [r7, #4]
 800726a:	685b      	ldr	r3, [r3, #4]
 800726c:	4a6a      	ldr	r2, [pc, #424]	; (8007418 <HAL_I2C_Init+0x274>)
 800726e:	4293      	cmp	r3, r2
 8007270:	d802      	bhi.n	8007278 <HAL_I2C_Init+0xd4>
 8007272:	68bb      	ldr	r3, [r7, #8]
 8007274:	3301      	adds	r3, #1
 8007276:	e009      	b.n	800728c <HAL_I2C_Init+0xe8>
 8007278:	68bb      	ldr	r3, [r7, #8]
 800727a:	f44f 7296 	mov.w	r2, #300	; 0x12c
 800727e:	fb02 f303 	mul.w	r3, r2, r3
 8007282:	4a69      	ldr	r2, [pc, #420]	; (8007428 <HAL_I2C_Init+0x284>)
 8007284:	fba2 2303 	umull	r2, r3, r2, r3
 8007288:	099b      	lsrs	r3, r3, #6
 800728a:	3301      	adds	r3, #1
 800728c:	687a      	ldr	r2, [r7, #4]
 800728e:	6812      	ldr	r2, [r2, #0]
 8007290:	430b      	orrs	r3, r1
 8007292:	6213      	str	r3, [r2, #32]

  /*---------------------------- I2Cx CCR Configuration ----------------------*/
  /* Configure I2Cx: Speed */
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8007294:	687b      	ldr	r3, [r7, #4]
 8007296:	681b      	ldr	r3, [r3, #0]
 8007298:	69db      	ldr	r3, [r3, #28]
 800729a:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 800729e:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 80072a2:	687b      	ldr	r3, [r7, #4]
 80072a4:	685b      	ldr	r3, [r3, #4]
 80072a6:	495c      	ldr	r1, [pc, #368]	; (8007418 <HAL_I2C_Init+0x274>)
 80072a8:	428b      	cmp	r3, r1
 80072aa:	d819      	bhi.n	80072e0 <HAL_I2C_Init+0x13c>
 80072ac:	68fb      	ldr	r3, [r7, #12]
 80072ae:	1e59      	subs	r1, r3, #1
 80072b0:	687b      	ldr	r3, [r7, #4]
 80072b2:	685b      	ldr	r3, [r3, #4]
 80072b4:	005b      	lsls	r3, r3, #1
 80072b6:	fbb1 f3f3 	udiv	r3, r1, r3
 80072ba:	1c59      	adds	r1, r3, #1
 80072bc:	f640 73fc 	movw	r3, #4092	; 0xffc
 80072c0:	400b      	ands	r3, r1
 80072c2:	2b00      	cmp	r3, #0
 80072c4:	d00a      	beq.n	80072dc <HAL_I2C_Init+0x138>
 80072c6:	68fb      	ldr	r3, [r7, #12]
 80072c8:	1e59      	subs	r1, r3, #1
 80072ca:	687b      	ldr	r3, [r7, #4]
 80072cc:	685b      	ldr	r3, [r3, #4]
 80072ce:	005b      	lsls	r3, r3, #1
 80072d0:	fbb1 f3f3 	udiv	r3, r1, r3
 80072d4:	3301      	adds	r3, #1
 80072d6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80072da:	e051      	b.n	8007380 <HAL_I2C_Init+0x1dc>
 80072dc:	2304      	movs	r3, #4
 80072de:	e04f      	b.n	8007380 <HAL_I2C_Init+0x1dc>
 80072e0:	687b      	ldr	r3, [r7, #4]
 80072e2:	689b      	ldr	r3, [r3, #8]
 80072e4:	2b00      	cmp	r3, #0
 80072e6:	d111      	bne.n	800730c <HAL_I2C_Init+0x168>
 80072e8:	68fb      	ldr	r3, [r7, #12]
 80072ea:	1e58      	subs	r0, r3, #1
 80072ec:	687b      	ldr	r3, [r7, #4]
 80072ee:	6859      	ldr	r1, [r3, #4]
 80072f0:	460b      	mov	r3, r1
 80072f2:	005b      	lsls	r3, r3, #1
 80072f4:	440b      	add	r3, r1
 80072f6:	fbb0 f3f3 	udiv	r3, r0, r3
 80072fa:	3301      	adds	r3, #1
 80072fc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007300:	2b00      	cmp	r3, #0
 8007302:	bf0c      	ite	eq
 8007304:	2301      	moveq	r3, #1
 8007306:	2300      	movne	r3, #0
 8007308:	b2db      	uxtb	r3, r3
 800730a:	e012      	b.n	8007332 <HAL_I2C_Init+0x18e>
 800730c:	68fb      	ldr	r3, [r7, #12]
 800730e:	1e58      	subs	r0, r3, #1
 8007310:	687b      	ldr	r3, [r7, #4]
 8007312:	6859      	ldr	r1, [r3, #4]
 8007314:	460b      	mov	r3, r1
 8007316:	009b      	lsls	r3, r3, #2
 8007318:	440b      	add	r3, r1
 800731a:	0099      	lsls	r1, r3, #2
 800731c:	440b      	add	r3, r1
 800731e:	fbb0 f3f3 	udiv	r3, r0, r3
 8007322:	3301      	adds	r3, #1
 8007324:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007328:	2b00      	cmp	r3, #0
 800732a:	bf0c      	ite	eq
 800732c:	2301      	moveq	r3, #1
 800732e:	2300      	movne	r3, #0
 8007330:	b2db      	uxtb	r3, r3
 8007332:	2b00      	cmp	r3, #0
 8007334:	d001      	beq.n	800733a <HAL_I2C_Init+0x196>
 8007336:	2301      	movs	r3, #1
 8007338:	e022      	b.n	8007380 <HAL_I2C_Init+0x1dc>
 800733a:	687b      	ldr	r3, [r7, #4]
 800733c:	689b      	ldr	r3, [r3, #8]
 800733e:	2b00      	cmp	r3, #0
 8007340:	d10e      	bne.n	8007360 <HAL_I2C_Init+0x1bc>
 8007342:	68fb      	ldr	r3, [r7, #12]
 8007344:	1e58      	subs	r0, r3, #1
 8007346:	687b      	ldr	r3, [r7, #4]
 8007348:	6859      	ldr	r1, [r3, #4]
 800734a:	460b      	mov	r3, r1
 800734c:	005b      	lsls	r3, r3, #1
 800734e:	440b      	add	r3, r1
 8007350:	fbb0 f3f3 	udiv	r3, r0, r3
 8007354:	3301      	adds	r3, #1
 8007356:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800735a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800735e:	e00f      	b.n	8007380 <HAL_I2C_Init+0x1dc>
 8007360:	68fb      	ldr	r3, [r7, #12]
 8007362:	1e58      	subs	r0, r3, #1
 8007364:	687b      	ldr	r3, [r7, #4]
 8007366:	6859      	ldr	r1, [r3, #4]
 8007368:	460b      	mov	r3, r1
 800736a:	009b      	lsls	r3, r3, #2
 800736c:	440b      	add	r3, r1
 800736e:	0099      	lsls	r1, r3, #2
 8007370:	440b      	add	r3, r1
 8007372:	fbb0 f3f3 	udiv	r3, r0, r3
 8007376:	3301      	adds	r3, #1
 8007378:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800737c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8007380:	6879      	ldr	r1, [r7, #4]
 8007382:	6809      	ldr	r1, [r1, #0]
 8007384:	4313      	orrs	r3, r2
 8007386:	61cb      	str	r3, [r1, #28]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8007388:	687b      	ldr	r3, [r7, #4]
 800738a:	681b      	ldr	r3, [r3, #0]
 800738c:	681b      	ldr	r3, [r3, #0]
 800738e:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 8007392:	687b      	ldr	r3, [r7, #4]
 8007394:	69da      	ldr	r2, [r3, #28]
 8007396:	687b      	ldr	r3, [r7, #4]
 8007398:	6a1b      	ldr	r3, [r3, #32]
 800739a:	431a      	orrs	r2, r3
 800739c:	687b      	ldr	r3, [r7, #4]
 800739e:	681b      	ldr	r3, [r3, #0]
 80073a0:	430a      	orrs	r2, r1
 80073a2:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Configure I2Cx: Own Address1 and addressing mode */
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 80073a4:	687b      	ldr	r3, [r7, #4]
 80073a6:	681b      	ldr	r3, [r3, #0]
 80073a8:	689b      	ldr	r3, [r3, #8]
 80073aa:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 80073ae:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 80073b2:	687a      	ldr	r2, [r7, #4]
 80073b4:	6911      	ldr	r1, [r2, #16]
 80073b6:	687a      	ldr	r2, [r7, #4]
 80073b8:	68d2      	ldr	r2, [r2, #12]
 80073ba:	4311      	orrs	r1, r2
 80073bc:	687a      	ldr	r2, [r7, #4]
 80073be:	6812      	ldr	r2, [r2, #0]
 80073c0:	430b      	orrs	r3, r1
 80073c2:	6093      	str	r3, [r2, #8]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Configure I2Cx: Dual mode and Own Address2 */
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 80073c4:	687b      	ldr	r3, [r7, #4]
 80073c6:	681b      	ldr	r3, [r3, #0]
 80073c8:	68db      	ldr	r3, [r3, #12]
 80073ca:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 80073ce:	687b      	ldr	r3, [r7, #4]
 80073d0:	695a      	ldr	r2, [r3, #20]
 80073d2:	687b      	ldr	r3, [r7, #4]
 80073d4:	699b      	ldr	r3, [r3, #24]
 80073d6:	431a      	orrs	r2, r3
 80073d8:	687b      	ldr	r3, [r7, #4]
 80073da:	681b      	ldr	r3, [r3, #0]
 80073dc:	430a      	orrs	r2, r1
 80073de:	60da      	str	r2, [r3, #12]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 80073e0:	687b      	ldr	r3, [r7, #4]
 80073e2:	681b      	ldr	r3, [r3, #0]
 80073e4:	681a      	ldr	r2, [r3, #0]
 80073e6:	687b      	ldr	r3, [r7, #4]
 80073e8:	681b      	ldr	r3, [r3, #0]
 80073ea:	f042 0201 	orr.w	r2, r2, #1
 80073ee:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80073f0:	687b      	ldr	r3, [r7, #4]
 80073f2:	2200      	movs	r2, #0
 80073f4:	641a      	str	r2, [r3, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80073f6:	687b      	ldr	r3, [r7, #4]
 80073f8:	2220      	movs	r2, #32
 80073fa:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80073fe:	687b      	ldr	r3, [r7, #4]
 8007400:	2200      	movs	r2, #0
 8007402:	631a      	str	r2, [r3, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8007404:	687b      	ldr	r3, [r7, #4]
 8007406:	2200      	movs	r2, #0
 8007408:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

  return HAL_OK;
 800740c:	2300      	movs	r3, #0
}
 800740e:	4618      	mov	r0, r3
 8007410:	3710      	adds	r7, #16
 8007412:	46bd      	mov	sp, r7
 8007414:	bd80      	pop	{r7, pc}
 8007416:	bf00      	nop
 8007418:	000186a0 	.word	0x000186a0
 800741c:	001e847f 	.word	0x001e847f
 8007420:	003d08ff 	.word	0x003d08ff
 8007424:	431bde83 	.word	0x431bde83
 8007428:	10624dd3 	.word	0x10624dd3

0800742c <HAL_I2C_Master_Transmit>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 800742c:	b580      	push	{r7, lr}
 800742e:	b088      	sub	sp, #32
 8007430:	af02      	add	r7, sp, #8
 8007432:	60f8      	str	r0, [r7, #12]
 8007434:	607a      	str	r2, [r7, #4]
 8007436:	461a      	mov	r2, r3
 8007438:	460b      	mov	r3, r1
 800743a:	817b      	strh	r3, [r7, #10]
 800743c:	4613      	mov	r3, r2
 800743e:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 8007440:	f7ff f9b2 	bl	80067a8 <HAL_GetTick>
 8007444:	6178      	str	r0, [r7, #20]

  if (hi2c->State == HAL_I2C_STATE_READY)
 8007446:	68fb      	ldr	r3, [r7, #12]
 8007448:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800744c:	b2db      	uxtb	r3, r3
 800744e:	2b20      	cmp	r3, #32
 8007450:	f040 80e0 	bne.w	8007614 <HAL_I2C_Master_Transmit+0x1e8>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8007454:	697b      	ldr	r3, [r7, #20]
 8007456:	9300      	str	r3, [sp, #0]
 8007458:	2319      	movs	r3, #25
 800745a:	2201      	movs	r2, #1
 800745c:	4970      	ldr	r1, [pc, #448]	; (8007620 <HAL_I2C_Master_Transmit+0x1f4>)
 800745e:	68f8      	ldr	r0, [r7, #12]
 8007460:	f000 fa92 	bl	8007988 <I2C_WaitOnFlagUntilTimeout>
 8007464:	4603      	mov	r3, r0
 8007466:	2b00      	cmp	r3, #0
 8007468:	d001      	beq.n	800746e <HAL_I2C_Master_Transmit+0x42>
    {
      return HAL_BUSY;
 800746a:	2302      	movs	r3, #2
 800746c:	e0d3      	b.n	8007616 <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 800746e:	68fb      	ldr	r3, [r7, #12]
 8007470:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007474:	2b01      	cmp	r3, #1
 8007476:	d101      	bne.n	800747c <HAL_I2C_Master_Transmit+0x50>
 8007478:	2302      	movs	r3, #2
 800747a:	e0cc      	b.n	8007616 <HAL_I2C_Master_Transmit+0x1ea>
 800747c:	68fb      	ldr	r3, [r7, #12]
 800747e:	2201      	movs	r2, #1
 8007480:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8007484:	68fb      	ldr	r3, [r7, #12]
 8007486:	681b      	ldr	r3, [r3, #0]
 8007488:	681b      	ldr	r3, [r3, #0]
 800748a:	f003 0301 	and.w	r3, r3, #1
 800748e:	2b01      	cmp	r3, #1
 8007490:	d007      	beq.n	80074a2 <HAL_I2C_Master_Transmit+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 8007492:	68fb      	ldr	r3, [r7, #12]
 8007494:	681b      	ldr	r3, [r3, #0]
 8007496:	681a      	ldr	r2, [r3, #0]
 8007498:	68fb      	ldr	r3, [r7, #12]
 800749a:	681b      	ldr	r3, [r3, #0]
 800749c:	f042 0201 	orr.w	r2, r2, #1
 80074a0:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80074a2:	68fb      	ldr	r3, [r7, #12]
 80074a4:	681b      	ldr	r3, [r3, #0]
 80074a6:	681a      	ldr	r2, [r3, #0]
 80074a8:	68fb      	ldr	r3, [r7, #12]
 80074aa:	681b      	ldr	r3, [r3, #0]
 80074ac:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80074b0:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 80074b2:	68fb      	ldr	r3, [r7, #12]
 80074b4:	2221      	movs	r2, #33	; 0x21
 80074b6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 80074ba:	68fb      	ldr	r3, [r7, #12]
 80074bc:	2210      	movs	r2, #16
 80074be:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 80074c2:	68fb      	ldr	r3, [r7, #12]
 80074c4:	2200      	movs	r2, #0
 80074c6:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 80074c8:	68fb      	ldr	r3, [r7, #12]
 80074ca:	687a      	ldr	r2, [r7, #4]
 80074cc:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 80074ce:	68fb      	ldr	r3, [r7, #12]
 80074d0:	893a      	ldrh	r2, [r7, #8]
 80074d2:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80074d4:	68fb      	ldr	r3, [r7, #12]
 80074d6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80074d8:	b29a      	uxth	r2, r3
 80074da:	68fb      	ldr	r3, [r7, #12]
 80074dc:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80074de:	68fb      	ldr	r3, [r7, #12]
 80074e0:	4a50      	ldr	r2, [pc, #320]	; (8007624 <HAL_I2C_Master_Transmit+0x1f8>)
 80074e2:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestWrite(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 80074e4:	8979      	ldrh	r1, [r7, #10]
 80074e6:	697b      	ldr	r3, [r7, #20]
 80074e8:	6a3a      	ldr	r2, [r7, #32]
 80074ea:	68f8      	ldr	r0, [r7, #12]
 80074ec:	f000 f9ca 	bl	8007884 <I2C_MasterRequestWrite>
 80074f0:	4603      	mov	r3, r0
 80074f2:	2b00      	cmp	r3, #0
 80074f4:	d001      	beq.n	80074fa <HAL_I2C_Master_Transmit+0xce>
    {
      return HAL_ERROR;
 80074f6:	2301      	movs	r3, #1
 80074f8:	e08d      	b.n	8007616 <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80074fa:	2300      	movs	r3, #0
 80074fc:	613b      	str	r3, [r7, #16]
 80074fe:	68fb      	ldr	r3, [r7, #12]
 8007500:	681b      	ldr	r3, [r3, #0]
 8007502:	695b      	ldr	r3, [r3, #20]
 8007504:	613b      	str	r3, [r7, #16]
 8007506:	68fb      	ldr	r3, [r7, #12]
 8007508:	681b      	ldr	r3, [r3, #0]
 800750a:	699b      	ldr	r3, [r3, #24]
 800750c:	613b      	str	r3, [r7, #16]
 800750e:	693b      	ldr	r3, [r7, #16]

    while (hi2c->XferSize > 0U)
 8007510:	e066      	b.n	80075e0 <HAL_I2C_Master_Transmit+0x1b4>
    {
      /* Wait until TXE flag is set */
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8007512:	697a      	ldr	r2, [r7, #20]
 8007514:	6a39      	ldr	r1, [r7, #32]
 8007516:	68f8      	ldr	r0, [r7, #12]
 8007518:	f000 fb0c 	bl	8007b34 <I2C_WaitOnTXEFlagUntilTimeout>
 800751c:	4603      	mov	r3, r0
 800751e:	2b00      	cmp	r3, #0
 8007520:	d00d      	beq.n	800753e <HAL_I2C_Master_Transmit+0x112>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8007522:	68fb      	ldr	r3, [r7, #12]
 8007524:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007526:	2b04      	cmp	r3, #4
 8007528:	d107      	bne.n	800753a <HAL_I2C_Master_Transmit+0x10e>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800752a:	68fb      	ldr	r3, [r7, #12]
 800752c:	681b      	ldr	r3, [r3, #0]
 800752e:	681a      	ldr	r2, [r3, #0]
 8007530:	68fb      	ldr	r3, [r7, #12]
 8007532:	681b      	ldr	r3, [r3, #0]
 8007534:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007538:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 800753a:	2301      	movs	r3, #1
 800753c:	e06b      	b.n	8007616 <HAL_I2C_Master_Transmit+0x1ea>
      }

      /* Write data to DR */
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800753e:	68fb      	ldr	r3, [r7, #12]
 8007540:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007542:	781a      	ldrb	r2, [r3, #0]
 8007544:	68fb      	ldr	r3, [r7, #12]
 8007546:	681b      	ldr	r3, [r3, #0]
 8007548:	611a      	str	r2, [r3, #16]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 800754a:	68fb      	ldr	r3, [r7, #12]
 800754c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800754e:	1c5a      	adds	r2, r3, #1
 8007550:	68fb      	ldr	r3, [r7, #12]
 8007552:	625a      	str	r2, [r3, #36]	; 0x24

      /* Update counter */
      hi2c->XferCount--;
 8007554:	68fb      	ldr	r3, [r7, #12]
 8007556:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007558:	b29b      	uxth	r3, r3
 800755a:	3b01      	subs	r3, #1
 800755c:	b29a      	uxth	r2, r3
 800755e:	68fb      	ldr	r3, [r7, #12]
 8007560:	855a      	strh	r2, [r3, #42]	; 0x2a
      hi2c->XferSize--;
 8007562:	68fb      	ldr	r3, [r7, #12]
 8007564:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8007566:	3b01      	subs	r3, #1
 8007568:	b29a      	uxth	r2, r3
 800756a:	68fb      	ldr	r3, [r7, #12]
 800756c:	851a      	strh	r2, [r3, #40]	; 0x28

      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800756e:	68fb      	ldr	r3, [r7, #12]
 8007570:	681b      	ldr	r3, [r3, #0]
 8007572:	695b      	ldr	r3, [r3, #20]
 8007574:	f003 0304 	and.w	r3, r3, #4
 8007578:	2b04      	cmp	r3, #4
 800757a:	d11b      	bne.n	80075b4 <HAL_I2C_Master_Transmit+0x188>
 800757c:	68fb      	ldr	r3, [r7, #12]
 800757e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8007580:	2b00      	cmp	r3, #0
 8007582:	d017      	beq.n	80075b4 <HAL_I2C_Master_Transmit+0x188>
      {
        /* Write data to DR */
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8007584:	68fb      	ldr	r3, [r7, #12]
 8007586:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007588:	781a      	ldrb	r2, [r3, #0]
 800758a:	68fb      	ldr	r3, [r7, #12]
 800758c:	681b      	ldr	r3, [r3, #0]
 800758e:	611a      	str	r2, [r3, #16]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 8007590:	68fb      	ldr	r3, [r7, #12]
 8007592:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007594:	1c5a      	adds	r2, r3, #1
 8007596:	68fb      	ldr	r3, [r7, #12]
 8007598:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferCount--;
 800759a:	68fb      	ldr	r3, [r7, #12]
 800759c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800759e:	b29b      	uxth	r3, r3
 80075a0:	3b01      	subs	r3, #1
 80075a2:	b29a      	uxth	r2, r3
 80075a4:	68fb      	ldr	r3, [r7, #12]
 80075a6:	855a      	strh	r2, [r3, #42]	; 0x2a
        hi2c->XferSize--;
 80075a8:	68fb      	ldr	r3, [r7, #12]
 80075aa:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80075ac:	3b01      	subs	r3, #1
 80075ae:	b29a      	uxth	r2, r3
 80075b0:	68fb      	ldr	r3, [r7, #12]
 80075b2:	851a      	strh	r2, [r3, #40]	; 0x28
      }

      /* Wait until BTF flag is set */
      if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80075b4:	697a      	ldr	r2, [r7, #20]
 80075b6:	6a39      	ldr	r1, [r7, #32]
 80075b8:	68f8      	ldr	r0, [r7, #12]
 80075ba:	f000 fafc 	bl	8007bb6 <I2C_WaitOnBTFFlagUntilTimeout>
 80075be:	4603      	mov	r3, r0
 80075c0:	2b00      	cmp	r3, #0
 80075c2:	d00d      	beq.n	80075e0 <HAL_I2C_Master_Transmit+0x1b4>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80075c4:	68fb      	ldr	r3, [r7, #12]
 80075c6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80075c8:	2b04      	cmp	r3, #4
 80075ca:	d107      	bne.n	80075dc <HAL_I2C_Master_Transmit+0x1b0>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80075cc:	68fb      	ldr	r3, [r7, #12]
 80075ce:	681b      	ldr	r3, [r3, #0]
 80075d0:	681a      	ldr	r2, [r3, #0]
 80075d2:	68fb      	ldr	r3, [r7, #12]
 80075d4:	681b      	ldr	r3, [r3, #0]
 80075d6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80075da:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 80075dc:	2301      	movs	r3, #1
 80075de:	e01a      	b.n	8007616 <HAL_I2C_Master_Transmit+0x1ea>
    while (hi2c->XferSize > 0U)
 80075e0:	68fb      	ldr	r3, [r7, #12]
 80075e2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80075e4:	2b00      	cmp	r3, #0
 80075e6:	d194      	bne.n	8007512 <HAL_I2C_Master_Transmit+0xe6>
      }
    }

    /* Generate Stop */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80075e8:	68fb      	ldr	r3, [r7, #12]
 80075ea:	681b      	ldr	r3, [r3, #0]
 80075ec:	681a      	ldr	r2, [r3, #0]
 80075ee:	68fb      	ldr	r3, [r7, #12]
 80075f0:	681b      	ldr	r3, [r3, #0]
 80075f2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80075f6:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80075f8:	68fb      	ldr	r3, [r7, #12]
 80075fa:	2220      	movs	r2, #32
 80075fc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8007600:	68fb      	ldr	r3, [r7, #12]
 8007602:	2200      	movs	r2, #0
 8007604:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8007608:	68fb      	ldr	r3, [r7, #12]
 800760a:	2200      	movs	r2, #0
 800760c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 8007610:	2300      	movs	r3, #0
 8007612:	e000      	b.n	8007616 <HAL_I2C_Master_Transmit+0x1ea>
  }
  else
  {
    return HAL_BUSY;
 8007614:	2302      	movs	r3, #2
  }
}
 8007616:	4618      	mov	r0, r3
 8007618:	3718      	adds	r7, #24
 800761a:	46bd      	mov	sp, r7
 800761c:	bd80      	pop	{r7, pc}
 800761e:	bf00      	nop
 8007620:	00100002 	.word	0x00100002
 8007624:	ffff0000 	.word	0xffff0000

08007628 <HAL_I2C_IsDeviceReady>:
  * @param  Trials Number of trials
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_IsDeviceReady(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Trials, uint32_t Timeout)
{
 8007628:	b580      	push	{r7, lr}
 800762a:	b08a      	sub	sp, #40	; 0x28
 800762c:	af02      	add	r7, sp, #8
 800762e:	60f8      	str	r0, [r7, #12]
 8007630:	607a      	str	r2, [r7, #4]
 8007632:	603b      	str	r3, [r7, #0]
 8007634:	460b      	mov	r3, r1
 8007636:	817b      	strh	r3, [r7, #10]
  /* Get tick */
  uint32_t tickstart = HAL_GetTick();
 8007638:	f7ff f8b6 	bl	80067a8 <HAL_GetTick>
 800763c:	61f8      	str	r0, [r7, #28]
  uint32_t I2C_Trials = 1U;
 800763e:	2301      	movs	r3, #1
 8007640:	61bb      	str	r3, [r7, #24]
  FlagStatus tmp1;
  FlagStatus tmp2;

  if (hi2c->State == HAL_I2C_STATE_READY)
 8007642:	68fb      	ldr	r3, [r7, #12]
 8007644:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007648:	b2db      	uxtb	r3, r3
 800764a:	2b20      	cmp	r3, #32
 800764c:	f040 8111 	bne.w	8007872 <HAL_I2C_IsDeviceReady+0x24a>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8007650:	69fb      	ldr	r3, [r7, #28]
 8007652:	9300      	str	r3, [sp, #0]
 8007654:	2319      	movs	r3, #25
 8007656:	2201      	movs	r2, #1
 8007658:	4988      	ldr	r1, [pc, #544]	; (800787c <HAL_I2C_IsDeviceReady+0x254>)
 800765a:	68f8      	ldr	r0, [r7, #12]
 800765c:	f000 f994 	bl	8007988 <I2C_WaitOnFlagUntilTimeout>
 8007660:	4603      	mov	r3, r0
 8007662:	2b00      	cmp	r3, #0
 8007664:	d001      	beq.n	800766a <HAL_I2C_IsDeviceReady+0x42>
    {
      return HAL_BUSY;
 8007666:	2302      	movs	r3, #2
 8007668:	e104      	b.n	8007874 <HAL_I2C_IsDeviceReady+0x24c>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 800766a:	68fb      	ldr	r3, [r7, #12]
 800766c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007670:	2b01      	cmp	r3, #1
 8007672:	d101      	bne.n	8007678 <HAL_I2C_IsDeviceReady+0x50>
 8007674:	2302      	movs	r3, #2
 8007676:	e0fd      	b.n	8007874 <HAL_I2C_IsDeviceReady+0x24c>
 8007678:	68fb      	ldr	r3, [r7, #12]
 800767a:	2201      	movs	r2, #1
 800767c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8007680:	68fb      	ldr	r3, [r7, #12]
 8007682:	681b      	ldr	r3, [r3, #0]
 8007684:	681b      	ldr	r3, [r3, #0]
 8007686:	f003 0301 	and.w	r3, r3, #1
 800768a:	2b01      	cmp	r3, #1
 800768c:	d007      	beq.n	800769e <HAL_I2C_IsDeviceReady+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 800768e:	68fb      	ldr	r3, [r7, #12]
 8007690:	681b      	ldr	r3, [r3, #0]
 8007692:	681a      	ldr	r2, [r3, #0]
 8007694:	68fb      	ldr	r3, [r7, #12]
 8007696:	681b      	ldr	r3, [r3, #0]
 8007698:	f042 0201 	orr.w	r2, r2, #1
 800769c:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800769e:	68fb      	ldr	r3, [r7, #12]
 80076a0:	681b      	ldr	r3, [r3, #0]
 80076a2:	681a      	ldr	r2, [r3, #0]
 80076a4:	68fb      	ldr	r3, [r7, #12]
 80076a6:	681b      	ldr	r3, [r3, #0]
 80076a8:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80076ac:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_BUSY;
 80076ae:	68fb      	ldr	r3, [r7, #12]
 80076b0:	2224      	movs	r2, #36	; 0x24
 80076b2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80076b6:	68fb      	ldr	r3, [r7, #12]
 80076b8:	2200      	movs	r2, #0
 80076ba:	641a      	str	r2, [r3, #64]	; 0x40
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80076bc:	68fb      	ldr	r3, [r7, #12]
 80076be:	4a70      	ldr	r2, [pc, #448]	; (8007880 <HAL_I2C_IsDeviceReady+0x258>)
 80076c0:	62da      	str	r2, [r3, #44]	; 0x2c

    do
    {
      /* Generate Start */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80076c2:	68fb      	ldr	r3, [r7, #12]
 80076c4:	681b      	ldr	r3, [r3, #0]
 80076c6:	681a      	ldr	r2, [r3, #0]
 80076c8:	68fb      	ldr	r3, [r7, #12]
 80076ca:	681b      	ldr	r3, [r3, #0]
 80076cc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80076d0:	601a      	str	r2, [r3, #0]

      /* Wait until SB flag is set */
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, tickstart) != HAL_OK)
 80076d2:	69fb      	ldr	r3, [r7, #28]
 80076d4:	9300      	str	r3, [sp, #0]
 80076d6:	683b      	ldr	r3, [r7, #0]
 80076d8:	2200      	movs	r2, #0
 80076da:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80076de:	68f8      	ldr	r0, [r7, #12]
 80076e0:	f000 f952 	bl	8007988 <I2C_WaitOnFlagUntilTimeout>
 80076e4:	4603      	mov	r3, r0
 80076e6:	2b00      	cmp	r3, #0
 80076e8:	d00d      	beq.n	8007706 <HAL_I2C_IsDeviceReady+0xde>
      {
        if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80076ea:	68fb      	ldr	r3, [r7, #12]
 80076ec:	681b      	ldr	r3, [r3, #0]
 80076ee:	681b      	ldr	r3, [r3, #0]
 80076f0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80076f4:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80076f8:	d103      	bne.n	8007702 <HAL_I2C_IsDeviceReady+0xda>
        {
          hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80076fa:	68fb      	ldr	r3, [r7, #12]
 80076fc:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007700:	641a      	str	r2, [r3, #64]	; 0x40
        }
        return HAL_TIMEOUT;
 8007702:	2303      	movs	r3, #3
 8007704:	e0b6      	b.n	8007874 <HAL_I2C_IsDeviceReady+0x24c>
      }

      /* Send slave address */
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8007706:	897b      	ldrh	r3, [r7, #10]
 8007708:	b2db      	uxtb	r3, r3
 800770a:	461a      	mov	r2, r3
 800770c:	68fb      	ldr	r3, [r7, #12]
 800770e:	681b      	ldr	r3, [r3, #0]
 8007710:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8007714:	611a      	str	r2, [r3, #16]

      /* Wait until ADDR or AF flag are set */
      /* Get tick */
      tickstart = HAL_GetTick();
 8007716:	f7ff f847 	bl	80067a8 <HAL_GetTick>
 800771a:	61f8      	str	r0, [r7, #28]

      tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_ADDR);
 800771c:	68fb      	ldr	r3, [r7, #12]
 800771e:	681b      	ldr	r3, [r3, #0]
 8007720:	695b      	ldr	r3, [r3, #20]
 8007722:	f003 0302 	and.w	r3, r3, #2
 8007726:	2b02      	cmp	r3, #2
 8007728:	bf0c      	ite	eq
 800772a:	2301      	moveq	r3, #1
 800772c:	2300      	movne	r3, #0
 800772e:	b2db      	uxtb	r3, r3
 8007730:	75fb      	strb	r3, [r7, #23]
      tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 8007732:	68fb      	ldr	r3, [r7, #12]
 8007734:	681b      	ldr	r3, [r3, #0]
 8007736:	695b      	ldr	r3, [r3, #20]
 8007738:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800773c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007740:	bf0c      	ite	eq
 8007742:	2301      	moveq	r3, #1
 8007744:	2300      	movne	r3, #0
 8007746:	b2db      	uxtb	r3, r3
 8007748:	75bb      	strb	r3, [r7, #22]
      while ((hi2c->State != HAL_I2C_STATE_TIMEOUT) && (tmp1 == RESET) && (tmp2 == RESET))
 800774a:	e025      	b.n	8007798 <HAL_I2C_IsDeviceReady+0x170>
      {
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 800774c:	f7ff f82c 	bl	80067a8 <HAL_GetTick>
 8007750:	4602      	mov	r2, r0
 8007752:	69fb      	ldr	r3, [r7, #28]
 8007754:	1ad3      	subs	r3, r2, r3
 8007756:	683a      	ldr	r2, [r7, #0]
 8007758:	429a      	cmp	r2, r3
 800775a:	d302      	bcc.n	8007762 <HAL_I2C_IsDeviceReady+0x13a>
 800775c:	683b      	ldr	r3, [r7, #0]
 800775e:	2b00      	cmp	r3, #0
 8007760:	d103      	bne.n	800776a <HAL_I2C_IsDeviceReady+0x142>
        {
          hi2c->State = HAL_I2C_STATE_TIMEOUT;
 8007762:	68fb      	ldr	r3, [r7, #12]
 8007764:	22a0      	movs	r2, #160	; 0xa0
 8007766:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        }
        tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_ADDR);
 800776a:	68fb      	ldr	r3, [r7, #12]
 800776c:	681b      	ldr	r3, [r3, #0]
 800776e:	695b      	ldr	r3, [r3, #20]
 8007770:	f003 0302 	and.w	r3, r3, #2
 8007774:	2b02      	cmp	r3, #2
 8007776:	bf0c      	ite	eq
 8007778:	2301      	moveq	r3, #1
 800777a:	2300      	movne	r3, #0
 800777c:	b2db      	uxtb	r3, r3
 800777e:	75fb      	strb	r3, [r7, #23]
        tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 8007780:	68fb      	ldr	r3, [r7, #12]
 8007782:	681b      	ldr	r3, [r3, #0]
 8007784:	695b      	ldr	r3, [r3, #20]
 8007786:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800778a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800778e:	bf0c      	ite	eq
 8007790:	2301      	moveq	r3, #1
 8007792:	2300      	movne	r3, #0
 8007794:	b2db      	uxtb	r3, r3
 8007796:	75bb      	strb	r3, [r7, #22]
      while ((hi2c->State != HAL_I2C_STATE_TIMEOUT) && (tmp1 == RESET) && (tmp2 == RESET))
 8007798:	68fb      	ldr	r3, [r7, #12]
 800779a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800779e:	b2db      	uxtb	r3, r3
 80077a0:	2ba0      	cmp	r3, #160	; 0xa0
 80077a2:	d005      	beq.n	80077b0 <HAL_I2C_IsDeviceReady+0x188>
 80077a4:	7dfb      	ldrb	r3, [r7, #23]
 80077a6:	2b00      	cmp	r3, #0
 80077a8:	d102      	bne.n	80077b0 <HAL_I2C_IsDeviceReady+0x188>
 80077aa:	7dbb      	ldrb	r3, [r7, #22]
 80077ac:	2b00      	cmp	r3, #0
 80077ae:	d0cd      	beq.n	800774c <HAL_I2C_IsDeviceReady+0x124>
      }

      hi2c->State = HAL_I2C_STATE_READY;
 80077b0:	68fb      	ldr	r3, [r7, #12]
 80077b2:	2220      	movs	r2, #32
 80077b4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

      /* Check if the ADDR flag has been set */
      if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_ADDR) == SET)
 80077b8:	68fb      	ldr	r3, [r7, #12]
 80077ba:	681b      	ldr	r3, [r3, #0]
 80077bc:	695b      	ldr	r3, [r3, #20]
 80077be:	f003 0302 	and.w	r3, r3, #2
 80077c2:	2b02      	cmp	r3, #2
 80077c4:	d129      	bne.n	800781a <HAL_I2C_IsDeviceReady+0x1f2>
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80077c6:	68fb      	ldr	r3, [r7, #12]
 80077c8:	681b      	ldr	r3, [r3, #0]
 80077ca:	681a      	ldr	r2, [r3, #0]
 80077cc:	68fb      	ldr	r3, [r7, #12]
 80077ce:	681b      	ldr	r3, [r3, #0]
 80077d0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80077d4:	601a      	str	r2, [r3, #0]

        /* Clear ADDR Flag */
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80077d6:	2300      	movs	r3, #0
 80077d8:	613b      	str	r3, [r7, #16]
 80077da:	68fb      	ldr	r3, [r7, #12]
 80077dc:	681b      	ldr	r3, [r3, #0]
 80077de:	695b      	ldr	r3, [r3, #20]
 80077e0:	613b      	str	r3, [r7, #16]
 80077e2:	68fb      	ldr	r3, [r7, #12]
 80077e4:	681b      	ldr	r3, [r3, #0]
 80077e6:	699b      	ldr	r3, [r3, #24]
 80077e8:	613b      	str	r3, [r7, #16]
 80077ea:	693b      	ldr	r3, [r7, #16]

        /* Wait until BUSY flag is reset */
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80077ec:	69fb      	ldr	r3, [r7, #28]
 80077ee:	9300      	str	r3, [sp, #0]
 80077f0:	2319      	movs	r3, #25
 80077f2:	2201      	movs	r2, #1
 80077f4:	4921      	ldr	r1, [pc, #132]	; (800787c <HAL_I2C_IsDeviceReady+0x254>)
 80077f6:	68f8      	ldr	r0, [r7, #12]
 80077f8:	f000 f8c6 	bl	8007988 <I2C_WaitOnFlagUntilTimeout>
 80077fc:	4603      	mov	r3, r0
 80077fe:	2b00      	cmp	r3, #0
 8007800:	d001      	beq.n	8007806 <HAL_I2C_IsDeviceReady+0x1de>
        {
          return HAL_ERROR;
 8007802:	2301      	movs	r3, #1
 8007804:	e036      	b.n	8007874 <HAL_I2C_IsDeviceReady+0x24c>
        }

        hi2c->State = HAL_I2C_STATE_READY;
 8007806:	68fb      	ldr	r3, [r7, #12]
 8007808:	2220      	movs	r2, #32
 800780a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 800780e:	68fb      	ldr	r3, [r7, #12]
 8007810:	2200      	movs	r2, #0
 8007812:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_OK;
 8007816:	2300      	movs	r3, #0
 8007818:	e02c      	b.n	8007874 <HAL_I2C_IsDeviceReady+0x24c>
      }
      else
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800781a:	68fb      	ldr	r3, [r7, #12]
 800781c:	681b      	ldr	r3, [r3, #0]
 800781e:	681a      	ldr	r2, [r3, #0]
 8007820:	68fb      	ldr	r3, [r7, #12]
 8007822:	681b      	ldr	r3, [r3, #0]
 8007824:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007828:	601a      	str	r2, [r3, #0]

        /* Clear AF Flag */
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800782a:	68fb      	ldr	r3, [r7, #12]
 800782c:	681b      	ldr	r3, [r3, #0]
 800782e:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8007832:	615a      	str	r2, [r3, #20]

        /* Wait until BUSY flag is reset */
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8007834:	69fb      	ldr	r3, [r7, #28]
 8007836:	9300      	str	r3, [sp, #0]
 8007838:	2319      	movs	r3, #25
 800783a:	2201      	movs	r2, #1
 800783c:	490f      	ldr	r1, [pc, #60]	; (800787c <HAL_I2C_IsDeviceReady+0x254>)
 800783e:	68f8      	ldr	r0, [r7, #12]
 8007840:	f000 f8a2 	bl	8007988 <I2C_WaitOnFlagUntilTimeout>
 8007844:	4603      	mov	r3, r0
 8007846:	2b00      	cmp	r3, #0
 8007848:	d001      	beq.n	800784e <HAL_I2C_IsDeviceReady+0x226>
        {
          return HAL_ERROR;
 800784a:	2301      	movs	r3, #1
 800784c:	e012      	b.n	8007874 <HAL_I2C_IsDeviceReady+0x24c>
        }
      }

      /* Increment Trials */
      I2C_Trials++;
 800784e:	69bb      	ldr	r3, [r7, #24]
 8007850:	3301      	adds	r3, #1
 8007852:	61bb      	str	r3, [r7, #24]
    }
    while (I2C_Trials < Trials);
 8007854:	69ba      	ldr	r2, [r7, #24]
 8007856:	687b      	ldr	r3, [r7, #4]
 8007858:	429a      	cmp	r2, r3
 800785a:	f4ff af32 	bcc.w	80076c2 <HAL_I2C_IsDeviceReady+0x9a>

    hi2c->State = HAL_I2C_STATE_READY;
 800785e:	68fb      	ldr	r3, [r7, #12]
 8007860:	2220      	movs	r2, #32
 8007862:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8007866:	68fb      	ldr	r3, [r7, #12]
 8007868:	2200      	movs	r2, #0
 800786a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_ERROR;
 800786e:	2301      	movs	r3, #1
 8007870:	e000      	b.n	8007874 <HAL_I2C_IsDeviceReady+0x24c>
  }
  else
  {
    return HAL_BUSY;
 8007872:	2302      	movs	r3, #2
  }
}
 8007874:	4618      	mov	r0, r3
 8007876:	3720      	adds	r7, #32
 8007878:	46bd      	mov	sp, r7
 800787a:	bd80      	pop	{r7, pc}
 800787c:	00100002 	.word	0x00100002
 8007880:	ffff0000 	.word	0xffff0000

08007884 <I2C_MasterRequestWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 8007884:	b580      	push	{r7, lr}
 8007886:	b088      	sub	sp, #32
 8007888:	af02      	add	r7, sp, #8
 800788a:	60f8      	str	r0, [r7, #12]
 800788c:	607a      	str	r2, [r7, #4]
 800788e:	603b      	str	r3, [r7, #0]
 8007890:	460b      	mov	r3, r1
 8007892:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8007894:	68fb      	ldr	r3, [r7, #12]
 8007896:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007898:	617b      	str	r3, [r7, #20]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 800789a:	697b      	ldr	r3, [r7, #20]
 800789c:	2b08      	cmp	r3, #8
 800789e:	d006      	beq.n	80078ae <I2C_MasterRequestWrite+0x2a>
 80078a0:	697b      	ldr	r3, [r7, #20]
 80078a2:	2b01      	cmp	r3, #1
 80078a4:	d003      	beq.n	80078ae <I2C_MasterRequestWrite+0x2a>
 80078a6:	697b      	ldr	r3, [r7, #20]
 80078a8:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 80078ac:	d108      	bne.n	80078c0 <I2C_MasterRequestWrite+0x3c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80078ae:	68fb      	ldr	r3, [r7, #12]
 80078b0:	681b      	ldr	r3, [r3, #0]
 80078b2:	681a      	ldr	r2, [r3, #0]
 80078b4:	68fb      	ldr	r3, [r7, #12]
 80078b6:	681b      	ldr	r3, [r3, #0]
 80078b8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80078bc:	601a      	str	r2, [r3, #0]
 80078be:	e00b      	b.n	80078d8 <I2C_MasterRequestWrite+0x54>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX)
 80078c0:	68fb      	ldr	r3, [r7, #12]
 80078c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80078c4:	2b12      	cmp	r3, #18
 80078c6:	d107      	bne.n	80078d8 <I2C_MasterRequestWrite+0x54>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80078c8:	68fb      	ldr	r3, [r7, #12]
 80078ca:	681b      	ldr	r3, [r3, #0]
 80078cc:	681a      	ldr	r2, [r3, #0]
 80078ce:	68fb      	ldr	r3, [r7, #12]
 80078d0:	681b      	ldr	r3, [r3, #0]
 80078d2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80078d6:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80078d8:	683b      	ldr	r3, [r7, #0]
 80078da:	9300      	str	r3, [sp, #0]
 80078dc:	687b      	ldr	r3, [r7, #4]
 80078de:	2200      	movs	r2, #0
 80078e0:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80078e4:	68f8      	ldr	r0, [r7, #12]
 80078e6:	f000 f84f 	bl	8007988 <I2C_WaitOnFlagUntilTimeout>
 80078ea:	4603      	mov	r3, r0
 80078ec:	2b00      	cmp	r3, #0
 80078ee:	d00d      	beq.n	800790c <I2C_MasterRequestWrite+0x88>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80078f0:	68fb      	ldr	r3, [r7, #12]
 80078f2:	681b      	ldr	r3, [r3, #0]
 80078f4:	681b      	ldr	r3, [r3, #0]
 80078f6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80078fa:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80078fe:	d103      	bne.n	8007908 <I2C_MasterRequestWrite+0x84>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8007900:	68fb      	ldr	r3, [r7, #12]
 8007902:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007906:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 8007908:	2303      	movs	r3, #3
 800790a:	e035      	b.n	8007978 <I2C_MasterRequestWrite+0xf4>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800790c:	68fb      	ldr	r3, [r7, #12]
 800790e:	691b      	ldr	r3, [r3, #16]
 8007910:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8007914:	d108      	bne.n	8007928 <I2C_MasterRequestWrite+0xa4>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8007916:	897b      	ldrh	r3, [r7, #10]
 8007918:	b2db      	uxtb	r3, r3
 800791a:	461a      	mov	r2, r3
 800791c:	68fb      	ldr	r3, [r7, #12]
 800791e:	681b      	ldr	r3, [r3, #0]
 8007920:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8007924:	611a      	str	r2, [r3, #16]
 8007926:	e01b      	b.n	8007960 <I2C_MasterRequestWrite+0xdc>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8007928:	897b      	ldrh	r3, [r7, #10]
 800792a:	11db      	asrs	r3, r3, #7
 800792c:	b2db      	uxtb	r3, r3
 800792e:	f003 0306 	and.w	r3, r3, #6
 8007932:	b2db      	uxtb	r3, r3
 8007934:	f063 030f 	orn	r3, r3, #15
 8007938:	b2da      	uxtb	r2, r3
 800793a:	68fb      	ldr	r3, [r7, #12]
 800793c:	681b      	ldr	r3, [r3, #0]
 800793e:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8007940:	683b      	ldr	r3, [r7, #0]
 8007942:	687a      	ldr	r2, [r7, #4]
 8007944:	490e      	ldr	r1, [pc, #56]	; (8007980 <I2C_MasterRequestWrite+0xfc>)
 8007946:	68f8      	ldr	r0, [r7, #12]
 8007948:	f000 f875 	bl	8007a36 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800794c:	4603      	mov	r3, r0
 800794e:	2b00      	cmp	r3, #0
 8007950:	d001      	beq.n	8007956 <I2C_MasterRequestWrite+0xd2>
    {
      return HAL_ERROR;
 8007952:	2301      	movs	r3, #1
 8007954:	e010      	b.n	8007978 <I2C_MasterRequestWrite+0xf4>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8007956:	897b      	ldrh	r3, [r7, #10]
 8007958:	b2da      	uxtb	r2, r3
 800795a:	68fb      	ldr	r3, [r7, #12]
 800795c:	681b      	ldr	r3, [r3, #0]
 800795e:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8007960:	683b      	ldr	r3, [r7, #0]
 8007962:	687a      	ldr	r2, [r7, #4]
 8007964:	4907      	ldr	r1, [pc, #28]	; (8007984 <I2C_MasterRequestWrite+0x100>)
 8007966:	68f8      	ldr	r0, [r7, #12]
 8007968:	f000 f865 	bl	8007a36 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800796c:	4603      	mov	r3, r0
 800796e:	2b00      	cmp	r3, #0
 8007970:	d001      	beq.n	8007976 <I2C_MasterRequestWrite+0xf2>
  {
    return HAL_ERROR;
 8007972:	2301      	movs	r3, #1
 8007974:	e000      	b.n	8007978 <I2C_MasterRequestWrite+0xf4>
  }

  return HAL_OK;
 8007976:	2300      	movs	r3, #0
}
 8007978:	4618      	mov	r0, r3
 800797a:	3718      	adds	r7, #24
 800797c:	46bd      	mov	sp, r7
 800797e:	bd80      	pop	{r7, pc}
 8007980:	00010008 	.word	0x00010008
 8007984:	00010002 	.word	0x00010002

08007988 <I2C_WaitOnFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
{
 8007988:	b580      	push	{r7, lr}
 800798a:	b084      	sub	sp, #16
 800798c:	af00      	add	r7, sp, #0
 800798e:	60f8      	str	r0, [r7, #12]
 8007990:	60b9      	str	r1, [r7, #8]
 8007992:	603b      	str	r3, [r7, #0]
 8007994:	4613      	mov	r3, r2
 8007996:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8007998:	e025      	b.n	80079e6 <I2C_WaitOnFlagUntilTimeout+0x5e>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800799a:	683b      	ldr	r3, [r7, #0]
 800799c:	f1b3 3fff 	cmp.w	r3, #4294967295
 80079a0:	d021      	beq.n	80079e6 <I2C_WaitOnFlagUntilTimeout+0x5e>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80079a2:	f7fe ff01 	bl	80067a8 <HAL_GetTick>
 80079a6:	4602      	mov	r2, r0
 80079a8:	69bb      	ldr	r3, [r7, #24]
 80079aa:	1ad3      	subs	r3, r2, r3
 80079ac:	683a      	ldr	r2, [r7, #0]
 80079ae:	429a      	cmp	r2, r3
 80079b0:	d302      	bcc.n	80079b8 <I2C_WaitOnFlagUntilTimeout+0x30>
 80079b2:	683b      	ldr	r3, [r7, #0]
 80079b4:	2b00      	cmp	r3, #0
 80079b6:	d116      	bne.n	80079e6 <I2C_WaitOnFlagUntilTimeout+0x5e>
      {
        hi2c->PreviousState     = I2C_STATE_NONE;
 80079b8:	68fb      	ldr	r3, [r7, #12]
 80079ba:	2200      	movs	r2, #0
 80079bc:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80079be:	68fb      	ldr	r3, [r7, #12]
 80079c0:	2220      	movs	r2, #32
 80079c2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80079c6:	68fb      	ldr	r3, [r7, #12]
 80079c8:	2200      	movs	r2, #0
 80079ca:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80079ce:	68fb      	ldr	r3, [r7, #12]
 80079d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80079d2:	f043 0220 	orr.w	r2, r3, #32
 80079d6:	68fb      	ldr	r3, [r7, #12]
 80079d8:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 80079da:	68fb      	ldr	r3, [r7, #12]
 80079dc:	2200      	movs	r2, #0
 80079de:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 80079e2:	2301      	movs	r3, #1
 80079e4:	e023      	b.n	8007a2e <I2C_WaitOnFlagUntilTimeout+0xa6>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80079e6:	68bb      	ldr	r3, [r7, #8]
 80079e8:	0c1b      	lsrs	r3, r3, #16
 80079ea:	b2db      	uxtb	r3, r3
 80079ec:	2b01      	cmp	r3, #1
 80079ee:	d10d      	bne.n	8007a0c <I2C_WaitOnFlagUntilTimeout+0x84>
 80079f0:	68fb      	ldr	r3, [r7, #12]
 80079f2:	681b      	ldr	r3, [r3, #0]
 80079f4:	695b      	ldr	r3, [r3, #20]
 80079f6:	43da      	mvns	r2, r3
 80079f8:	68bb      	ldr	r3, [r7, #8]
 80079fa:	4013      	ands	r3, r2
 80079fc:	b29b      	uxth	r3, r3
 80079fe:	2b00      	cmp	r3, #0
 8007a00:	bf0c      	ite	eq
 8007a02:	2301      	moveq	r3, #1
 8007a04:	2300      	movne	r3, #0
 8007a06:	b2db      	uxtb	r3, r3
 8007a08:	461a      	mov	r2, r3
 8007a0a:	e00c      	b.n	8007a26 <I2C_WaitOnFlagUntilTimeout+0x9e>
 8007a0c:	68fb      	ldr	r3, [r7, #12]
 8007a0e:	681b      	ldr	r3, [r3, #0]
 8007a10:	699b      	ldr	r3, [r3, #24]
 8007a12:	43da      	mvns	r2, r3
 8007a14:	68bb      	ldr	r3, [r7, #8]
 8007a16:	4013      	ands	r3, r2
 8007a18:	b29b      	uxth	r3, r3
 8007a1a:	2b00      	cmp	r3, #0
 8007a1c:	bf0c      	ite	eq
 8007a1e:	2301      	moveq	r3, #1
 8007a20:	2300      	movne	r3, #0
 8007a22:	b2db      	uxtb	r3, r3
 8007a24:	461a      	mov	r2, r3
 8007a26:	79fb      	ldrb	r3, [r7, #7]
 8007a28:	429a      	cmp	r2, r3
 8007a2a:	d0b6      	beq.n	800799a <I2C_WaitOnFlagUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 8007a2c:	2300      	movs	r3, #0
}
 8007a2e:	4618      	mov	r0, r3
 8007a30:	3710      	adds	r7, #16
 8007a32:	46bd      	mov	sp, r7
 8007a34:	bd80      	pop	{r7, pc}

08007a36 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
{
 8007a36:	b580      	push	{r7, lr}
 8007a38:	b084      	sub	sp, #16
 8007a3a:	af00      	add	r7, sp, #0
 8007a3c:	60f8      	str	r0, [r7, #12]
 8007a3e:	60b9      	str	r1, [r7, #8]
 8007a40:	607a      	str	r2, [r7, #4]
 8007a42:	603b      	str	r3, [r7, #0]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8007a44:	e051      	b.n	8007aea <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8007a46:	68fb      	ldr	r3, [r7, #12]
 8007a48:	681b      	ldr	r3, [r3, #0]
 8007a4a:	695b      	ldr	r3, [r3, #20]
 8007a4c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8007a50:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007a54:	d123      	bne.n	8007a9e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007a56:	68fb      	ldr	r3, [r7, #12]
 8007a58:	681b      	ldr	r3, [r3, #0]
 8007a5a:	681a      	ldr	r2, [r3, #0]
 8007a5c:	68fb      	ldr	r3, [r7, #12]
 8007a5e:	681b      	ldr	r3, [r3, #0]
 8007a60:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007a64:	601a      	str	r2, [r3, #0]

      /* Clear AF Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8007a66:	68fb      	ldr	r3, [r7, #12]
 8007a68:	681b      	ldr	r3, [r3, #0]
 8007a6a:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8007a6e:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 8007a70:	68fb      	ldr	r3, [r7, #12]
 8007a72:	2200      	movs	r2, #0
 8007a74:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8007a76:	68fb      	ldr	r3, [r7, #12]
 8007a78:	2220      	movs	r2, #32
 8007a7a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007a7e:	68fb      	ldr	r3, [r7, #12]
 8007a80:	2200      	movs	r2, #0
 8007a82:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8007a86:	68fb      	ldr	r3, [r7, #12]
 8007a88:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007a8a:	f043 0204 	orr.w	r2, r3, #4
 8007a8e:	68fb      	ldr	r3, [r7, #12]
 8007a90:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8007a92:	68fb      	ldr	r3, [r7, #12]
 8007a94:	2200      	movs	r2, #0
 8007a96:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 8007a9a:	2301      	movs	r3, #1
 8007a9c:	e046      	b.n	8007b2c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8007a9e:	687b      	ldr	r3, [r7, #4]
 8007aa0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007aa4:	d021      	beq.n	8007aea <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007aa6:	f7fe fe7f 	bl	80067a8 <HAL_GetTick>
 8007aaa:	4602      	mov	r2, r0
 8007aac:	683b      	ldr	r3, [r7, #0]
 8007aae:	1ad3      	subs	r3, r2, r3
 8007ab0:	687a      	ldr	r2, [r7, #4]
 8007ab2:	429a      	cmp	r2, r3
 8007ab4:	d302      	bcc.n	8007abc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8007ab6:	687b      	ldr	r3, [r7, #4]
 8007ab8:	2b00      	cmp	r3, #0
 8007aba:	d116      	bne.n	8007aea <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 8007abc:	68fb      	ldr	r3, [r7, #12]
 8007abe:	2200      	movs	r2, #0
 8007ac0:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8007ac2:	68fb      	ldr	r3, [r7, #12]
 8007ac4:	2220      	movs	r2, #32
 8007ac6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007aca:	68fb      	ldr	r3, [r7, #12]
 8007acc:	2200      	movs	r2, #0
 8007ace:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007ad2:	68fb      	ldr	r3, [r7, #12]
 8007ad4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007ad6:	f043 0220 	orr.w	r2, r3, #32
 8007ada:	68fb      	ldr	r3, [r7, #12]
 8007adc:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8007ade:	68fb      	ldr	r3, [r7, #12]
 8007ae0:	2200      	movs	r2, #0
 8007ae2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 8007ae6:	2301      	movs	r3, #1
 8007ae8:	e020      	b.n	8007b2c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8007aea:	68bb      	ldr	r3, [r7, #8]
 8007aec:	0c1b      	lsrs	r3, r3, #16
 8007aee:	b2db      	uxtb	r3, r3
 8007af0:	2b01      	cmp	r3, #1
 8007af2:	d10c      	bne.n	8007b0e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 8007af4:	68fb      	ldr	r3, [r7, #12]
 8007af6:	681b      	ldr	r3, [r3, #0]
 8007af8:	695b      	ldr	r3, [r3, #20]
 8007afa:	43da      	mvns	r2, r3
 8007afc:	68bb      	ldr	r3, [r7, #8]
 8007afe:	4013      	ands	r3, r2
 8007b00:	b29b      	uxth	r3, r3
 8007b02:	2b00      	cmp	r3, #0
 8007b04:	bf14      	ite	ne
 8007b06:	2301      	movne	r3, #1
 8007b08:	2300      	moveq	r3, #0
 8007b0a:	b2db      	uxtb	r3, r3
 8007b0c:	e00b      	b.n	8007b26 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 8007b0e:	68fb      	ldr	r3, [r7, #12]
 8007b10:	681b      	ldr	r3, [r3, #0]
 8007b12:	699b      	ldr	r3, [r3, #24]
 8007b14:	43da      	mvns	r2, r3
 8007b16:	68bb      	ldr	r3, [r7, #8]
 8007b18:	4013      	ands	r3, r2
 8007b1a:	b29b      	uxth	r3, r3
 8007b1c:	2b00      	cmp	r3, #0
 8007b1e:	bf14      	ite	ne
 8007b20:	2301      	movne	r3, #1
 8007b22:	2300      	moveq	r3, #0
 8007b24:	b2db      	uxtb	r3, r3
 8007b26:	2b00      	cmp	r3, #0
 8007b28:	d18d      	bne.n	8007a46 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
      }
    }
  }
  return HAL_OK;
 8007b2a:	2300      	movs	r3, #0
}
 8007b2c:	4618      	mov	r0, r3
 8007b2e:	3710      	adds	r7, #16
 8007b30:	46bd      	mov	sp, r7
 8007b32:	bd80      	pop	{r7, pc}

08007b34 <I2C_WaitOnTXEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8007b34:	b580      	push	{r7, lr}
 8007b36:	b084      	sub	sp, #16
 8007b38:	af00      	add	r7, sp, #0
 8007b3a:	60f8      	str	r0, [r7, #12]
 8007b3c:	60b9      	str	r1, [r7, #8]
 8007b3e:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8007b40:	e02d      	b.n	8007b9e <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8007b42:	68f8      	ldr	r0, [r7, #12]
 8007b44:	f000 f878 	bl	8007c38 <I2C_IsAcknowledgeFailed>
 8007b48:	4603      	mov	r3, r0
 8007b4a:	2b00      	cmp	r3, #0
 8007b4c:	d001      	beq.n	8007b52 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 8007b4e:	2301      	movs	r3, #1
 8007b50:	e02d      	b.n	8007bae <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8007b52:	68bb      	ldr	r3, [r7, #8]
 8007b54:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007b58:	d021      	beq.n	8007b9e <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007b5a:	f7fe fe25 	bl	80067a8 <HAL_GetTick>
 8007b5e:	4602      	mov	r2, r0
 8007b60:	687b      	ldr	r3, [r7, #4]
 8007b62:	1ad3      	subs	r3, r2, r3
 8007b64:	68ba      	ldr	r2, [r7, #8]
 8007b66:	429a      	cmp	r2, r3
 8007b68:	d302      	bcc.n	8007b70 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8007b6a:	68bb      	ldr	r3, [r7, #8]
 8007b6c:	2b00      	cmp	r3, #0
 8007b6e:	d116      	bne.n	8007b9e <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 8007b70:	68fb      	ldr	r3, [r7, #12]
 8007b72:	2200      	movs	r2, #0
 8007b74:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8007b76:	68fb      	ldr	r3, [r7, #12]
 8007b78:	2220      	movs	r2, #32
 8007b7a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007b7e:	68fb      	ldr	r3, [r7, #12]
 8007b80:	2200      	movs	r2, #0
 8007b82:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007b86:	68fb      	ldr	r3, [r7, #12]
 8007b88:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007b8a:	f043 0220 	orr.w	r2, r3, #32
 8007b8e:	68fb      	ldr	r3, [r7, #12]
 8007b90:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8007b92:	68fb      	ldr	r3, [r7, #12]
 8007b94:	2200      	movs	r2, #0
 8007b96:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 8007b9a:	2301      	movs	r3, #1
 8007b9c:	e007      	b.n	8007bae <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8007b9e:	68fb      	ldr	r3, [r7, #12]
 8007ba0:	681b      	ldr	r3, [r3, #0]
 8007ba2:	695b      	ldr	r3, [r3, #20]
 8007ba4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007ba8:	2b80      	cmp	r3, #128	; 0x80
 8007baa:	d1ca      	bne.n	8007b42 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 8007bac:	2300      	movs	r3, #0
}
 8007bae:	4618      	mov	r0, r3
 8007bb0:	3710      	adds	r7, #16
 8007bb2:	46bd      	mov	sp, r7
 8007bb4:	bd80      	pop	{r7, pc}

08007bb6 <I2C_WaitOnBTFFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnBTFFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8007bb6:	b580      	push	{r7, lr}
 8007bb8:	b084      	sub	sp, #16
 8007bba:	af00      	add	r7, sp, #0
 8007bbc:	60f8      	str	r0, [r7, #12]
 8007bbe:	60b9      	str	r1, [r7, #8]
 8007bc0:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8007bc2:	e02d      	b.n	8007c20 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8007bc4:	68f8      	ldr	r0, [r7, #12]
 8007bc6:	f000 f837 	bl	8007c38 <I2C_IsAcknowledgeFailed>
 8007bca:	4603      	mov	r3, r0
 8007bcc:	2b00      	cmp	r3, #0
 8007bce:	d001      	beq.n	8007bd4 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 8007bd0:	2301      	movs	r3, #1
 8007bd2:	e02d      	b.n	8007c30 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8007bd4:	68bb      	ldr	r3, [r7, #8]
 8007bd6:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007bda:	d021      	beq.n	8007c20 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007bdc:	f7fe fde4 	bl	80067a8 <HAL_GetTick>
 8007be0:	4602      	mov	r2, r0
 8007be2:	687b      	ldr	r3, [r7, #4]
 8007be4:	1ad3      	subs	r3, r2, r3
 8007be6:	68ba      	ldr	r2, [r7, #8]
 8007be8:	429a      	cmp	r2, r3
 8007bea:	d302      	bcc.n	8007bf2 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8007bec:	68bb      	ldr	r3, [r7, #8]
 8007bee:	2b00      	cmp	r3, #0
 8007bf0:	d116      	bne.n	8007c20 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 8007bf2:	68fb      	ldr	r3, [r7, #12]
 8007bf4:	2200      	movs	r2, #0
 8007bf6:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8007bf8:	68fb      	ldr	r3, [r7, #12]
 8007bfa:	2220      	movs	r2, #32
 8007bfc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007c00:	68fb      	ldr	r3, [r7, #12]
 8007c02:	2200      	movs	r2, #0
 8007c04:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007c08:	68fb      	ldr	r3, [r7, #12]
 8007c0a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007c0c:	f043 0220 	orr.w	r2, r3, #32
 8007c10:	68fb      	ldr	r3, [r7, #12]
 8007c12:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8007c14:	68fb      	ldr	r3, [r7, #12]
 8007c16:	2200      	movs	r2, #0
 8007c18:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 8007c1c:	2301      	movs	r3, #1
 8007c1e:	e007      	b.n	8007c30 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8007c20:	68fb      	ldr	r3, [r7, #12]
 8007c22:	681b      	ldr	r3, [r3, #0]
 8007c24:	695b      	ldr	r3, [r3, #20]
 8007c26:	f003 0304 	and.w	r3, r3, #4
 8007c2a:	2b04      	cmp	r3, #4
 8007c2c:	d1ca      	bne.n	8007bc4 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 8007c2e:	2300      	movs	r3, #0
}
 8007c30:	4618      	mov	r0, r3
 8007c32:	3710      	adds	r7, #16
 8007c34:	46bd      	mov	sp, r7
 8007c36:	bd80      	pop	{r7, pc}

08007c38 <I2C_IsAcknowledgeFailed>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
 8007c38:	b480      	push	{r7}
 8007c3a:	b083      	sub	sp, #12
 8007c3c:	af00      	add	r7, sp, #0
 8007c3e:	6078      	str	r0, [r7, #4]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8007c40:	687b      	ldr	r3, [r7, #4]
 8007c42:	681b      	ldr	r3, [r3, #0]
 8007c44:	695b      	ldr	r3, [r3, #20]
 8007c46:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8007c4a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007c4e:	d11b      	bne.n	8007c88 <I2C_IsAcknowledgeFailed+0x50>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8007c50:	687b      	ldr	r3, [r7, #4]
 8007c52:	681b      	ldr	r3, [r3, #0]
 8007c54:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8007c58:	615a      	str	r2, [r3, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
 8007c5a:	687b      	ldr	r3, [r7, #4]
 8007c5c:	2200      	movs	r2, #0
 8007c5e:	631a      	str	r2, [r3, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8007c60:	687b      	ldr	r3, [r7, #4]
 8007c62:	2220      	movs	r2, #32
 8007c64:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007c68:	687b      	ldr	r3, [r7, #4]
 8007c6a:	2200      	movs	r2, #0
 8007c6c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8007c70:	687b      	ldr	r3, [r7, #4]
 8007c72:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007c74:	f043 0204 	orr.w	r2, r3, #4
 8007c78:	687b      	ldr	r3, [r7, #4]
 8007c7a:	641a      	str	r2, [r3, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8007c7c:	687b      	ldr	r3, [r7, #4]
 8007c7e:	2200      	movs	r2, #0
 8007c80:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_ERROR;
 8007c84:	2301      	movs	r3, #1
 8007c86:	e000      	b.n	8007c8a <I2C_IsAcknowledgeFailed+0x52>
  }
  return HAL_OK;
 8007c88:	2300      	movs	r3, #0
}
 8007c8a:	4618      	mov	r0, r3
 8007c8c:	370c      	adds	r7, #12
 8007c8e:	46bd      	mov	sp, r7
 8007c90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c94:	4770      	bx	lr
	...

08007c98 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8007c98:	b580      	push	{r7, lr}
 8007c9a:	b086      	sub	sp, #24
 8007c9c:	af00      	add	r7, sp, #0
 8007c9e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8007ca0:	687b      	ldr	r3, [r7, #4]
 8007ca2:	2b00      	cmp	r3, #0
 8007ca4:	d101      	bne.n	8007caa <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8007ca6:	2301      	movs	r3, #1
 8007ca8:	e264      	b.n	8008174 <HAL_RCC_OscConfig+0x4dc>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8007caa:	687b      	ldr	r3, [r7, #4]
 8007cac:	681b      	ldr	r3, [r3, #0]
 8007cae:	f003 0301 	and.w	r3, r3, #1
 8007cb2:	2b00      	cmp	r3, #0
 8007cb4:	d075      	beq.n	8007da2 <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8007cb6:	4ba3      	ldr	r3, [pc, #652]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007cb8:	689b      	ldr	r3, [r3, #8]
 8007cba:	f003 030c 	and.w	r3, r3, #12
 8007cbe:	2b04      	cmp	r3, #4
 8007cc0:	d00c      	beq.n	8007cdc <HAL_RCC_OscConfig+0x44>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8007cc2:	4ba0      	ldr	r3, [pc, #640]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007cc4:	689b      	ldr	r3, [r3, #8]
 8007cc6:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8007cca:	2b08      	cmp	r3, #8
 8007ccc:	d112      	bne.n	8007cf4 <HAL_RCC_OscConfig+0x5c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8007cce:	4b9d      	ldr	r3, [pc, #628]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007cd0:	685b      	ldr	r3, [r3, #4]
 8007cd2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8007cd6:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8007cda:	d10b      	bne.n	8007cf4 <HAL_RCC_OscConfig+0x5c>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8007cdc:	4b99      	ldr	r3, [pc, #612]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007cde:	681b      	ldr	r3, [r3, #0]
 8007ce0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007ce4:	2b00      	cmp	r3, #0
 8007ce6:	d05b      	beq.n	8007da0 <HAL_RCC_OscConfig+0x108>
 8007ce8:	687b      	ldr	r3, [r7, #4]
 8007cea:	685b      	ldr	r3, [r3, #4]
 8007cec:	2b00      	cmp	r3, #0
 8007cee:	d157      	bne.n	8007da0 <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
 8007cf0:	2301      	movs	r3, #1
 8007cf2:	e23f      	b.n	8008174 <HAL_RCC_OscConfig+0x4dc>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8007cf4:	687b      	ldr	r3, [r7, #4]
 8007cf6:	685b      	ldr	r3, [r3, #4]
 8007cf8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007cfc:	d106      	bne.n	8007d0c <HAL_RCC_OscConfig+0x74>
 8007cfe:	4b91      	ldr	r3, [pc, #580]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007d00:	681b      	ldr	r3, [r3, #0]
 8007d02:	4a90      	ldr	r2, [pc, #576]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007d04:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007d08:	6013      	str	r3, [r2, #0]
 8007d0a:	e01d      	b.n	8007d48 <HAL_RCC_OscConfig+0xb0>
 8007d0c:	687b      	ldr	r3, [r7, #4]
 8007d0e:	685b      	ldr	r3, [r3, #4]
 8007d10:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8007d14:	d10c      	bne.n	8007d30 <HAL_RCC_OscConfig+0x98>
 8007d16:	4b8b      	ldr	r3, [pc, #556]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007d18:	681b      	ldr	r3, [r3, #0]
 8007d1a:	4a8a      	ldr	r2, [pc, #552]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007d1c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8007d20:	6013      	str	r3, [r2, #0]
 8007d22:	4b88      	ldr	r3, [pc, #544]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007d24:	681b      	ldr	r3, [r3, #0]
 8007d26:	4a87      	ldr	r2, [pc, #540]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007d28:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007d2c:	6013      	str	r3, [r2, #0]
 8007d2e:	e00b      	b.n	8007d48 <HAL_RCC_OscConfig+0xb0>
 8007d30:	4b84      	ldr	r3, [pc, #528]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007d32:	681b      	ldr	r3, [r3, #0]
 8007d34:	4a83      	ldr	r2, [pc, #524]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007d36:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007d3a:	6013      	str	r3, [r2, #0]
 8007d3c:	4b81      	ldr	r3, [pc, #516]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007d3e:	681b      	ldr	r3, [r3, #0]
 8007d40:	4a80      	ldr	r2, [pc, #512]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007d42:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8007d46:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8007d48:	687b      	ldr	r3, [r7, #4]
 8007d4a:	685b      	ldr	r3, [r3, #4]
 8007d4c:	2b00      	cmp	r3, #0
 8007d4e:	d013      	beq.n	8007d78 <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8007d50:	f7fe fd2a 	bl	80067a8 <HAL_GetTick>
 8007d54:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007d56:	e008      	b.n	8007d6a <HAL_RCC_OscConfig+0xd2>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8007d58:	f7fe fd26 	bl	80067a8 <HAL_GetTick>
 8007d5c:	4602      	mov	r2, r0
 8007d5e:	693b      	ldr	r3, [r7, #16]
 8007d60:	1ad3      	subs	r3, r2, r3
 8007d62:	2b64      	cmp	r3, #100	; 0x64
 8007d64:	d901      	bls.n	8007d6a <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
 8007d66:	2303      	movs	r3, #3
 8007d68:	e204      	b.n	8008174 <HAL_RCC_OscConfig+0x4dc>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007d6a:	4b76      	ldr	r3, [pc, #472]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007d6c:	681b      	ldr	r3, [r3, #0]
 8007d6e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007d72:	2b00      	cmp	r3, #0
 8007d74:	d0f0      	beq.n	8007d58 <HAL_RCC_OscConfig+0xc0>
 8007d76:	e014      	b.n	8007da2 <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8007d78:	f7fe fd16 	bl	80067a8 <HAL_GetTick>
 8007d7c:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8007d7e:	e008      	b.n	8007d92 <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8007d80:	f7fe fd12 	bl	80067a8 <HAL_GetTick>
 8007d84:	4602      	mov	r2, r0
 8007d86:	693b      	ldr	r3, [r7, #16]
 8007d88:	1ad3      	subs	r3, r2, r3
 8007d8a:	2b64      	cmp	r3, #100	; 0x64
 8007d8c:	d901      	bls.n	8007d92 <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 8007d8e:	2303      	movs	r3, #3
 8007d90:	e1f0      	b.n	8008174 <HAL_RCC_OscConfig+0x4dc>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8007d92:	4b6c      	ldr	r3, [pc, #432]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007d94:	681b      	ldr	r3, [r3, #0]
 8007d96:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007d9a:	2b00      	cmp	r3, #0
 8007d9c:	d1f0      	bne.n	8007d80 <HAL_RCC_OscConfig+0xe8>
 8007d9e:	e000      	b.n	8007da2 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8007da0:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8007da2:	687b      	ldr	r3, [r7, #4]
 8007da4:	681b      	ldr	r3, [r3, #0]
 8007da6:	f003 0302 	and.w	r3, r3, #2
 8007daa:	2b00      	cmp	r3, #0
 8007dac:	d063      	beq.n	8007e76 <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8007dae:	4b65      	ldr	r3, [pc, #404]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007db0:	689b      	ldr	r3, [r3, #8]
 8007db2:	f003 030c 	and.w	r3, r3, #12
 8007db6:	2b00      	cmp	r3, #0
 8007db8:	d00b      	beq.n	8007dd2 <HAL_RCC_OscConfig+0x13a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8007dba:	4b62      	ldr	r3, [pc, #392]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007dbc:	689b      	ldr	r3, [r3, #8]
 8007dbe:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8007dc2:	2b08      	cmp	r3, #8
 8007dc4:	d11c      	bne.n	8007e00 <HAL_RCC_OscConfig+0x168>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8007dc6:	4b5f      	ldr	r3, [pc, #380]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007dc8:	685b      	ldr	r3, [r3, #4]
 8007dca:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8007dce:	2b00      	cmp	r3, #0
 8007dd0:	d116      	bne.n	8007e00 <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8007dd2:	4b5c      	ldr	r3, [pc, #368]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007dd4:	681b      	ldr	r3, [r3, #0]
 8007dd6:	f003 0302 	and.w	r3, r3, #2
 8007dda:	2b00      	cmp	r3, #0
 8007ddc:	d005      	beq.n	8007dea <HAL_RCC_OscConfig+0x152>
 8007dde:	687b      	ldr	r3, [r7, #4]
 8007de0:	68db      	ldr	r3, [r3, #12]
 8007de2:	2b01      	cmp	r3, #1
 8007de4:	d001      	beq.n	8007dea <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
 8007de6:	2301      	movs	r3, #1
 8007de8:	e1c4      	b.n	8008174 <HAL_RCC_OscConfig+0x4dc>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007dea:	4b56      	ldr	r3, [pc, #344]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007dec:	681b      	ldr	r3, [r3, #0]
 8007dee:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8007df2:	687b      	ldr	r3, [r7, #4]
 8007df4:	691b      	ldr	r3, [r3, #16]
 8007df6:	00db      	lsls	r3, r3, #3
 8007df8:	4952      	ldr	r1, [pc, #328]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007dfa:	4313      	orrs	r3, r2
 8007dfc:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8007dfe:	e03a      	b.n	8007e76 <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8007e00:	687b      	ldr	r3, [r7, #4]
 8007e02:	68db      	ldr	r3, [r3, #12]
 8007e04:	2b00      	cmp	r3, #0
 8007e06:	d020      	beq.n	8007e4a <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8007e08:	4b4f      	ldr	r3, [pc, #316]	; (8007f48 <HAL_RCC_OscConfig+0x2b0>)
 8007e0a:	2201      	movs	r2, #1
 8007e0c:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007e0e:	f7fe fccb 	bl	80067a8 <HAL_GetTick>
 8007e12:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007e14:	e008      	b.n	8007e28 <HAL_RCC_OscConfig+0x190>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007e16:	f7fe fcc7 	bl	80067a8 <HAL_GetTick>
 8007e1a:	4602      	mov	r2, r0
 8007e1c:	693b      	ldr	r3, [r7, #16]
 8007e1e:	1ad3      	subs	r3, r2, r3
 8007e20:	2b02      	cmp	r3, #2
 8007e22:	d901      	bls.n	8007e28 <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
 8007e24:	2303      	movs	r3, #3
 8007e26:	e1a5      	b.n	8008174 <HAL_RCC_OscConfig+0x4dc>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007e28:	4b46      	ldr	r3, [pc, #280]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007e2a:	681b      	ldr	r3, [r3, #0]
 8007e2c:	f003 0302 	and.w	r3, r3, #2
 8007e30:	2b00      	cmp	r3, #0
 8007e32:	d0f0      	beq.n	8007e16 <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007e34:	4b43      	ldr	r3, [pc, #268]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007e36:	681b      	ldr	r3, [r3, #0]
 8007e38:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8007e3c:	687b      	ldr	r3, [r7, #4]
 8007e3e:	691b      	ldr	r3, [r3, #16]
 8007e40:	00db      	lsls	r3, r3, #3
 8007e42:	4940      	ldr	r1, [pc, #256]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007e44:	4313      	orrs	r3, r2
 8007e46:	600b      	str	r3, [r1, #0]
 8007e48:	e015      	b.n	8007e76 <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8007e4a:	4b3f      	ldr	r3, [pc, #252]	; (8007f48 <HAL_RCC_OscConfig+0x2b0>)
 8007e4c:	2200      	movs	r2, #0
 8007e4e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007e50:	f7fe fcaa 	bl	80067a8 <HAL_GetTick>
 8007e54:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007e56:	e008      	b.n	8007e6a <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007e58:	f7fe fca6 	bl	80067a8 <HAL_GetTick>
 8007e5c:	4602      	mov	r2, r0
 8007e5e:	693b      	ldr	r3, [r7, #16]
 8007e60:	1ad3      	subs	r3, r2, r3
 8007e62:	2b02      	cmp	r3, #2
 8007e64:	d901      	bls.n	8007e6a <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
 8007e66:	2303      	movs	r3, #3
 8007e68:	e184      	b.n	8008174 <HAL_RCC_OscConfig+0x4dc>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007e6a:	4b36      	ldr	r3, [pc, #216]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007e6c:	681b      	ldr	r3, [r3, #0]
 8007e6e:	f003 0302 	and.w	r3, r3, #2
 8007e72:	2b00      	cmp	r3, #0
 8007e74:	d1f0      	bne.n	8007e58 <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8007e76:	687b      	ldr	r3, [r7, #4]
 8007e78:	681b      	ldr	r3, [r3, #0]
 8007e7a:	f003 0308 	and.w	r3, r3, #8
 8007e7e:	2b00      	cmp	r3, #0
 8007e80:	d030      	beq.n	8007ee4 <HAL_RCC_OscConfig+0x24c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8007e82:	687b      	ldr	r3, [r7, #4]
 8007e84:	695b      	ldr	r3, [r3, #20]
 8007e86:	2b00      	cmp	r3, #0
 8007e88:	d016      	beq.n	8007eb8 <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8007e8a:	4b30      	ldr	r3, [pc, #192]	; (8007f4c <HAL_RCC_OscConfig+0x2b4>)
 8007e8c:	2201      	movs	r2, #1
 8007e8e:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8007e90:	f7fe fc8a 	bl	80067a8 <HAL_GetTick>
 8007e94:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8007e96:	e008      	b.n	8007eaa <HAL_RCC_OscConfig+0x212>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8007e98:	f7fe fc86 	bl	80067a8 <HAL_GetTick>
 8007e9c:	4602      	mov	r2, r0
 8007e9e:	693b      	ldr	r3, [r7, #16]
 8007ea0:	1ad3      	subs	r3, r2, r3
 8007ea2:	2b02      	cmp	r3, #2
 8007ea4:	d901      	bls.n	8007eaa <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
 8007ea6:	2303      	movs	r3, #3
 8007ea8:	e164      	b.n	8008174 <HAL_RCC_OscConfig+0x4dc>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8007eaa:	4b26      	ldr	r3, [pc, #152]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007eac:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8007eae:	f003 0302 	and.w	r3, r3, #2
 8007eb2:	2b00      	cmp	r3, #0
 8007eb4:	d0f0      	beq.n	8007e98 <HAL_RCC_OscConfig+0x200>
 8007eb6:	e015      	b.n	8007ee4 <HAL_RCC_OscConfig+0x24c>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8007eb8:	4b24      	ldr	r3, [pc, #144]	; (8007f4c <HAL_RCC_OscConfig+0x2b4>)
 8007eba:	2200      	movs	r2, #0
 8007ebc:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8007ebe:	f7fe fc73 	bl	80067a8 <HAL_GetTick>
 8007ec2:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8007ec4:	e008      	b.n	8007ed8 <HAL_RCC_OscConfig+0x240>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8007ec6:	f7fe fc6f 	bl	80067a8 <HAL_GetTick>
 8007eca:	4602      	mov	r2, r0
 8007ecc:	693b      	ldr	r3, [r7, #16]
 8007ece:	1ad3      	subs	r3, r2, r3
 8007ed0:	2b02      	cmp	r3, #2
 8007ed2:	d901      	bls.n	8007ed8 <HAL_RCC_OscConfig+0x240>
        {
          return HAL_TIMEOUT;
 8007ed4:	2303      	movs	r3, #3
 8007ed6:	e14d      	b.n	8008174 <HAL_RCC_OscConfig+0x4dc>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8007ed8:	4b1a      	ldr	r3, [pc, #104]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007eda:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8007edc:	f003 0302 	and.w	r3, r3, #2
 8007ee0:	2b00      	cmp	r3, #0
 8007ee2:	d1f0      	bne.n	8007ec6 <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8007ee4:	687b      	ldr	r3, [r7, #4]
 8007ee6:	681b      	ldr	r3, [r3, #0]
 8007ee8:	f003 0304 	and.w	r3, r3, #4
 8007eec:	2b00      	cmp	r3, #0
 8007eee:	f000 80a0 	beq.w	8008032 <HAL_RCC_OscConfig+0x39a>
  {
    FlagStatus       pwrclkchanged = RESET;
 8007ef2:	2300      	movs	r3, #0
 8007ef4:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8007ef6:	4b13      	ldr	r3, [pc, #76]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007ef8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007efa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007efe:	2b00      	cmp	r3, #0
 8007f00:	d10f      	bne.n	8007f22 <HAL_RCC_OscConfig+0x28a>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8007f02:	2300      	movs	r3, #0
 8007f04:	60bb      	str	r3, [r7, #8]
 8007f06:	4b0f      	ldr	r3, [pc, #60]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007f08:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007f0a:	4a0e      	ldr	r2, [pc, #56]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007f0c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8007f10:	6413      	str	r3, [r2, #64]	; 0x40
 8007f12:	4b0c      	ldr	r3, [pc, #48]	; (8007f44 <HAL_RCC_OscConfig+0x2ac>)
 8007f14:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007f16:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007f1a:	60bb      	str	r3, [r7, #8]
 8007f1c:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8007f1e:	2301      	movs	r3, #1
 8007f20:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8007f22:	4b0b      	ldr	r3, [pc, #44]	; (8007f50 <HAL_RCC_OscConfig+0x2b8>)
 8007f24:	681b      	ldr	r3, [r3, #0]
 8007f26:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007f2a:	2b00      	cmp	r3, #0
 8007f2c:	d121      	bne.n	8007f72 <HAL_RCC_OscConfig+0x2da>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8007f2e:	4b08      	ldr	r3, [pc, #32]	; (8007f50 <HAL_RCC_OscConfig+0x2b8>)
 8007f30:	681b      	ldr	r3, [r3, #0]
 8007f32:	4a07      	ldr	r2, [pc, #28]	; (8007f50 <HAL_RCC_OscConfig+0x2b8>)
 8007f34:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007f38:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8007f3a:	f7fe fc35 	bl	80067a8 <HAL_GetTick>
 8007f3e:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8007f40:	e011      	b.n	8007f66 <HAL_RCC_OscConfig+0x2ce>
 8007f42:	bf00      	nop
 8007f44:	40023800 	.word	0x40023800
 8007f48:	42470000 	.word	0x42470000
 8007f4c:	42470e80 	.word	0x42470e80
 8007f50:	40007000 	.word	0x40007000
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007f54:	f7fe fc28 	bl	80067a8 <HAL_GetTick>
 8007f58:	4602      	mov	r2, r0
 8007f5a:	693b      	ldr	r3, [r7, #16]
 8007f5c:	1ad3      	subs	r3, r2, r3
 8007f5e:	2b02      	cmp	r3, #2
 8007f60:	d901      	bls.n	8007f66 <HAL_RCC_OscConfig+0x2ce>
        {
          return HAL_TIMEOUT;
 8007f62:	2303      	movs	r3, #3
 8007f64:	e106      	b.n	8008174 <HAL_RCC_OscConfig+0x4dc>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8007f66:	4b85      	ldr	r3, [pc, #532]	; (800817c <HAL_RCC_OscConfig+0x4e4>)
 8007f68:	681b      	ldr	r3, [r3, #0]
 8007f6a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007f6e:	2b00      	cmp	r3, #0
 8007f70:	d0f0      	beq.n	8007f54 <HAL_RCC_OscConfig+0x2bc>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007f72:	687b      	ldr	r3, [r7, #4]
 8007f74:	689b      	ldr	r3, [r3, #8]
 8007f76:	2b01      	cmp	r3, #1
 8007f78:	d106      	bne.n	8007f88 <HAL_RCC_OscConfig+0x2f0>
 8007f7a:	4b81      	ldr	r3, [pc, #516]	; (8008180 <HAL_RCC_OscConfig+0x4e8>)
 8007f7c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007f7e:	4a80      	ldr	r2, [pc, #512]	; (8008180 <HAL_RCC_OscConfig+0x4e8>)
 8007f80:	f043 0301 	orr.w	r3, r3, #1
 8007f84:	6713      	str	r3, [r2, #112]	; 0x70
 8007f86:	e01c      	b.n	8007fc2 <HAL_RCC_OscConfig+0x32a>
 8007f88:	687b      	ldr	r3, [r7, #4]
 8007f8a:	689b      	ldr	r3, [r3, #8]
 8007f8c:	2b05      	cmp	r3, #5
 8007f8e:	d10c      	bne.n	8007faa <HAL_RCC_OscConfig+0x312>
 8007f90:	4b7b      	ldr	r3, [pc, #492]	; (8008180 <HAL_RCC_OscConfig+0x4e8>)
 8007f92:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007f94:	4a7a      	ldr	r2, [pc, #488]	; (8008180 <HAL_RCC_OscConfig+0x4e8>)
 8007f96:	f043 0304 	orr.w	r3, r3, #4
 8007f9a:	6713      	str	r3, [r2, #112]	; 0x70
 8007f9c:	4b78      	ldr	r3, [pc, #480]	; (8008180 <HAL_RCC_OscConfig+0x4e8>)
 8007f9e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007fa0:	4a77      	ldr	r2, [pc, #476]	; (8008180 <HAL_RCC_OscConfig+0x4e8>)
 8007fa2:	f043 0301 	orr.w	r3, r3, #1
 8007fa6:	6713      	str	r3, [r2, #112]	; 0x70
 8007fa8:	e00b      	b.n	8007fc2 <HAL_RCC_OscConfig+0x32a>
 8007faa:	4b75      	ldr	r3, [pc, #468]	; (8008180 <HAL_RCC_OscConfig+0x4e8>)
 8007fac:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007fae:	4a74      	ldr	r2, [pc, #464]	; (8008180 <HAL_RCC_OscConfig+0x4e8>)
 8007fb0:	f023 0301 	bic.w	r3, r3, #1
 8007fb4:	6713      	str	r3, [r2, #112]	; 0x70
 8007fb6:	4b72      	ldr	r3, [pc, #456]	; (8008180 <HAL_RCC_OscConfig+0x4e8>)
 8007fb8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007fba:	4a71      	ldr	r2, [pc, #452]	; (8008180 <HAL_RCC_OscConfig+0x4e8>)
 8007fbc:	f023 0304 	bic.w	r3, r3, #4
 8007fc0:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8007fc2:	687b      	ldr	r3, [r7, #4]
 8007fc4:	689b      	ldr	r3, [r3, #8]
 8007fc6:	2b00      	cmp	r3, #0
 8007fc8:	d015      	beq.n	8007ff6 <HAL_RCC_OscConfig+0x35e>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8007fca:	f7fe fbed 	bl	80067a8 <HAL_GetTick>
 8007fce:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007fd0:	e00a      	b.n	8007fe8 <HAL_RCC_OscConfig+0x350>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007fd2:	f7fe fbe9 	bl	80067a8 <HAL_GetTick>
 8007fd6:	4602      	mov	r2, r0
 8007fd8:	693b      	ldr	r3, [r7, #16]
 8007fda:	1ad3      	subs	r3, r2, r3
 8007fdc:	f241 3288 	movw	r2, #5000	; 0x1388
 8007fe0:	4293      	cmp	r3, r2
 8007fe2:	d901      	bls.n	8007fe8 <HAL_RCC_OscConfig+0x350>
        {
          return HAL_TIMEOUT;
 8007fe4:	2303      	movs	r3, #3
 8007fe6:	e0c5      	b.n	8008174 <HAL_RCC_OscConfig+0x4dc>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007fe8:	4b65      	ldr	r3, [pc, #404]	; (8008180 <HAL_RCC_OscConfig+0x4e8>)
 8007fea:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007fec:	f003 0302 	and.w	r3, r3, #2
 8007ff0:	2b00      	cmp	r3, #0
 8007ff2:	d0ee      	beq.n	8007fd2 <HAL_RCC_OscConfig+0x33a>
 8007ff4:	e014      	b.n	8008020 <HAL_RCC_OscConfig+0x388>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8007ff6:	f7fe fbd7 	bl	80067a8 <HAL_GetTick>
 8007ffa:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8007ffc:	e00a      	b.n	8008014 <HAL_RCC_OscConfig+0x37c>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007ffe:	f7fe fbd3 	bl	80067a8 <HAL_GetTick>
 8008002:	4602      	mov	r2, r0
 8008004:	693b      	ldr	r3, [r7, #16]
 8008006:	1ad3      	subs	r3, r2, r3
 8008008:	f241 3288 	movw	r2, #5000	; 0x1388
 800800c:	4293      	cmp	r3, r2
 800800e:	d901      	bls.n	8008014 <HAL_RCC_OscConfig+0x37c>
        {
          return HAL_TIMEOUT;
 8008010:	2303      	movs	r3, #3
 8008012:	e0af      	b.n	8008174 <HAL_RCC_OscConfig+0x4dc>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8008014:	4b5a      	ldr	r3, [pc, #360]	; (8008180 <HAL_RCC_OscConfig+0x4e8>)
 8008016:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008018:	f003 0302 	and.w	r3, r3, #2
 800801c:	2b00      	cmp	r3, #0
 800801e:	d1ee      	bne.n	8007ffe <HAL_RCC_OscConfig+0x366>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 8008020:	7dfb      	ldrb	r3, [r7, #23]
 8008022:	2b01      	cmp	r3, #1
 8008024:	d105      	bne.n	8008032 <HAL_RCC_OscConfig+0x39a>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8008026:	4b56      	ldr	r3, [pc, #344]	; (8008180 <HAL_RCC_OscConfig+0x4e8>)
 8008028:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800802a:	4a55      	ldr	r2, [pc, #340]	; (8008180 <HAL_RCC_OscConfig+0x4e8>)
 800802c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8008030:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8008032:	687b      	ldr	r3, [r7, #4]
 8008034:	699b      	ldr	r3, [r3, #24]
 8008036:	2b00      	cmp	r3, #0
 8008038:	f000 809b 	beq.w	8008172 <HAL_RCC_OscConfig+0x4da>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800803c:	4b50      	ldr	r3, [pc, #320]	; (8008180 <HAL_RCC_OscConfig+0x4e8>)
 800803e:	689b      	ldr	r3, [r3, #8]
 8008040:	f003 030c 	and.w	r3, r3, #12
 8008044:	2b08      	cmp	r3, #8
 8008046:	d05c      	beq.n	8008102 <HAL_RCC_OscConfig+0x46a>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8008048:	687b      	ldr	r3, [r7, #4]
 800804a:	699b      	ldr	r3, [r3, #24]
 800804c:	2b02      	cmp	r3, #2
 800804e:	d141      	bne.n	80080d4 <HAL_RCC_OscConfig+0x43c>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8008050:	4b4c      	ldr	r3, [pc, #304]	; (8008184 <HAL_RCC_OscConfig+0x4ec>)
 8008052:	2200      	movs	r2, #0
 8008054:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8008056:	f7fe fba7 	bl	80067a8 <HAL_GetTick>
 800805a:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800805c:	e008      	b.n	8008070 <HAL_RCC_OscConfig+0x3d8>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800805e:	f7fe fba3 	bl	80067a8 <HAL_GetTick>
 8008062:	4602      	mov	r2, r0
 8008064:	693b      	ldr	r3, [r7, #16]
 8008066:	1ad3      	subs	r3, r2, r3
 8008068:	2b02      	cmp	r3, #2
 800806a:	d901      	bls.n	8008070 <HAL_RCC_OscConfig+0x3d8>
          {
            return HAL_TIMEOUT;
 800806c:	2303      	movs	r3, #3
 800806e:	e081      	b.n	8008174 <HAL_RCC_OscConfig+0x4dc>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8008070:	4b43      	ldr	r3, [pc, #268]	; (8008180 <HAL_RCC_OscConfig+0x4e8>)
 8008072:	681b      	ldr	r3, [r3, #0]
 8008074:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008078:	2b00      	cmp	r3, #0
 800807a:	d1f0      	bne.n	800805e <HAL_RCC_OscConfig+0x3c6>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800807c:	687b      	ldr	r3, [r7, #4]
 800807e:	69da      	ldr	r2, [r3, #28]
 8008080:	687b      	ldr	r3, [r7, #4]
 8008082:	6a1b      	ldr	r3, [r3, #32]
 8008084:	431a      	orrs	r2, r3
 8008086:	687b      	ldr	r3, [r7, #4]
 8008088:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800808a:	019b      	lsls	r3, r3, #6
 800808c:	431a      	orrs	r2, r3
 800808e:	687b      	ldr	r3, [r7, #4]
 8008090:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008092:	085b      	lsrs	r3, r3, #1
 8008094:	3b01      	subs	r3, #1
 8008096:	041b      	lsls	r3, r3, #16
 8008098:	431a      	orrs	r2, r3
 800809a:	687b      	ldr	r3, [r7, #4]
 800809c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800809e:	061b      	lsls	r3, r3, #24
 80080a0:	4937      	ldr	r1, [pc, #220]	; (8008180 <HAL_RCC_OscConfig+0x4e8>)
 80080a2:	4313      	orrs	r3, r2
 80080a4:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 80080a6:	4b37      	ldr	r3, [pc, #220]	; (8008184 <HAL_RCC_OscConfig+0x4ec>)
 80080a8:	2201      	movs	r2, #1
 80080aa:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80080ac:	f7fe fb7c 	bl	80067a8 <HAL_GetTick>
 80080b0:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80080b2:	e008      	b.n	80080c6 <HAL_RCC_OscConfig+0x42e>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80080b4:	f7fe fb78 	bl	80067a8 <HAL_GetTick>
 80080b8:	4602      	mov	r2, r0
 80080ba:	693b      	ldr	r3, [r7, #16]
 80080bc:	1ad3      	subs	r3, r2, r3
 80080be:	2b02      	cmp	r3, #2
 80080c0:	d901      	bls.n	80080c6 <HAL_RCC_OscConfig+0x42e>
          {
            return HAL_TIMEOUT;
 80080c2:	2303      	movs	r3, #3
 80080c4:	e056      	b.n	8008174 <HAL_RCC_OscConfig+0x4dc>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80080c6:	4b2e      	ldr	r3, [pc, #184]	; (8008180 <HAL_RCC_OscConfig+0x4e8>)
 80080c8:	681b      	ldr	r3, [r3, #0]
 80080ca:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80080ce:	2b00      	cmp	r3, #0
 80080d0:	d0f0      	beq.n	80080b4 <HAL_RCC_OscConfig+0x41c>
 80080d2:	e04e      	b.n	8008172 <HAL_RCC_OscConfig+0x4da>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80080d4:	4b2b      	ldr	r3, [pc, #172]	; (8008184 <HAL_RCC_OscConfig+0x4ec>)
 80080d6:	2200      	movs	r2, #0
 80080d8:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80080da:	f7fe fb65 	bl	80067a8 <HAL_GetTick>
 80080de:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80080e0:	e008      	b.n	80080f4 <HAL_RCC_OscConfig+0x45c>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80080e2:	f7fe fb61 	bl	80067a8 <HAL_GetTick>
 80080e6:	4602      	mov	r2, r0
 80080e8:	693b      	ldr	r3, [r7, #16]
 80080ea:	1ad3      	subs	r3, r2, r3
 80080ec:	2b02      	cmp	r3, #2
 80080ee:	d901      	bls.n	80080f4 <HAL_RCC_OscConfig+0x45c>
          {
            return HAL_TIMEOUT;
 80080f0:	2303      	movs	r3, #3
 80080f2:	e03f      	b.n	8008174 <HAL_RCC_OscConfig+0x4dc>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80080f4:	4b22      	ldr	r3, [pc, #136]	; (8008180 <HAL_RCC_OscConfig+0x4e8>)
 80080f6:	681b      	ldr	r3, [r3, #0]
 80080f8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80080fc:	2b00      	cmp	r3, #0
 80080fe:	d1f0      	bne.n	80080e2 <HAL_RCC_OscConfig+0x44a>
 8008100:	e037      	b.n	8008172 <HAL_RCC_OscConfig+0x4da>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8008102:	687b      	ldr	r3, [r7, #4]
 8008104:	699b      	ldr	r3, [r3, #24]
 8008106:	2b01      	cmp	r3, #1
 8008108:	d101      	bne.n	800810e <HAL_RCC_OscConfig+0x476>
      {
        return HAL_ERROR;
 800810a:	2301      	movs	r3, #1
 800810c:	e032      	b.n	8008174 <HAL_RCC_OscConfig+0x4dc>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 800810e:	4b1c      	ldr	r3, [pc, #112]	; (8008180 <HAL_RCC_OscConfig+0x4e8>)
 8008110:	685b      	ldr	r3, [r3, #4]
 8008112:	60fb      	str	r3, [r7, #12]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
#else
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8008114:	687b      	ldr	r3, [r7, #4]
 8008116:	699b      	ldr	r3, [r3, #24]
 8008118:	2b01      	cmp	r3, #1
 800811a:	d028      	beq.n	800816e <HAL_RCC_OscConfig+0x4d6>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800811c:	68fb      	ldr	r3, [r7, #12]
 800811e:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8008122:	687b      	ldr	r3, [r7, #4]
 8008124:	69db      	ldr	r3, [r3, #28]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8008126:	429a      	cmp	r2, r3
 8008128:	d121      	bne.n	800816e <HAL_RCC_OscConfig+0x4d6>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800812a:	68fb      	ldr	r3, [r7, #12]
 800812c:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8008130:	687b      	ldr	r3, [r7, #4]
 8008132:	6a1b      	ldr	r3, [r3, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8008134:	429a      	cmp	r2, r3
 8008136:	d11a      	bne.n	800816e <HAL_RCC_OscConfig+0x4d6>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8008138:	68fa      	ldr	r2, [r7, #12]
 800813a:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 800813e:	4013      	ands	r3, r2
 8008140:	687a      	ldr	r2, [r7, #4]
 8008142:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8008144:	0192      	lsls	r2, r2, #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8008146:	4293      	cmp	r3, r2
 8008148:	d111      	bne.n	800816e <HAL_RCC_OscConfig+0x4d6>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800814a:	68fb      	ldr	r3, [r7, #12]
 800814c:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8008150:	687b      	ldr	r3, [r7, #4]
 8008152:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008154:	085b      	lsrs	r3, r3, #1
 8008156:	3b01      	subs	r3, #1
 8008158:	041b      	lsls	r3, r3, #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800815a:	429a      	cmp	r2, r3
 800815c:	d107      	bne.n	800816e <HAL_RCC_OscConfig+0x4d6>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800815e:	68fb      	ldr	r3, [r7, #12]
 8008160:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8008164:	687b      	ldr	r3, [r7, #4]
 8008166:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008168:	061b      	lsls	r3, r3, #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800816a:	429a      	cmp	r2, r3
 800816c:	d001      	beq.n	8008172 <HAL_RCC_OscConfig+0x4da>
#endif
        {
          return HAL_ERROR;
 800816e:	2301      	movs	r3, #1
 8008170:	e000      	b.n	8008174 <HAL_RCC_OscConfig+0x4dc>
        }
      }
    }
  }
  return HAL_OK;
 8008172:	2300      	movs	r3, #0
}
 8008174:	4618      	mov	r0, r3
 8008176:	3718      	adds	r7, #24
 8008178:	46bd      	mov	sp, r7
 800817a:	bd80      	pop	{r7, pc}
 800817c:	40007000 	.word	0x40007000
 8008180:	40023800 	.word	0x40023800
 8008184:	42470060 	.word	0x42470060

08008188 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8008188:	b580      	push	{r7, lr}
 800818a:	b084      	sub	sp, #16
 800818c:	af00      	add	r7, sp, #0
 800818e:	6078      	str	r0, [r7, #4]
 8008190:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8008192:	687b      	ldr	r3, [r7, #4]
 8008194:	2b00      	cmp	r3, #0
 8008196:	d101      	bne.n	800819c <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8008198:	2301      	movs	r3, #1
 800819a:	e0cc      	b.n	8008336 <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800819c:	4b68      	ldr	r3, [pc, #416]	; (8008340 <HAL_RCC_ClockConfig+0x1b8>)
 800819e:	681b      	ldr	r3, [r3, #0]
 80081a0:	f003 0307 	and.w	r3, r3, #7
 80081a4:	683a      	ldr	r2, [r7, #0]
 80081a6:	429a      	cmp	r2, r3
 80081a8:	d90c      	bls.n	80081c4 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80081aa:	4b65      	ldr	r3, [pc, #404]	; (8008340 <HAL_RCC_ClockConfig+0x1b8>)
 80081ac:	683a      	ldr	r2, [r7, #0]
 80081ae:	b2d2      	uxtb	r2, r2
 80081b0:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80081b2:	4b63      	ldr	r3, [pc, #396]	; (8008340 <HAL_RCC_ClockConfig+0x1b8>)
 80081b4:	681b      	ldr	r3, [r3, #0]
 80081b6:	f003 0307 	and.w	r3, r3, #7
 80081ba:	683a      	ldr	r2, [r7, #0]
 80081bc:	429a      	cmp	r2, r3
 80081be:	d001      	beq.n	80081c4 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 80081c0:	2301      	movs	r3, #1
 80081c2:	e0b8      	b.n	8008336 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80081c4:	687b      	ldr	r3, [r7, #4]
 80081c6:	681b      	ldr	r3, [r3, #0]
 80081c8:	f003 0302 	and.w	r3, r3, #2
 80081cc:	2b00      	cmp	r3, #0
 80081ce:	d020      	beq.n	8008212 <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80081d0:	687b      	ldr	r3, [r7, #4]
 80081d2:	681b      	ldr	r3, [r3, #0]
 80081d4:	f003 0304 	and.w	r3, r3, #4
 80081d8:	2b00      	cmp	r3, #0
 80081da:	d005      	beq.n	80081e8 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80081dc:	4b59      	ldr	r3, [pc, #356]	; (8008344 <HAL_RCC_ClockConfig+0x1bc>)
 80081de:	689b      	ldr	r3, [r3, #8]
 80081e0:	4a58      	ldr	r2, [pc, #352]	; (8008344 <HAL_RCC_ClockConfig+0x1bc>)
 80081e2:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 80081e6:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80081e8:	687b      	ldr	r3, [r7, #4]
 80081ea:	681b      	ldr	r3, [r3, #0]
 80081ec:	f003 0308 	and.w	r3, r3, #8
 80081f0:	2b00      	cmp	r3, #0
 80081f2:	d005      	beq.n	8008200 <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80081f4:	4b53      	ldr	r3, [pc, #332]	; (8008344 <HAL_RCC_ClockConfig+0x1bc>)
 80081f6:	689b      	ldr	r3, [r3, #8]
 80081f8:	4a52      	ldr	r2, [pc, #328]	; (8008344 <HAL_RCC_ClockConfig+0x1bc>)
 80081fa:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80081fe:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8008200:	4b50      	ldr	r3, [pc, #320]	; (8008344 <HAL_RCC_ClockConfig+0x1bc>)
 8008202:	689b      	ldr	r3, [r3, #8]
 8008204:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8008208:	687b      	ldr	r3, [r7, #4]
 800820a:	689b      	ldr	r3, [r3, #8]
 800820c:	494d      	ldr	r1, [pc, #308]	; (8008344 <HAL_RCC_ClockConfig+0x1bc>)
 800820e:	4313      	orrs	r3, r2
 8008210:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8008212:	687b      	ldr	r3, [r7, #4]
 8008214:	681b      	ldr	r3, [r3, #0]
 8008216:	f003 0301 	and.w	r3, r3, #1
 800821a:	2b00      	cmp	r3, #0
 800821c:	d044      	beq.n	80082a8 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800821e:	687b      	ldr	r3, [r7, #4]
 8008220:	685b      	ldr	r3, [r3, #4]
 8008222:	2b01      	cmp	r3, #1
 8008224:	d107      	bne.n	8008236 <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8008226:	4b47      	ldr	r3, [pc, #284]	; (8008344 <HAL_RCC_ClockConfig+0x1bc>)
 8008228:	681b      	ldr	r3, [r3, #0]
 800822a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800822e:	2b00      	cmp	r3, #0
 8008230:	d119      	bne.n	8008266 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8008232:	2301      	movs	r3, #1
 8008234:	e07f      	b.n	8008336 <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8008236:	687b      	ldr	r3, [r7, #4]
 8008238:	685b      	ldr	r3, [r3, #4]
 800823a:	2b02      	cmp	r3, #2
 800823c:	d003      	beq.n	8008246 <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 800823e:	687b      	ldr	r3, [r7, #4]
 8008240:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8008242:	2b03      	cmp	r3, #3
 8008244:	d107      	bne.n	8008256 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8008246:	4b3f      	ldr	r3, [pc, #252]	; (8008344 <HAL_RCC_ClockConfig+0x1bc>)
 8008248:	681b      	ldr	r3, [r3, #0]
 800824a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800824e:	2b00      	cmp	r3, #0
 8008250:	d109      	bne.n	8008266 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8008252:	2301      	movs	r3, #1
 8008254:	e06f      	b.n	8008336 <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8008256:	4b3b      	ldr	r3, [pc, #236]	; (8008344 <HAL_RCC_ClockConfig+0x1bc>)
 8008258:	681b      	ldr	r3, [r3, #0]
 800825a:	f003 0302 	and.w	r3, r3, #2
 800825e:	2b00      	cmp	r3, #0
 8008260:	d101      	bne.n	8008266 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8008262:	2301      	movs	r3, #1
 8008264:	e067      	b.n	8008336 <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8008266:	4b37      	ldr	r3, [pc, #220]	; (8008344 <HAL_RCC_ClockConfig+0x1bc>)
 8008268:	689b      	ldr	r3, [r3, #8]
 800826a:	f023 0203 	bic.w	r2, r3, #3
 800826e:	687b      	ldr	r3, [r7, #4]
 8008270:	685b      	ldr	r3, [r3, #4]
 8008272:	4934      	ldr	r1, [pc, #208]	; (8008344 <HAL_RCC_ClockConfig+0x1bc>)
 8008274:	4313      	orrs	r3, r2
 8008276:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8008278:	f7fe fa96 	bl	80067a8 <HAL_GetTick>
 800827c:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800827e:	e00a      	b.n	8008296 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8008280:	f7fe fa92 	bl	80067a8 <HAL_GetTick>
 8008284:	4602      	mov	r2, r0
 8008286:	68fb      	ldr	r3, [r7, #12]
 8008288:	1ad3      	subs	r3, r2, r3
 800828a:	f241 3288 	movw	r2, #5000	; 0x1388
 800828e:	4293      	cmp	r3, r2
 8008290:	d901      	bls.n	8008296 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 8008292:	2303      	movs	r3, #3
 8008294:	e04f      	b.n	8008336 <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8008296:	4b2b      	ldr	r3, [pc, #172]	; (8008344 <HAL_RCC_ClockConfig+0x1bc>)
 8008298:	689b      	ldr	r3, [r3, #8]
 800829a:	f003 020c 	and.w	r2, r3, #12
 800829e:	687b      	ldr	r3, [r7, #4]
 80082a0:	685b      	ldr	r3, [r3, #4]
 80082a2:	009b      	lsls	r3, r3, #2
 80082a4:	429a      	cmp	r2, r3
 80082a6:	d1eb      	bne.n	8008280 <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80082a8:	4b25      	ldr	r3, [pc, #148]	; (8008340 <HAL_RCC_ClockConfig+0x1b8>)
 80082aa:	681b      	ldr	r3, [r3, #0]
 80082ac:	f003 0307 	and.w	r3, r3, #7
 80082b0:	683a      	ldr	r2, [r7, #0]
 80082b2:	429a      	cmp	r2, r3
 80082b4:	d20c      	bcs.n	80082d0 <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80082b6:	4b22      	ldr	r3, [pc, #136]	; (8008340 <HAL_RCC_ClockConfig+0x1b8>)
 80082b8:	683a      	ldr	r2, [r7, #0]
 80082ba:	b2d2      	uxtb	r2, r2
 80082bc:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80082be:	4b20      	ldr	r3, [pc, #128]	; (8008340 <HAL_RCC_ClockConfig+0x1b8>)
 80082c0:	681b      	ldr	r3, [r3, #0]
 80082c2:	f003 0307 	and.w	r3, r3, #7
 80082c6:	683a      	ldr	r2, [r7, #0]
 80082c8:	429a      	cmp	r2, r3
 80082ca:	d001      	beq.n	80082d0 <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 80082cc:	2301      	movs	r3, #1
 80082ce:	e032      	b.n	8008336 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80082d0:	687b      	ldr	r3, [r7, #4]
 80082d2:	681b      	ldr	r3, [r3, #0]
 80082d4:	f003 0304 	and.w	r3, r3, #4
 80082d8:	2b00      	cmp	r3, #0
 80082da:	d008      	beq.n	80082ee <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80082dc:	4b19      	ldr	r3, [pc, #100]	; (8008344 <HAL_RCC_ClockConfig+0x1bc>)
 80082de:	689b      	ldr	r3, [r3, #8]
 80082e0:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 80082e4:	687b      	ldr	r3, [r7, #4]
 80082e6:	68db      	ldr	r3, [r3, #12]
 80082e8:	4916      	ldr	r1, [pc, #88]	; (8008344 <HAL_RCC_ClockConfig+0x1bc>)
 80082ea:	4313      	orrs	r3, r2
 80082ec:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80082ee:	687b      	ldr	r3, [r7, #4]
 80082f0:	681b      	ldr	r3, [r3, #0]
 80082f2:	f003 0308 	and.w	r3, r3, #8
 80082f6:	2b00      	cmp	r3, #0
 80082f8:	d009      	beq.n	800830e <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80082fa:	4b12      	ldr	r3, [pc, #72]	; (8008344 <HAL_RCC_ClockConfig+0x1bc>)
 80082fc:	689b      	ldr	r3, [r3, #8]
 80082fe:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8008302:	687b      	ldr	r3, [r7, #4]
 8008304:	691b      	ldr	r3, [r3, #16]
 8008306:	00db      	lsls	r3, r3, #3
 8008308:	490e      	ldr	r1, [pc, #56]	; (8008344 <HAL_RCC_ClockConfig+0x1bc>)
 800830a:	4313      	orrs	r3, r2
 800830c:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800830e:	f000 f821 	bl	8008354 <HAL_RCC_GetSysClockFreq>
 8008312:	4602      	mov	r2, r0
 8008314:	4b0b      	ldr	r3, [pc, #44]	; (8008344 <HAL_RCC_ClockConfig+0x1bc>)
 8008316:	689b      	ldr	r3, [r3, #8]
 8008318:	091b      	lsrs	r3, r3, #4
 800831a:	f003 030f 	and.w	r3, r3, #15
 800831e:	490a      	ldr	r1, [pc, #40]	; (8008348 <HAL_RCC_ClockConfig+0x1c0>)
 8008320:	5ccb      	ldrb	r3, [r1, r3]
 8008322:	fa22 f303 	lsr.w	r3, r2, r3
 8008326:	4a09      	ldr	r2, [pc, #36]	; (800834c <HAL_RCC_ClockConfig+0x1c4>)
 8008328:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
 800832a:	4b09      	ldr	r3, [pc, #36]	; (8008350 <HAL_RCC_ClockConfig+0x1c8>)
 800832c:	681b      	ldr	r3, [r3, #0]
 800832e:	4618      	mov	r0, r3
 8008330:	f7fe f9f6 	bl	8006720 <HAL_InitTick>

  return HAL_OK;
 8008334:	2300      	movs	r3, #0
}
 8008336:	4618      	mov	r0, r3
 8008338:	3710      	adds	r7, #16
 800833a:	46bd      	mov	sp, r7
 800833c:	bd80      	pop	{r7, pc}
 800833e:	bf00      	nop
 8008340:	40023c00 	.word	0x40023c00
 8008344:	40023800 	.word	0x40023800
 8008348:	08009108 	.word	0x08009108
 800834c:	20000010 	.word	0x20000010
 8008350:	20000014 	.word	0x20000014

08008354 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8008354:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8008358:	b084      	sub	sp, #16
 800835a:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 800835c:	2300      	movs	r3, #0
 800835e:	607b      	str	r3, [r7, #4]
 8008360:	2300      	movs	r3, #0
 8008362:	60fb      	str	r3, [r7, #12]
 8008364:	2300      	movs	r3, #0
 8008366:	603b      	str	r3, [r7, #0]
  uint32_t sysclockfreq = 0U;
 8008368:	2300      	movs	r3, #0
 800836a:	60bb      	str	r3, [r7, #8]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800836c:	4b67      	ldr	r3, [pc, #412]	; (800850c <HAL_RCC_GetSysClockFreq+0x1b8>)
 800836e:	689b      	ldr	r3, [r3, #8]
 8008370:	f003 030c 	and.w	r3, r3, #12
 8008374:	2b08      	cmp	r3, #8
 8008376:	d00d      	beq.n	8008394 <HAL_RCC_GetSysClockFreq+0x40>
 8008378:	2b08      	cmp	r3, #8
 800837a:	f200 80bd 	bhi.w	80084f8 <HAL_RCC_GetSysClockFreq+0x1a4>
 800837e:	2b00      	cmp	r3, #0
 8008380:	d002      	beq.n	8008388 <HAL_RCC_GetSysClockFreq+0x34>
 8008382:	2b04      	cmp	r3, #4
 8008384:	d003      	beq.n	800838e <HAL_RCC_GetSysClockFreq+0x3a>
 8008386:	e0b7      	b.n	80084f8 <HAL_RCC_GetSysClockFreq+0x1a4>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8008388:	4b61      	ldr	r3, [pc, #388]	; (8008510 <HAL_RCC_GetSysClockFreq+0x1bc>)
 800838a:	60bb      	str	r3, [r7, #8]
       break;
 800838c:	e0b7      	b.n	80084fe <HAL_RCC_GetSysClockFreq+0x1aa>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 800838e:	4b61      	ldr	r3, [pc, #388]	; (8008514 <HAL_RCC_GetSysClockFreq+0x1c0>)
 8008390:	60bb      	str	r3, [r7, #8]
      break;
 8008392:	e0b4      	b.n	80084fe <HAL_RCC_GetSysClockFreq+0x1aa>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8008394:	4b5d      	ldr	r3, [pc, #372]	; (800850c <HAL_RCC_GetSysClockFreq+0x1b8>)
 8008396:	685b      	ldr	r3, [r3, #4]
 8008398:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800839c:	607b      	str	r3, [r7, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800839e:	4b5b      	ldr	r3, [pc, #364]	; (800850c <HAL_RCC_GetSysClockFreq+0x1b8>)
 80083a0:	685b      	ldr	r3, [r3, #4]
 80083a2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80083a6:	2b00      	cmp	r3, #0
 80083a8:	d04d      	beq.n	8008446 <HAL_RCC_GetSysClockFreq+0xf2>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80083aa:	4b58      	ldr	r3, [pc, #352]	; (800850c <HAL_RCC_GetSysClockFreq+0x1b8>)
 80083ac:	685b      	ldr	r3, [r3, #4]
 80083ae:	099b      	lsrs	r3, r3, #6
 80083b0:	461a      	mov	r2, r3
 80083b2:	f04f 0300 	mov.w	r3, #0
 80083b6:	f240 10ff 	movw	r0, #511	; 0x1ff
 80083ba:	f04f 0100 	mov.w	r1, #0
 80083be:	ea02 0800 	and.w	r8, r2, r0
 80083c2:	ea03 0901 	and.w	r9, r3, r1
 80083c6:	4640      	mov	r0, r8
 80083c8:	4649      	mov	r1, r9
 80083ca:	f04f 0200 	mov.w	r2, #0
 80083ce:	f04f 0300 	mov.w	r3, #0
 80083d2:	014b      	lsls	r3, r1, #5
 80083d4:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 80083d8:	0142      	lsls	r2, r0, #5
 80083da:	4610      	mov	r0, r2
 80083dc:	4619      	mov	r1, r3
 80083de:	ebb0 0008 	subs.w	r0, r0, r8
 80083e2:	eb61 0109 	sbc.w	r1, r1, r9
 80083e6:	f04f 0200 	mov.w	r2, #0
 80083ea:	f04f 0300 	mov.w	r3, #0
 80083ee:	018b      	lsls	r3, r1, #6
 80083f0:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 80083f4:	0182      	lsls	r2, r0, #6
 80083f6:	1a12      	subs	r2, r2, r0
 80083f8:	eb63 0301 	sbc.w	r3, r3, r1
 80083fc:	f04f 0000 	mov.w	r0, #0
 8008400:	f04f 0100 	mov.w	r1, #0
 8008404:	00d9      	lsls	r1, r3, #3
 8008406:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 800840a:	00d0      	lsls	r0, r2, #3
 800840c:	4602      	mov	r2, r0
 800840e:	460b      	mov	r3, r1
 8008410:	eb12 0208 	adds.w	r2, r2, r8
 8008414:	eb43 0309 	adc.w	r3, r3, r9
 8008418:	f04f 0000 	mov.w	r0, #0
 800841c:	f04f 0100 	mov.w	r1, #0
 8008420:	0259      	lsls	r1, r3, #9
 8008422:	ea41 51d2 	orr.w	r1, r1, r2, lsr #23
 8008426:	0250      	lsls	r0, r2, #9
 8008428:	4602      	mov	r2, r0
 800842a:	460b      	mov	r3, r1
 800842c:	4610      	mov	r0, r2
 800842e:	4619      	mov	r1, r3
 8008430:	687b      	ldr	r3, [r7, #4]
 8008432:	461a      	mov	r2, r3
 8008434:	f04f 0300 	mov.w	r3, #0
 8008438:	f7f7 fec6 	bl	80001c8 <__aeabi_uldivmod>
 800843c:	4602      	mov	r2, r0
 800843e:	460b      	mov	r3, r1
 8008440:	4613      	mov	r3, r2
 8008442:	60fb      	str	r3, [r7, #12]
 8008444:	e04a      	b.n	80084dc <HAL_RCC_GetSysClockFreq+0x188>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008446:	4b31      	ldr	r3, [pc, #196]	; (800850c <HAL_RCC_GetSysClockFreq+0x1b8>)
 8008448:	685b      	ldr	r3, [r3, #4]
 800844a:	099b      	lsrs	r3, r3, #6
 800844c:	461a      	mov	r2, r3
 800844e:	f04f 0300 	mov.w	r3, #0
 8008452:	f240 10ff 	movw	r0, #511	; 0x1ff
 8008456:	f04f 0100 	mov.w	r1, #0
 800845a:	ea02 0400 	and.w	r4, r2, r0
 800845e:	ea03 0501 	and.w	r5, r3, r1
 8008462:	4620      	mov	r0, r4
 8008464:	4629      	mov	r1, r5
 8008466:	f04f 0200 	mov.w	r2, #0
 800846a:	f04f 0300 	mov.w	r3, #0
 800846e:	014b      	lsls	r3, r1, #5
 8008470:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 8008474:	0142      	lsls	r2, r0, #5
 8008476:	4610      	mov	r0, r2
 8008478:	4619      	mov	r1, r3
 800847a:	1b00      	subs	r0, r0, r4
 800847c:	eb61 0105 	sbc.w	r1, r1, r5
 8008480:	f04f 0200 	mov.w	r2, #0
 8008484:	f04f 0300 	mov.w	r3, #0
 8008488:	018b      	lsls	r3, r1, #6
 800848a:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 800848e:	0182      	lsls	r2, r0, #6
 8008490:	1a12      	subs	r2, r2, r0
 8008492:	eb63 0301 	sbc.w	r3, r3, r1
 8008496:	f04f 0000 	mov.w	r0, #0
 800849a:	f04f 0100 	mov.w	r1, #0
 800849e:	00d9      	lsls	r1, r3, #3
 80084a0:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 80084a4:	00d0      	lsls	r0, r2, #3
 80084a6:	4602      	mov	r2, r0
 80084a8:	460b      	mov	r3, r1
 80084aa:	1912      	adds	r2, r2, r4
 80084ac:	eb45 0303 	adc.w	r3, r5, r3
 80084b0:	f04f 0000 	mov.w	r0, #0
 80084b4:	f04f 0100 	mov.w	r1, #0
 80084b8:	0299      	lsls	r1, r3, #10
 80084ba:	ea41 5192 	orr.w	r1, r1, r2, lsr #22
 80084be:	0290      	lsls	r0, r2, #10
 80084c0:	4602      	mov	r2, r0
 80084c2:	460b      	mov	r3, r1
 80084c4:	4610      	mov	r0, r2
 80084c6:	4619      	mov	r1, r3
 80084c8:	687b      	ldr	r3, [r7, #4]
 80084ca:	461a      	mov	r2, r3
 80084cc:	f04f 0300 	mov.w	r3, #0
 80084d0:	f7f7 fe7a 	bl	80001c8 <__aeabi_uldivmod>
 80084d4:	4602      	mov	r2, r0
 80084d6:	460b      	mov	r3, r1
 80084d8:	4613      	mov	r3, r2
 80084da:	60fb      	str	r3, [r7, #12]
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 80084dc:	4b0b      	ldr	r3, [pc, #44]	; (800850c <HAL_RCC_GetSysClockFreq+0x1b8>)
 80084de:	685b      	ldr	r3, [r3, #4]
 80084e0:	0c1b      	lsrs	r3, r3, #16
 80084e2:	f003 0303 	and.w	r3, r3, #3
 80084e6:	3301      	adds	r3, #1
 80084e8:	005b      	lsls	r3, r3, #1
 80084ea:	603b      	str	r3, [r7, #0]

      sysclockfreq = pllvco/pllp;
 80084ec:	68fa      	ldr	r2, [r7, #12]
 80084ee:	683b      	ldr	r3, [r7, #0]
 80084f0:	fbb2 f3f3 	udiv	r3, r2, r3
 80084f4:	60bb      	str	r3, [r7, #8]
      break;
 80084f6:	e002      	b.n	80084fe <HAL_RCC_GetSysClockFreq+0x1aa>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 80084f8:	4b05      	ldr	r3, [pc, #20]	; (8008510 <HAL_RCC_GetSysClockFreq+0x1bc>)
 80084fa:	60bb      	str	r3, [r7, #8]
      break;
 80084fc:	bf00      	nop
    }
  }
  return sysclockfreq;
 80084fe:	68bb      	ldr	r3, [r7, #8]
}
 8008500:	4618      	mov	r0, r3
 8008502:	3710      	adds	r7, #16
 8008504:	46bd      	mov	sp, r7
 8008506:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 800850a:	bf00      	nop
 800850c:	40023800 	.word	0x40023800
 8008510:	00f42400 	.word	0x00f42400
 8008514:	007a1200 	.word	0x007a1200

08008518 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8008518:	b480      	push	{r7}
 800851a:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 800851c:	4b03      	ldr	r3, [pc, #12]	; (800852c <HAL_RCC_GetHCLKFreq+0x14>)
 800851e:	681b      	ldr	r3, [r3, #0]
}
 8008520:	4618      	mov	r0, r3
 8008522:	46bd      	mov	sp, r7
 8008524:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008528:	4770      	bx	lr
 800852a:	bf00      	nop
 800852c:	20000010 	.word	0x20000010

08008530 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8008530:	b580      	push	{r7, lr}
 8008532:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8008534:	f7ff fff0 	bl	8008518 <HAL_RCC_GetHCLKFreq>
 8008538:	4602      	mov	r2, r0
 800853a:	4b05      	ldr	r3, [pc, #20]	; (8008550 <HAL_RCC_GetPCLK1Freq+0x20>)
 800853c:	689b      	ldr	r3, [r3, #8]
 800853e:	0a9b      	lsrs	r3, r3, #10
 8008540:	f003 0307 	and.w	r3, r3, #7
 8008544:	4903      	ldr	r1, [pc, #12]	; (8008554 <HAL_RCC_GetPCLK1Freq+0x24>)
 8008546:	5ccb      	ldrb	r3, [r1, r3]
 8008548:	fa22 f303 	lsr.w	r3, r2, r3
}
 800854c:	4618      	mov	r0, r3
 800854e:	bd80      	pop	{r7, pc}
 8008550:	40023800 	.word	0x40023800
 8008554:	08009118 	.word	0x08009118

08008558 <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8008558:	b580      	push	{r7, lr}
 800855a:	b082      	sub	sp, #8
 800855c:	af00      	add	r7, sp, #0
 800855e:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8008560:	687b      	ldr	r3, [r7, #4]
 8008562:	2b00      	cmp	r3, #0
 8008564:	d101      	bne.n	800856a <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 8008566:	2301      	movs	r3, #1
 8008568:	e041      	b.n	80085ee <HAL_TIM_Base_Init+0x96>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800856a:	687b      	ldr	r3, [r7, #4]
 800856c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8008570:	b2db      	uxtb	r3, r3
 8008572:	2b00      	cmp	r3, #0
 8008574:	d106      	bne.n	8008584 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8008576:	687b      	ldr	r3, [r7, #4]
 8008578:	2200      	movs	r2, #0
 800857a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 800857e:	6878      	ldr	r0, [r7, #4]
 8008580:	f7fe f826 	bl	80065d0 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8008584:	687b      	ldr	r3, [r7, #4]
 8008586:	2202      	movs	r2, #2
 8008588:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800858c:	687b      	ldr	r3, [r7, #4]
 800858e:	681a      	ldr	r2, [r3, #0]
 8008590:	687b      	ldr	r3, [r7, #4]
 8008592:	3304      	adds	r3, #4
 8008594:	4619      	mov	r1, r3
 8008596:	4610      	mov	r0, r2
 8008598:	f000 f994 	bl	80088c4 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800859c:	687b      	ldr	r3, [r7, #4]
 800859e:	2201      	movs	r2, #1
 80085a0:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80085a4:	687b      	ldr	r3, [r7, #4]
 80085a6:	2201      	movs	r2, #1
 80085a8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80085ac:	687b      	ldr	r3, [r7, #4]
 80085ae:	2201      	movs	r2, #1
 80085b0:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80085b4:	687b      	ldr	r3, [r7, #4]
 80085b6:	2201      	movs	r2, #1
 80085b8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80085bc:	687b      	ldr	r3, [r7, #4]
 80085be:	2201      	movs	r2, #1
 80085c0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80085c4:	687b      	ldr	r3, [r7, #4]
 80085c6:	2201      	movs	r2, #1
 80085c8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80085cc:	687b      	ldr	r3, [r7, #4]
 80085ce:	2201      	movs	r2, #1
 80085d0:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80085d4:	687b      	ldr	r3, [r7, #4]
 80085d6:	2201      	movs	r2, #1
 80085d8:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80085dc:	687b      	ldr	r3, [r7, #4]
 80085de:	2201      	movs	r2, #1
 80085e0:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 80085e4:	687b      	ldr	r3, [r7, #4]
 80085e6:	2201      	movs	r2, #1
 80085e8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 80085ec:	2300      	movs	r3, #0
}
 80085ee:	4618      	mov	r0, r3
 80085f0:	3708      	adds	r7, #8
 80085f2:	46bd      	mov	sp, r7
 80085f4:	bd80      	pop	{r7, pc}
	...

080085f8 <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
 80085f8:	b480      	push	{r7}
 80085fa:	b085      	sub	sp, #20
 80085fc:	af00      	add	r7, sp, #0
 80085fe:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8008600:	687b      	ldr	r3, [r7, #4]
 8008602:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8008606:	b2db      	uxtb	r3, r3
 8008608:	2b01      	cmp	r3, #1
 800860a:	d001      	beq.n	8008610 <HAL_TIM_Base_Start_IT+0x18>
  {
    return HAL_ERROR;
 800860c:	2301      	movs	r3, #1
 800860e:	e04e      	b.n	80086ae <HAL_TIM_Base_Start_IT+0xb6>
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8008610:	687b      	ldr	r3, [r7, #4]
 8008612:	2202      	movs	r2, #2
 8008614:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8008618:	687b      	ldr	r3, [r7, #4]
 800861a:	681b      	ldr	r3, [r3, #0]
 800861c:	68da      	ldr	r2, [r3, #12]
 800861e:	687b      	ldr	r3, [r7, #4]
 8008620:	681b      	ldr	r3, [r3, #0]
 8008622:	f042 0201 	orr.w	r2, r2, #1
 8008626:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8008628:	687b      	ldr	r3, [r7, #4]
 800862a:	681b      	ldr	r3, [r3, #0]
 800862c:	4a23      	ldr	r2, [pc, #140]	; (80086bc <HAL_TIM_Base_Start_IT+0xc4>)
 800862e:	4293      	cmp	r3, r2
 8008630:	d022      	beq.n	8008678 <HAL_TIM_Base_Start_IT+0x80>
 8008632:	687b      	ldr	r3, [r7, #4]
 8008634:	681b      	ldr	r3, [r3, #0]
 8008636:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800863a:	d01d      	beq.n	8008678 <HAL_TIM_Base_Start_IT+0x80>
 800863c:	687b      	ldr	r3, [r7, #4]
 800863e:	681b      	ldr	r3, [r3, #0]
 8008640:	4a1f      	ldr	r2, [pc, #124]	; (80086c0 <HAL_TIM_Base_Start_IT+0xc8>)
 8008642:	4293      	cmp	r3, r2
 8008644:	d018      	beq.n	8008678 <HAL_TIM_Base_Start_IT+0x80>
 8008646:	687b      	ldr	r3, [r7, #4]
 8008648:	681b      	ldr	r3, [r3, #0]
 800864a:	4a1e      	ldr	r2, [pc, #120]	; (80086c4 <HAL_TIM_Base_Start_IT+0xcc>)
 800864c:	4293      	cmp	r3, r2
 800864e:	d013      	beq.n	8008678 <HAL_TIM_Base_Start_IT+0x80>
 8008650:	687b      	ldr	r3, [r7, #4]
 8008652:	681b      	ldr	r3, [r3, #0]
 8008654:	4a1c      	ldr	r2, [pc, #112]	; (80086c8 <HAL_TIM_Base_Start_IT+0xd0>)
 8008656:	4293      	cmp	r3, r2
 8008658:	d00e      	beq.n	8008678 <HAL_TIM_Base_Start_IT+0x80>
 800865a:	687b      	ldr	r3, [r7, #4]
 800865c:	681b      	ldr	r3, [r3, #0]
 800865e:	4a1b      	ldr	r2, [pc, #108]	; (80086cc <HAL_TIM_Base_Start_IT+0xd4>)
 8008660:	4293      	cmp	r3, r2
 8008662:	d009      	beq.n	8008678 <HAL_TIM_Base_Start_IT+0x80>
 8008664:	687b      	ldr	r3, [r7, #4]
 8008666:	681b      	ldr	r3, [r3, #0]
 8008668:	4a19      	ldr	r2, [pc, #100]	; (80086d0 <HAL_TIM_Base_Start_IT+0xd8>)
 800866a:	4293      	cmp	r3, r2
 800866c:	d004      	beq.n	8008678 <HAL_TIM_Base_Start_IT+0x80>
 800866e:	687b      	ldr	r3, [r7, #4]
 8008670:	681b      	ldr	r3, [r3, #0]
 8008672:	4a18      	ldr	r2, [pc, #96]	; (80086d4 <HAL_TIM_Base_Start_IT+0xdc>)
 8008674:	4293      	cmp	r3, r2
 8008676:	d111      	bne.n	800869c <HAL_TIM_Base_Start_IT+0xa4>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8008678:	687b      	ldr	r3, [r7, #4]
 800867a:	681b      	ldr	r3, [r3, #0]
 800867c:	689b      	ldr	r3, [r3, #8]
 800867e:	f003 0307 	and.w	r3, r3, #7
 8008682:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8008684:	68fb      	ldr	r3, [r7, #12]
 8008686:	2b06      	cmp	r3, #6
 8008688:	d010      	beq.n	80086ac <HAL_TIM_Base_Start_IT+0xb4>
    {
      __HAL_TIM_ENABLE(htim);
 800868a:	687b      	ldr	r3, [r7, #4]
 800868c:	681b      	ldr	r3, [r3, #0]
 800868e:	681a      	ldr	r2, [r3, #0]
 8008690:	687b      	ldr	r3, [r7, #4]
 8008692:	681b      	ldr	r3, [r3, #0]
 8008694:	f042 0201 	orr.w	r2, r2, #1
 8008698:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800869a:	e007      	b.n	80086ac <HAL_TIM_Base_Start_IT+0xb4>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800869c:	687b      	ldr	r3, [r7, #4]
 800869e:	681b      	ldr	r3, [r3, #0]
 80086a0:	681a      	ldr	r2, [r3, #0]
 80086a2:	687b      	ldr	r3, [r7, #4]
 80086a4:	681b      	ldr	r3, [r3, #0]
 80086a6:	f042 0201 	orr.w	r2, r2, #1
 80086aa:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 80086ac:	2300      	movs	r3, #0
}
 80086ae:	4618      	mov	r0, r3
 80086b0:	3714      	adds	r7, #20
 80086b2:	46bd      	mov	sp, r7
 80086b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086b8:	4770      	bx	lr
 80086ba:	bf00      	nop
 80086bc:	40010000 	.word	0x40010000
 80086c0:	40000400 	.word	0x40000400
 80086c4:	40000800 	.word	0x40000800
 80086c8:	40000c00 	.word	0x40000c00
 80086cc:	40010400 	.word	0x40010400
 80086d0:	40014000 	.word	0x40014000
 80086d4:	40001800 	.word	0x40001800

080086d8 <HAL_TIM_Base_Stop_IT>:
  * @brief  Stops the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Stop_IT(TIM_HandleTypeDef *htim)
{
 80086d8:	b480      	push	{r7}
 80086da:	b083      	sub	sp, #12
 80086dc:	af00      	add	r7, sp, #0
 80086de:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Disable the TIM Update interrupt */
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_UPDATE);
 80086e0:	687b      	ldr	r3, [r7, #4]
 80086e2:	681b      	ldr	r3, [r3, #0]
 80086e4:	68da      	ldr	r2, [r3, #12]
 80086e6:	687b      	ldr	r3, [r7, #4]
 80086e8:	681b      	ldr	r3, [r3, #0]
 80086ea:	f022 0201 	bic.w	r2, r2, #1
 80086ee:	60da      	str	r2, [r3, #12]

  /* Disable the Peripheral */
  __HAL_TIM_DISABLE(htim);
 80086f0:	687b      	ldr	r3, [r7, #4]
 80086f2:	681b      	ldr	r3, [r3, #0]
 80086f4:	6a1a      	ldr	r2, [r3, #32]
 80086f6:	f241 1311 	movw	r3, #4369	; 0x1111
 80086fa:	4013      	ands	r3, r2
 80086fc:	2b00      	cmp	r3, #0
 80086fe:	d10f      	bne.n	8008720 <HAL_TIM_Base_Stop_IT+0x48>
 8008700:	687b      	ldr	r3, [r7, #4]
 8008702:	681b      	ldr	r3, [r3, #0]
 8008704:	6a1a      	ldr	r2, [r3, #32]
 8008706:	f240 4344 	movw	r3, #1092	; 0x444
 800870a:	4013      	ands	r3, r2
 800870c:	2b00      	cmp	r3, #0
 800870e:	d107      	bne.n	8008720 <HAL_TIM_Base_Stop_IT+0x48>
 8008710:	687b      	ldr	r3, [r7, #4]
 8008712:	681b      	ldr	r3, [r3, #0]
 8008714:	681a      	ldr	r2, [r3, #0]
 8008716:	687b      	ldr	r3, [r7, #4]
 8008718:	681b      	ldr	r3, [r3, #0]
 800871a:	f022 0201 	bic.w	r2, r2, #1
 800871e:	601a      	str	r2, [r3, #0]

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_READY;
 8008720:	687b      	ldr	r3, [r7, #4]
 8008722:	2201      	movs	r2, #1
 8008724:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Return function status */
  return HAL_OK;
 8008728:	2300      	movs	r3, #0
}
 800872a:	4618      	mov	r0, r3
 800872c:	370c      	adds	r7, #12
 800872e:	46bd      	mov	sp, r7
 8008730:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008734:	4770      	bx	lr

08008736 <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 8008736:	b580      	push	{r7, lr}
 8008738:	b084      	sub	sp, #16
 800873a:	af00      	add	r7, sp, #0
 800873c:	6078      	str	r0, [r7, #4]
 800873e:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8008740:	2300      	movs	r3, #0
 8008742:	73fb      	strb	r3, [r7, #15]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 8008744:	687b      	ldr	r3, [r7, #4]
 8008746:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800874a:	2b01      	cmp	r3, #1
 800874c:	d101      	bne.n	8008752 <HAL_TIM_ConfigClockSource+0x1c>
 800874e:	2302      	movs	r3, #2
 8008750:	e0b4      	b.n	80088bc <HAL_TIM_ConfigClockSource+0x186>
 8008752:	687b      	ldr	r3, [r7, #4]
 8008754:	2201      	movs	r2, #1
 8008756:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 800875a:	687b      	ldr	r3, [r7, #4]
 800875c:	2202      	movs	r2, #2
 800875e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 8008762:	687b      	ldr	r3, [r7, #4]
 8008764:	681b      	ldr	r3, [r3, #0]
 8008766:	689b      	ldr	r3, [r3, #8]
 8008768:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 800876a:	68bb      	ldr	r3, [r7, #8]
 800876c:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8008770:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8008772:	68bb      	ldr	r3, [r7, #8]
 8008774:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8008778:	60bb      	str	r3, [r7, #8]
  htim->Instance->SMCR = tmpsmcr;
 800877a:	687b      	ldr	r3, [r7, #4]
 800877c:	681b      	ldr	r3, [r3, #0]
 800877e:	68ba      	ldr	r2, [r7, #8]
 8008780:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 8008782:	683b      	ldr	r3, [r7, #0]
 8008784:	681b      	ldr	r3, [r3, #0]
 8008786:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800878a:	d03e      	beq.n	800880a <HAL_TIM_ConfigClockSource+0xd4>
 800878c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008790:	f200 8087 	bhi.w	80088a2 <HAL_TIM_ConfigClockSource+0x16c>
 8008794:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008798:	f000 8086 	beq.w	80088a8 <HAL_TIM_ConfigClockSource+0x172>
 800879c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80087a0:	d87f      	bhi.n	80088a2 <HAL_TIM_ConfigClockSource+0x16c>
 80087a2:	2b70      	cmp	r3, #112	; 0x70
 80087a4:	d01a      	beq.n	80087dc <HAL_TIM_ConfigClockSource+0xa6>
 80087a6:	2b70      	cmp	r3, #112	; 0x70
 80087a8:	d87b      	bhi.n	80088a2 <HAL_TIM_ConfigClockSource+0x16c>
 80087aa:	2b60      	cmp	r3, #96	; 0x60
 80087ac:	d050      	beq.n	8008850 <HAL_TIM_ConfigClockSource+0x11a>
 80087ae:	2b60      	cmp	r3, #96	; 0x60
 80087b0:	d877      	bhi.n	80088a2 <HAL_TIM_ConfigClockSource+0x16c>
 80087b2:	2b50      	cmp	r3, #80	; 0x50
 80087b4:	d03c      	beq.n	8008830 <HAL_TIM_ConfigClockSource+0xfa>
 80087b6:	2b50      	cmp	r3, #80	; 0x50
 80087b8:	d873      	bhi.n	80088a2 <HAL_TIM_ConfigClockSource+0x16c>
 80087ba:	2b40      	cmp	r3, #64	; 0x40
 80087bc:	d058      	beq.n	8008870 <HAL_TIM_ConfigClockSource+0x13a>
 80087be:	2b40      	cmp	r3, #64	; 0x40
 80087c0:	d86f      	bhi.n	80088a2 <HAL_TIM_ConfigClockSource+0x16c>
 80087c2:	2b30      	cmp	r3, #48	; 0x30
 80087c4:	d064      	beq.n	8008890 <HAL_TIM_ConfigClockSource+0x15a>
 80087c6:	2b30      	cmp	r3, #48	; 0x30
 80087c8:	d86b      	bhi.n	80088a2 <HAL_TIM_ConfigClockSource+0x16c>
 80087ca:	2b20      	cmp	r3, #32
 80087cc:	d060      	beq.n	8008890 <HAL_TIM_ConfigClockSource+0x15a>
 80087ce:	2b20      	cmp	r3, #32
 80087d0:	d867      	bhi.n	80088a2 <HAL_TIM_ConfigClockSource+0x16c>
 80087d2:	2b00      	cmp	r3, #0
 80087d4:	d05c      	beq.n	8008890 <HAL_TIM_ConfigClockSource+0x15a>
 80087d6:	2b10      	cmp	r3, #16
 80087d8:	d05a      	beq.n	8008890 <HAL_TIM_ConfigClockSource+0x15a>
 80087da:	e062      	b.n	80088a2 <HAL_TIM_ConfigClockSource+0x16c>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 80087dc:	687b      	ldr	r3, [r7, #4]
 80087de:	6818      	ldr	r0, [r3, #0]
 80087e0:	683b      	ldr	r3, [r7, #0]
 80087e2:	6899      	ldr	r1, [r3, #8]
 80087e4:	683b      	ldr	r3, [r7, #0]
 80087e6:	685a      	ldr	r2, [r3, #4]
 80087e8:	683b      	ldr	r3, [r7, #0]
 80087ea:	68db      	ldr	r3, [r3, #12]
 80087ec:	f000 f984 	bl	8008af8 <TIM_ETR_SetConfig>
                        sClockSourceConfig->ClockPrescaler,
                        sClockSourceConfig->ClockPolarity,
                        sClockSourceConfig->ClockFilter);

      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr = htim->Instance->SMCR;
 80087f0:	687b      	ldr	r3, [r7, #4]
 80087f2:	681b      	ldr	r3, [r3, #0]
 80087f4:	689b      	ldr	r3, [r3, #8]
 80087f6:	60bb      	str	r3, [r7, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 80087f8:	68bb      	ldr	r3, [r7, #8]
 80087fa:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 80087fe:	60bb      	str	r3, [r7, #8]
      /* Write to TIMx SMCR */
      htim->Instance->SMCR = tmpsmcr;
 8008800:	687b      	ldr	r3, [r7, #4]
 8008802:	681b      	ldr	r3, [r3, #0]
 8008804:	68ba      	ldr	r2, [r7, #8]
 8008806:	609a      	str	r2, [r3, #8]
      break;
 8008808:	e04f      	b.n	80088aa <HAL_TIM_ConfigClockSource+0x174>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 800880a:	687b      	ldr	r3, [r7, #4]
 800880c:	6818      	ldr	r0, [r3, #0]
 800880e:	683b      	ldr	r3, [r7, #0]
 8008810:	6899      	ldr	r1, [r3, #8]
 8008812:	683b      	ldr	r3, [r7, #0]
 8008814:	685a      	ldr	r2, [r3, #4]
 8008816:	683b      	ldr	r3, [r7, #0]
 8008818:	68db      	ldr	r3, [r3, #12]
 800881a:	f000 f96d 	bl	8008af8 <TIM_ETR_SetConfig>
                        sClockSourceConfig->ClockPrescaler,
                        sClockSourceConfig->ClockPolarity,
                        sClockSourceConfig->ClockFilter);
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800881e:	687b      	ldr	r3, [r7, #4]
 8008820:	681b      	ldr	r3, [r3, #0]
 8008822:	689a      	ldr	r2, [r3, #8]
 8008824:	687b      	ldr	r3, [r7, #4]
 8008826:	681b      	ldr	r3, [r3, #0]
 8008828:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800882c:	609a      	str	r2, [r3, #8]
      break;
 800882e:	e03c      	b.n	80088aa <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 8008830:	687b      	ldr	r3, [r7, #4]
 8008832:	6818      	ldr	r0, [r3, #0]
 8008834:	683b      	ldr	r3, [r7, #0]
 8008836:	6859      	ldr	r1, [r3, #4]
 8008838:	683b      	ldr	r3, [r7, #0]
 800883a:	68db      	ldr	r3, [r3, #12]
 800883c:	461a      	mov	r2, r3
 800883e:	f000 f8e1 	bl	8008a04 <TIM_TI1_ConfigInputStage>
                               sClockSourceConfig->ClockPolarity,
                               sClockSourceConfig->ClockFilter);
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 8008842:	687b      	ldr	r3, [r7, #4]
 8008844:	681b      	ldr	r3, [r3, #0]
 8008846:	2150      	movs	r1, #80	; 0x50
 8008848:	4618      	mov	r0, r3
 800884a:	f000 f93a 	bl	8008ac2 <TIM_ITRx_SetConfig>
      break;
 800884e:	e02c      	b.n	80088aa <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI2 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance,
 8008850:	687b      	ldr	r3, [r7, #4]
 8008852:	6818      	ldr	r0, [r3, #0]
 8008854:	683b      	ldr	r3, [r7, #0]
 8008856:	6859      	ldr	r1, [r3, #4]
 8008858:	683b      	ldr	r3, [r7, #0]
 800885a:	68db      	ldr	r3, [r3, #12]
 800885c:	461a      	mov	r2, r3
 800885e:	f000 f900 	bl	8008a62 <TIM_TI2_ConfigInputStage>
                               sClockSourceConfig->ClockPolarity,
                               sClockSourceConfig->ClockFilter);
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 8008862:	687b      	ldr	r3, [r7, #4]
 8008864:	681b      	ldr	r3, [r3, #0]
 8008866:	2160      	movs	r1, #96	; 0x60
 8008868:	4618      	mov	r0, r3
 800886a:	f000 f92a 	bl	8008ac2 <TIM_ITRx_SetConfig>
      break;
 800886e:	e01c      	b.n	80088aa <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 8008870:	687b      	ldr	r3, [r7, #4]
 8008872:	6818      	ldr	r0, [r3, #0]
 8008874:	683b      	ldr	r3, [r7, #0]
 8008876:	6859      	ldr	r1, [r3, #4]
 8008878:	683b      	ldr	r3, [r7, #0]
 800887a:	68db      	ldr	r3, [r3, #12]
 800887c:	461a      	mov	r2, r3
 800887e:	f000 f8c1 	bl	8008a04 <TIM_TI1_ConfigInputStage>
                               sClockSourceConfig->ClockPolarity,
                               sClockSourceConfig->ClockFilter);
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 8008882:	687b      	ldr	r3, [r7, #4]
 8008884:	681b      	ldr	r3, [r3, #0]
 8008886:	2140      	movs	r1, #64	; 0x40
 8008888:	4618      	mov	r0, r3
 800888a:	f000 f91a 	bl	8008ac2 <TIM_ITRx_SetConfig>
      break;
 800888e:	e00c      	b.n	80088aa <HAL_TIM_ConfigClockSource+0x174>
    case TIM_CLOCKSOURCE_ITR3:
    {
      /* Check whether or not the timer instance supports internal trigger input */
      assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));

      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 8008890:	687b      	ldr	r3, [r7, #4]
 8008892:	681a      	ldr	r2, [r3, #0]
 8008894:	683b      	ldr	r3, [r7, #0]
 8008896:	681b      	ldr	r3, [r3, #0]
 8008898:	4619      	mov	r1, r3
 800889a:	4610      	mov	r0, r2
 800889c:	f000 f911 	bl	8008ac2 <TIM_ITRx_SetConfig>
      break;
 80088a0:	e003      	b.n	80088aa <HAL_TIM_ConfigClockSource+0x174>
    }

    default:
      status = HAL_ERROR;
 80088a2:	2301      	movs	r3, #1
 80088a4:	73fb      	strb	r3, [r7, #15]
      break;
 80088a6:	e000      	b.n	80088aa <HAL_TIM_ConfigClockSource+0x174>
      break;
 80088a8:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 80088aa:	687b      	ldr	r3, [r7, #4]
 80088ac:	2201      	movs	r2, #1
 80088ae:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 80088b2:	687b      	ldr	r3, [r7, #4]
 80088b4:	2200      	movs	r2, #0
 80088b6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return status;
 80088ba:	7bfb      	ldrb	r3, [r7, #15]
}
 80088bc:	4618      	mov	r0, r3
 80088be:	3710      	adds	r7, #16
 80088c0:	46bd      	mov	sp, r7
 80088c2:	bd80      	pop	{r7, pc}

080088c4 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, TIM_Base_InitTypeDef *Structure)
{
 80088c4:	b480      	push	{r7}
 80088c6:	b085      	sub	sp, #20
 80088c8:	af00      	add	r7, sp, #0
 80088ca:	6078      	str	r0, [r7, #4]
 80088cc:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 80088ce:	687b      	ldr	r3, [r7, #4]
 80088d0:	681b      	ldr	r3, [r3, #0]
 80088d2:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80088d4:	687b      	ldr	r3, [r7, #4]
 80088d6:	4a40      	ldr	r2, [pc, #256]	; (80089d8 <TIM_Base_SetConfig+0x114>)
 80088d8:	4293      	cmp	r3, r2
 80088da:	d013      	beq.n	8008904 <TIM_Base_SetConfig+0x40>
 80088dc:	687b      	ldr	r3, [r7, #4]
 80088de:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80088e2:	d00f      	beq.n	8008904 <TIM_Base_SetConfig+0x40>
 80088e4:	687b      	ldr	r3, [r7, #4]
 80088e6:	4a3d      	ldr	r2, [pc, #244]	; (80089dc <TIM_Base_SetConfig+0x118>)
 80088e8:	4293      	cmp	r3, r2
 80088ea:	d00b      	beq.n	8008904 <TIM_Base_SetConfig+0x40>
 80088ec:	687b      	ldr	r3, [r7, #4]
 80088ee:	4a3c      	ldr	r2, [pc, #240]	; (80089e0 <TIM_Base_SetConfig+0x11c>)
 80088f0:	4293      	cmp	r3, r2
 80088f2:	d007      	beq.n	8008904 <TIM_Base_SetConfig+0x40>
 80088f4:	687b      	ldr	r3, [r7, #4]
 80088f6:	4a3b      	ldr	r2, [pc, #236]	; (80089e4 <TIM_Base_SetConfig+0x120>)
 80088f8:	4293      	cmp	r3, r2
 80088fa:	d003      	beq.n	8008904 <TIM_Base_SetConfig+0x40>
 80088fc:	687b      	ldr	r3, [r7, #4]
 80088fe:	4a3a      	ldr	r2, [pc, #232]	; (80089e8 <TIM_Base_SetConfig+0x124>)
 8008900:	4293      	cmp	r3, r2
 8008902:	d108      	bne.n	8008916 <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8008904:	68fb      	ldr	r3, [r7, #12]
 8008906:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800890a:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 800890c:	683b      	ldr	r3, [r7, #0]
 800890e:	685b      	ldr	r3, [r3, #4]
 8008910:	68fa      	ldr	r2, [r7, #12]
 8008912:	4313      	orrs	r3, r2
 8008914:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8008916:	687b      	ldr	r3, [r7, #4]
 8008918:	4a2f      	ldr	r2, [pc, #188]	; (80089d8 <TIM_Base_SetConfig+0x114>)
 800891a:	4293      	cmp	r3, r2
 800891c:	d02b      	beq.n	8008976 <TIM_Base_SetConfig+0xb2>
 800891e:	687b      	ldr	r3, [r7, #4]
 8008920:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008924:	d027      	beq.n	8008976 <TIM_Base_SetConfig+0xb2>
 8008926:	687b      	ldr	r3, [r7, #4]
 8008928:	4a2c      	ldr	r2, [pc, #176]	; (80089dc <TIM_Base_SetConfig+0x118>)
 800892a:	4293      	cmp	r3, r2
 800892c:	d023      	beq.n	8008976 <TIM_Base_SetConfig+0xb2>
 800892e:	687b      	ldr	r3, [r7, #4]
 8008930:	4a2b      	ldr	r2, [pc, #172]	; (80089e0 <TIM_Base_SetConfig+0x11c>)
 8008932:	4293      	cmp	r3, r2
 8008934:	d01f      	beq.n	8008976 <TIM_Base_SetConfig+0xb2>
 8008936:	687b      	ldr	r3, [r7, #4]
 8008938:	4a2a      	ldr	r2, [pc, #168]	; (80089e4 <TIM_Base_SetConfig+0x120>)
 800893a:	4293      	cmp	r3, r2
 800893c:	d01b      	beq.n	8008976 <TIM_Base_SetConfig+0xb2>
 800893e:	687b      	ldr	r3, [r7, #4]
 8008940:	4a29      	ldr	r2, [pc, #164]	; (80089e8 <TIM_Base_SetConfig+0x124>)
 8008942:	4293      	cmp	r3, r2
 8008944:	d017      	beq.n	8008976 <TIM_Base_SetConfig+0xb2>
 8008946:	687b      	ldr	r3, [r7, #4]
 8008948:	4a28      	ldr	r2, [pc, #160]	; (80089ec <TIM_Base_SetConfig+0x128>)
 800894a:	4293      	cmp	r3, r2
 800894c:	d013      	beq.n	8008976 <TIM_Base_SetConfig+0xb2>
 800894e:	687b      	ldr	r3, [r7, #4]
 8008950:	4a27      	ldr	r2, [pc, #156]	; (80089f0 <TIM_Base_SetConfig+0x12c>)
 8008952:	4293      	cmp	r3, r2
 8008954:	d00f      	beq.n	8008976 <TIM_Base_SetConfig+0xb2>
 8008956:	687b      	ldr	r3, [r7, #4]
 8008958:	4a26      	ldr	r2, [pc, #152]	; (80089f4 <TIM_Base_SetConfig+0x130>)
 800895a:	4293      	cmp	r3, r2
 800895c:	d00b      	beq.n	8008976 <TIM_Base_SetConfig+0xb2>
 800895e:	687b      	ldr	r3, [r7, #4]
 8008960:	4a25      	ldr	r2, [pc, #148]	; (80089f8 <TIM_Base_SetConfig+0x134>)
 8008962:	4293      	cmp	r3, r2
 8008964:	d007      	beq.n	8008976 <TIM_Base_SetConfig+0xb2>
 8008966:	687b      	ldr	r3, [r7, #4]
 8008968:	4a24      	ldr	r2, [pc, #144]	; (80089fc <TIM_Base_SetConfig+0x138>)
 800896a:	4293      	cmp	r3, r2
 800896c:	d003      	beq.n	8008976 <TIM_Base_SetConfig+0xb2>
 800896e:	687b      	ldr	r3, [r7, #4]
 8008970:	4a23      	ldr	r2, [pc, #140]	; (8008a00 <TIM_Base_SetConfig+0x13c>)
 8008972:	4293      	cmp	r3, r2
 8008974:	d108      	bne.n	8008988 <TIM_Base_SetConfig+0xc4>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8008976:	68fb      	ldr	r3, [r7, #12]
 8008978:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800897c:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800897e:	683b      	ldr	r3, [r7, #0]
 8008980:	68db      	ldr	r3, [r3, #12]
 8008982:	68fa      	ldr	r2, [r7, #12]
 8008984:	4313      	orrs	r3, r2
 8008986:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8008988:	68fb      	ldr	r3, [r7, #12]
 800898a:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800898e:	683b      	ldr	r3, [r7, #0]
 8008990:	695b      	ldr	r3, [r3, #20]
 8008992:	4313      	orrs	r3, r2
 8008994:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 8008996:	687b      	ldr	r3, [r7, #4]
 8008998:	68fa      	ldr	r2, [r7, #12]
 800899a:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800899c:	683b      	ldr	r3, [r7, #0]
 800899e:	689a      	ldr	r2, [r3, #8]
 80089a0:	687b      	ldr	r3, [r7, #4]
 80089a2:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80089a4:	683b      	ldr	r3, [r7, #0]
 80089a6:	681a      	ldr	r2, [r3, #0]
 80089a8:	687b      	ldr	r3, [r7, #4]
 80089aa:	629a      	str	r2, [r3, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80089ac:	687b      	ldr	r3, [r7, #4]
 80089ae:	4a0a      	ldr	r2, [pc, #40]	; (80089d8 <TIM_Base_SetConfig+0x114>)
 80089b0:	4293      	cmp	r3, r2
 80089b2:	d003      	beq.n	80089bc <TIM_Base_SetConfig+0xf8>
 80089b4:	687b      	ldr	r3, [r7, #4]
 80089b6:	4a0c      	ldr	r2, [pc, #48]	; (80089e8 <TIM_Base_SetConfig+0x124>)
 80089b8:	4293      	cmp	r3, r2
 80089ba:	d103      	bne.n	80089c4 <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80089bc:	683b      	ldr	r3, [r7, #0]
 80089be:	691a      	ldr	r2, [r3, #16]
 80089c0:	687b      	ldr	r3, [r7, #4]
 80089c2:	631a      	str	r2, [r3, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80089c4:	687b      	ldr	r3, [r7, #4]
 80089c6:	2201      	movs	r2, #1
 80089c8:	615a      	str	r2, [r3, #20]
}
 80089ca:	bf00      	nop
 80089cc:	3714      	adds	r7, #20
 80089ce:	46bd      	mov	sp, r7
 80089d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089d4:	4770      	bx	lr
 80089d6:	bf00      	nop
 80089d8:	40010000 	.word	0x40010000
 80089dc:	40000400 	.word	0x40000400
 80089e0:	40000800 	.word	0x40000800
 80089e4:	40000c00 	.word	0x40000c00
 80089e8:	40010400 	.word	0x40010400
 80089ec:	40014000 	.word	0x40014000
 80089f0:	40014400 	.word	0x40014400
 80089f4:	40014800 	.word	0x40014800
 80089f8:	40001800 	.word	0x40001800
 80089fc:	40001c00 	.word	0x40001c00
 8008a00:	40002000 	.word	0x40002000

08008a04 <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8008a04:	b480      	push	{r7}
 8008a06:	b087      	sub	sp, #28
 8008a08:	af00      	add	r7, sp, #0
 8008a0a:	60f8      	str	r0, [r7, #12]
 8008a0c:	60b9      	str	r1, [r7, #8]
 8008a0e:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 8008a10:	68fb      	ldr	r3, [r7, #12]
 8008a12:	6a1b      	ldr	r3, [r3, #32]
 8008a14:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8008a16:	68fb      	ldr	r3, [r7, #12]
 8008a18:	6a1b      	ldr	r3, [r3, #32]
 8008a1a:	f023 0201 	bic.w	r2, r3, #1
 8008a1e:	68fb      	ldr	r3, [r7, #12]
 8008a20:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8008a22:	68fb      	ldr	r3, [r7, #12]
 8008a24:	699b      	ldr	r3, [r3, #24]
 8008a26:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8008a28:	693b      	ldr	r3, [r7, #16]
 8008a2a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8008a2e:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8008a30:	687b      	ldr	r3, [r7, #4]
 8008a32:	011b      	lsls	r3, r3, #4
 8008a34:	693a      	ldr	r2, [r7, #16]
 8008a36:	4313      	orrs	r3, r2
 8008a38:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8008a3a:	697b      	ldr	r3, [r7, #20]
 8008a3c:	f023 030a 	bic.w	r3, r3, #10
 8008a40:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 8008a42:	697a      	ldr	r2, [r7, #20]
 8008a44:	68bb      	ldr	r3, [r7, #8]
 8008a46:	4313      	orrs	r3, r2
 8008a48:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 8008a4a:	68fb      	ldr	r3, [r7, #12]
 8008a4c:	693a      	ldr	r2, [r7, #16]
 8008a4e:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8008a50:	68fb      	ldr	r3, [r7, #12]
 8008a52:	697a      	ldr	r2, [r7, #20]
 8008a54:	621a      	str	r2, [r3, #32]
}
 8008a56:	bf00      	nop
 8008a58:	371c      	adds	r7, #28
 8008a5a:	46bd      	mov	sp, r7
 8008a5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a60:	4770      	bx	lr

08008a62 <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8008a62:	b480      	push	{r7}
 8008a64:	b087      	sub	sp, #28
 8008a66:	af00      	add	r7, sp, #0
 8008a68:	60f8      	str	r0, [r7, #12]
 8008a6a:	60b9      	str	r1, [r7, #8]
 8008a6c:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8008a6e:	68fb      	ldr	r3, [r7, #12]
 8008a70:	6a1b      	ldr	r3, [r3, #32]
 8008a72:	f023 0210 	bic.w	r2, r3, #16
 8008a76:	68fb      	ldr	r3, [r7, #12]
 8008a78:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8008a7a:	68fb      	ldr	r3, [r7, #12]
 8008a7c:	699b      	ldr	r3, [r3, #24]
 8008a7e:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 8008a80:	68fb      	ldr	r3, [r7, #12]
 8008a82:	6a1b      	ldr	r3, [r3, #32]
 8008a84:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8008a86:	697b      	ldr	r3, [r7, #20]
 8008a88:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8008a8c:	617b      	str	r3, [r7, #20]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8008a8e:	687b      	ldr	r3, [r7, #4]
 8008a90:	031b      	lsls	r3, r3, #12
 8008a92:	697a      	ldr	r2, [r7, #20]
 8008a94:	4313      	orrs	r3, r2
 8008a96:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8008a98:	693b      	ldr	r3, [r7, #16]
 8008a9a:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8008a9e:	613b      	str	r3, [r7, #16]
  tmpccer |= (TIM_ICPolarity << 4U);
 8008aa0:	68bb      	ldr	r3, [r7, #8]
 8008aa2:	011b      	lsls	r3, r3, #4
 8008aa4:	693a      	ldr	r2, [r7, #16]
 8008aa6:	4313      	orrs	r3, r2
 8008aa8:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 8008aaa:	68fb      	ldr	r3, [r7, #12]
 8008aac:	697a      	ldr	r2, [r7, #20]
 8008aae:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8008ab0:	68fb      	ldr	r3, [r7, #12]
 8008ab2:	693a      	ldr	r2, [r7, #16]
 8008ab4:	621a      	str	r2, [r3, #32]
}
 8008ab6:	bf00      	nop
 8008ab8:	371c      	adds	r7, #28
 8008aba:	46bd      	mov	sp, r7
 8008abc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ac0:	4770      	bx	lr

08008ac2 <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 8008ac2:	b480      	push	{r7}
 8008ac4:	b085      	sub	sp, #20
 8008ac6:	af00      	add	r7, sp, #0
 8008ac8:	6078      	str	r0, [r7, #4]
 8008aca:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 8008acc:	687b      	ldr	r3, [r7, #4]
 8008ace:	689b      	ldr	r3, [r3, #8]
 8008ad0:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 8008ad2:	68fb      	ldr	r3, [r7, #12]
 8008ad4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008ad8:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8008ada:	683a      	ldr	r2, [r7, #0]
 8008adc:	68fb      	ldr	r3, [r7, #12]
 8008ade:	4313      	orrs	r3, r2
 8008ae0:	f043 0307 	orr.w	r3, r3, #7
 8008ae4:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8008ae6:	687b      	ldr	r3, [r7, #4]
 8008ae8:	68fa      	ldr	r2, [r7, #12]
 8008aea:	609a      	str	r2, [r3, #8]
}
 8008aec:	bf00      	nop
 8008aee:	3714      	adds	r7, #20
 8008af0:	46bd      	mov	sp, r7
 8008af2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008af6:	4770      	bx	lr

08008af8 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 8008af8:	b480      	push	{r7}
 8008afa:	b087      	sub	sp, #28
 8008afc:	af00      	add	r7, sp, #0
 8008afe:	60f8      	str	r0, [r7, #12]
 8008b00:	60b9      	str	r1, [r7, #8]
 8008b02:	607a      	str	r2, [r7, #4]
 8008b04:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 8008b06:	68fb      	ldr	r3, [r7, #12]
 8008b08:	689b      	ldr	r3, [r3, #8]
 8008b0a:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8008b0c:	697b      	ldr	r3, [r7, #20]
 8008b0e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8008b12:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8008b14:	683b      	ldr	r3, [r7, #0]
 8008b16:	021a      	lsls	r2, r3, #8
 8008b18:	687b      	ldr	r3, [r7, #4]
 8008b1a:	431a      	orrs	r2, r3
 8008b1c:	68bb      	ldr	r3, [r7, #8]
 8008b1e:	4313      	orrs	r3, r2
 8008b20:	697a      	ldr	r2, [r7, #20]
 8008b22:	4313      	orrs	r3, r2
 8008b24:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8008b26:	68fb      	ldr	r3, [r7, #12]
 8008b28:	697a      	ldr	r2, [r7, #20]
 8008b2a:	609a      	str	r2, [r3, #8]
}
 8008b2c:	bf00      	nop
 8008b2e:	371c      	adds	r7, #28
 8008b30:	46bd      	mov	sp, r7
 8008b32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b36:	4770      	bx	lr

08008b38 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 8008b38:	b480      	push	{r7}
 8008b3a:	b085      	sub	sp, #20
 8008b3c:	af00      	add	r7, sp, #0
 8008b3e:	6078      	str	r0, [r7, #4]
 8008b40:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8008b42:	687b      	ldr	r3, [r7, #4]
 8008b44:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8008b48:	2b01      	cmp	r3, #1
 8008b4a:	d101      	bne.n	8008b50 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8008b4c:	2302      	movs	r3, #2
 8008b4e:	e05a      	b.n	8008c06 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8008b50:	687b      	ldr	r3, [r7, #4]
 8008b52:	2201      	movs	r2, #1
 8008b54:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8008b58:	687b      	ldr	r3, [r7, #4]
 8008b5a:	2202      	movs	r2, #2
 8008b5c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8008b60:	687b      	ldr	r3, [r7, #4]
 8008b62:	681b      	ldr	r3, [r3, #0]
 8008b64:	685b      	ldr	r3, [r3, #4]
 8008b66:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8008b68:	687b      	ldr	r3, [r7, #4]
 8008b6a:	681b      	ldr	r3, [r3, #0]
 8008b6c:	689b      	ldr	r3, [r3, #8]
 8008b6e:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8008b70:	68fb      	ldr	r3, [r7, #12]
 8008b72:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008b76:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8008b78:	683b      	ldr	r3, [r7, #0]
 8008b7a:	681b      	ldr	r3, [r3, #0]
 8008b7c:	68fa      	ldr	r2, [r7, #12]
 8008b7e:	4313      	orrs	r3, r2
 8008b80:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8008b82:	687b      	ldr	r3, [r7, #4]
 8008b84:	681b      	ldr	r3, [r3, #0]
 8008b86:	68fa      	ldr	r2, [r7, #12]
 8008b88:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8008b8a:	687b      	ldr	r3, [r7, #4]
 8008b8c:	681b      	ldr	r3, [r3, #0]
 8008b8e:	4a21      	ldr	r2, [pc, #132]	; (8008c14 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8008b90:	4293      	cmp	r3, r2
 8008b92:	d022      	beq.n	8008bda <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8008b94:	687b      	ldr	r3, [r7, #4]
 8008b96:	681b      	ldr	r3, [r3, #0]
 8008b98:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008b9c:	d01d      	beq.n	8008bda <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8008b9e:	687b      	ldr	r3, [r7, #4]
 8008ba0:	681b      	ldr	r3, [r3, #0]
 8008ba2:	4a1d      	ldr	r2, [pc, #116]	; (8008c18 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8008ba4:	4293      	cmp	r3, r2
 8008ba6:	d018      	beq.n	8008bda <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8008ba8:	687b      	ldr	r3, [r7, #4]
 8008baa:	681b      	ldr	r3, [r3, #0]
 8008bac:	4a1b      	ldr	r2, [pc, #108]	; (8008c1c <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8008bae:	4293      	cmp	r3, r2
 8008bb0:	d013      	beq.n	8008bda <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8008bb2:	687b      	ldr	r3, [r7, #4]
 8008bb4:	681b      	ldr	r3, [r3, #0]
 8008bb6:	4a1a      	ldr	r2, [pc, #104]	; (8008c20 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8008bb8:	4293      	cmp	r3, r2
 8008bba:	d00e      	beq.n	8008bda <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8008bbc:	687b      	ldr	r3, [r7, #4]
 8008bbe:	681b      	ldr	r3, [r3, #0]
 8008bc0:	4a18      	ldr	r2, [pc, #96]	; (8008c24 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8008bc2:	4293      	cmp	r3, r2
 8008bc4:	d009      	beq.n	8008bda <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8008bc6:	687b      	ldr	r3, [r7, #4]
 8008bc8:	681b      	ldr	r3, [r3, #0]
 8008bca:	4a17      	ldr	r2, [pc, #92]	; (8008c28 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8008bcc:	4293      	cmp	r3, r2
 8008bce:	d004      	beq.n	8008bda <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8008bd0:	687b      	ldr	r3, [r7, #4]
 8008bd2:	681b      	ldr	r3, [r3, #0]
 8008bd4:	4a15      	ldr	r2, [pc, #84]	; (8008c2c <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8008bd6:	4293      	cmp	r3, r2
 8008bd8:	d10c      	bne.n	8008bf4 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 8008bda:	68bb      	ldr	r3, [r7, #8]
 8008bdc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8008be0:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8008be2:	683b      	ldr	r3, [r7, #0]
 8008be4:	685b      	ldr	r3, [r3, #4]
 8008be6:	68ba      	ldr	r2, [r7, #8]
 8008be8:	4313      	orrs	r3, r2
 8008bea:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8008bec:	687b      	ldr	r3, [r7, #4]
 8008bee:	681b      	ldr	r3, [r3, #0]
 8008bf0:	68ba      	ldr	r2, [r7, #8]
 8008bf2:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8008bf4:	687b      	ldr	r3, [r7, #4]
 8008bf6:	2201      	movs	r2, #1
 8008bf8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8008bfc:	687b      	ldr	r3, [r7, #4]
 8008bfe:	2200      	movs	r2, #0
 8008c00:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 8008c04:	2300      	movs	r3, #0
}
 8008c06:	4618      	mov	r0, r3
 8008c08:	3714      	adds	r7, #20
 8008c0a:	46bd      	mov	sp, r7
 8008c0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c10:	4770      	bx	lr
 8008c12:	bf00      	nop
 8008c14:	40010000 	.word	0x40010000
 8008c18:	40000400 	.word	0x40000400
 8008c1c:	40000800 	.word	0x40000800
 8008c20:	40000c00 	.word	0x40000c00
 8008c24:	40010400 	.word	0x40010400
 8008c28:	40014000 	.word	0x40014000
 8008c2c:	40001800 	.word	0x40001800

08008c30 <__libc_init_array>:
 8008c30:	b570      	push	{r4, r5, r6, lr}
 8008c32:	4d0d      	ldr	r5, [pc, #52]	; (8008c68 <__libc_init_array+0x38>)
 8008c34:	4c0d      	ldr	r4, [pc, #52]	; (8008c6c <__libc_init_array+0x3c>)
 8008c36:	1b64      	subs	r4, r4, r5
 8008c38:	10a4      	asrs	r4, r4, #2
 8008c3a:	2600      	movs	r6, #0
 8008c3c:	42a6      	cmp	r6, r4
 8008c3e:	d109      	bne.n	8008c54 <__libc_init_array+0x24>
 8008c40:	4d0b      	ldr	r5, [pc, #44]	; (8008c70 <__libc_init_array+0x40>)
 8008c42:	4c0c      	ldr	r4, [pc, #48]	; (8008c74 <__libc_init_array+0x44>)
 8008c44:	f000 f87c 	bl	8008d40 <_init>
 8008c48:	1b64      	subs	r4, r4, r5
 8008c4a:	10a4      	asrs	r4, r4, #2
 8008c4c:	2600      	movs	r6, #0
 8008c4e:	42a6      	cmp	r6, r4
 8008c50:	d105      	bne.n	8008c5e <__libc_init_array+0x2e>
 8008c52:	bd70      	pop	{r4, r5, r6, pc}
 8008c54:	f855 3b04 	ldr.w	r3, [r5], #4
 8008c58:	4798      	blx	r3
 8008c5a:	3601      	adds	r6, #1
 8008c5c:	e7ee      	b.n	8008c3c <__libc_init_array+0xc>
 8008c5e:	f855 3b04 	ldr.w	r3, [r5], #4
 8008c62:	4798      	blx	r3
 8008c64:	3601      	adds	r6, #1
 8008c66:	e7f2      	b.n	8008c4e <__libc_init_array+0x1e>
 8008c68:	08009150 	.word	0x08009150
 8008c6c:	08009150 	.word	0x08009150
 8008c70:	08009150 	.word	0x08009150
 8008c74:	08009154 	.word	0x08009154

08008c78 <__itoa>:
 8008c78:	1e93      	subs	r3, r2, #2
 8008c7a:	2b22      	cmp	r3, #34	; 0x22
 8008c7c:	b510      	push	{r4, lr}
 8008c7e:	460c      	mov	r4, r1
 8008c80:	d904      	bls.n	8008c8c <__itoa+0x14>
 8008c82:	2300      	movs	r3, #0
 8008c84:	700b      	strb	r3, [r1, #0]
 8008c86:	461c      	mov	r4, r3
 8008c88:	4620      	mov	r0, r4
 8008c8a:	bd10      	pop	{r4, pc}
 8008c8c:	2a0a      	cmp	r2, #10
 8008c8e:	d109      	bne.n	8008ca4 <__itoa+0x2c>
 8008c90:	2800      	cmp	r0, #0
 8008c92:	da07      	bge.n	8008ca4 <__itoa+0x2c>
 8008c94:	232d      	movs	r3, #45	; 0x2d
 8008c96:	700b      	strb	r3, [r1, #0]
 8008c98:	4240      	negs	r0, r0
 8008c9a:	2101      	movs	r1, #1
 8008c9c:	4421      	add	r1, r4
 8008c9e:	f000 f80d 	bl	8008cbc <__utoa>
 8008ca2:	e7f1      	b.n	8008c88 <__itoa+0x10>
 8008ca4:	2100      	movs	r1, #0
 8008ca6:	e7f9      	b.n	8008c9c <__itoa+0x24>

08008ca8 <itoa>:
 8008ca8:	f7ff bfe6 	b.w	8008c78 <__itoa>

08008cac <memset>:
 8008cac:	4402      	add	r2, r0
 8008cae:	4603      	mov	r3, r0
 8008cb0:	4293      	cmp	r3, r2
 8008cb2:	d100      	bne.n	8008cb6 <memset+0xa>
 8008cb4:	4770      	bx	lr
 8008cb6:	f803 1b01 	strb.w	r1, [r3], #1
 8008cba:	e7f9      	b.n	8008cb0 <memset+0x4>

08008cbc <__utoa>:
 8008cbc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008cbe:	4c1f      	ldr	r4, [pc, #124]	; (8008d3c <__utoa+0x80>)
 8008cc0:	b08b      	sub	sp, #44	; 0x2c
 8008cc2:	4605      	mov	r5, r0
 8008cc4:	460b      	mov	r3, r1
 8008cc6:	466e      	mov	r6, sp
 8008cc8:	f104 0c20 	add.w	ip, r4, #32
 8008ccc:	6820      	ldr	r0, [r4, #0]
 8008cce:	6861      	ldr	r1, [r4, #4]
 8008cd0:	4637      	mov	r7, r6
 8008cd2:	c703      	stmia	r7!, {r0, r1}
 8008cd4:	3408      	adds	r4, #8
 8008cd6:	4564      	cmp	r4, ip
 8008cd8:	463e      	mov	r6, r7
 8008cda:	d1f7      	bne.n	8008ccc <__utoa+0x10>
 8008cdc:	7921      	ldrb	r1, [r4, #4]
 8008cde:	7139      	strb	r1, [r7, #4]
 8008ce0:	1e91      	subs	r1, r2, #2
 8008ce2:	6820      	ldr	r0, [r4, #0]
 8008ce4:	6038      	str	r0, [r7, #0]
 8008ce6:	2922      	cmp	r1, #34	; 0x22
 8008ce8:	f04f 0100 	mov.w	r1, #0
 8008cec:	d904      	bls.n	8008cf8 <__utoa+0x3c>
 8008cee:	7019      	strb	r1, [r3, #0]
 8008cf0:	460b      	mov	r3, r1
 8008cf2:	4618      	mov	r0, r3
 8008cf4:	b00b      	add	sp, #44	; 0x2c
 8008cf6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008cf8:	1e58      	subs	r0, r3, #1
 8008cfa:	4684      	mov	ip, r0
 8008cfc:	fbb5 f7f2 	udiv	r7, r5, r2
 8008d00:	f10d 0e28 	add.w	lr, sp, #40	; 0x28
 8008d04:	fb02 5617 	mls	r6, r2, r7, r5
 8008d08:	4476      	add	r6, lr
 8008d0a:	460c      	mov	r4, r1
 8008d0c:	f816 6c28 	ldrb.w	r6, [r6, #-40]
 8008d10:	f80c 6f01 	strb.w	r6, [ip, #1]!
 8008d14:	462e      	mov	r6, r5
 8008d16:	42b2      	cmp	r2, r6
 8008d18:	f101 0101 	add.w	r1, r1, #1
 8008d1c:	463d      	mov	r5, r7
 8008d1e:	d9ed      	bls.n	8008cfc <__utoa+0x40>
 8008d20:	2200      	movs	r2, #0
 8008d22:	545a      	strb	r2, [r3, r1]
 8008d24:	1919      	adds	r1, r3, r4
 8008d26:	1aa5      	subs	r5, r4, r2
 8008d28:	42aa      	cmp	r2, r5
 8008d2a:	dae2      	bge.n	8008cf2 <__utoa+0x36>
 8008d2c:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 8008d30:	780e      	ldrb	r6, [r1, #0]
 8008d32:	7006      	strb	r6, [r0, #0]
 8008d34:	3201      	adds	r2, #1
 8008d36:	f801 5901 	strb.w	r5, [r1], #-1
 8008d3a:	e7f4      	b.n	8008d26 <__utoa+0x6a>
 8008d3c:	08009120 	.word	0x08009120

08008d40 <_init>:
 8008d40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008d42:	bf00      	nop
 8008d44:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008d46:	bc08      	pop	{r3}
 8008d48:	469e      	mov	lr, r3
 8008d4a:	4770      	bx	lr

08008d4c <_fini>:
 8008d4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008d4e:	bf00      	nop
 8008d50:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008d52:	bc08      	pop	{r3}
 8008d54:	469e      	mov	lr, r3
 8008d56:	4770      	bx	lr
